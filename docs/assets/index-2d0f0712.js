(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const i of o)if(i.type==="childList")for(const l of i.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&n(l)}).observe(document,{childList:!0,subtree:!0});function s(o){const i={};return o.integrity&&(i.integrity=o.integrity),o.referrerpolicy&&(i.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?i.credentials="include":o.crossorigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(o){if(o.ep)return;o.ep=!0;const i=s(o);fetch(o.href,i)}})();function qs(e,t){const s=Object.create(null),n=e.split(",");for(let o=0;o<n.length;o++)s[n[o]]=!0;return t?o=>!!s[o.toLowerCase()]:o=>!!s[o]}function Es(e){if(O(e)){const t={};for(let s=0;s<e.length;s++){const n=e[s],o=se(n)?Bo(n):Es(n);if(o)for(const i in o)t[i]=o[i]}return t}else{if(se(e))return e;if(ee(e))return e}}const Lo=/;(?![^(]*\))/g,Ao=/:([^]+)/,Io=/\/\*.*?\*\//gs;function Bo(e){const t={};return e.replace(Io,"").split(Lo).forEach(s=>{if(s){const n=s.split(Ao);n.length>1&&(t[n[0].trim()]=n[1].trim())}}),t}function Ts(e){let t="";if(se(e))t=e;else if(O(e))for(let s=0;s<e.length;s++){const n=Ts(e[s]);n&&(t+=n+" ")}else if(ee(e))for(const s in e)e[s]&&(t+=s+" ");return t.trim()}const No="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",Oo=qs(No);function Nn(e){return!!e||e===""}const W={},it=[],$e=()=>{},Mo=()=>!1,jo=/^on[^a-z]/,Vt=e=>jo.test(e),Ls=e=>e.startsWith("onUpdate:"),ie=Object.assign,As=(e,t)=>{const s=e.indexOf(t);s>-1&&e.splice(s,1)},Fo=Object.prototype.hasOwnProperty,k=(e,t)=>Fo.call(e,t),O=Array.isArray,gt=e=>zt(e)==="[object Map]",ko=e=>zt(e)==="[object Set]",M=e=>typeof e=="function",se=e=>typeof e=="string",Is=e=>typeof e=="symbol",ee=e=>e!==null&&typeof e=="object",On=e=>ee(e)&&M(e.then)&&M(e.catch),Jo=Object.prototype.toString,zt=e=>Jo.call(e),Ho=e=>zt(e).slice(8,-1),Ro=e=>zt(e)==="[object Object]",Bs=e=>se(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,Bt=qs(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),Ut=e=>{const t=Object.create(null);return s=>t[s]||(t[s]=e(s))},Vo=/-(\w)/g,at=Ut(e=>e.replace(Vo,(t,s)=>s?s.toUpperCase():"")),zo=/\B([A-Z])/g,dt=Ut(e=>e.replace(zo,"-$1").toLowerCase()),Mn=Ut(e=>e.charAt(0).toUpperCase()+e.slice(1)),os=Ut(e=>e?`on${Mn(e)}`:""),Ft=(e,t)=>!Object.is(e,t),is=(e,t)=>{for(let s=0;s<e.length;s++)e[s](t)},kt=(e,t,s)=>{Object.defineProperty(e,t,{configurable:!0,enumerable:!1,value:s})},Uo=e=>{const t=parseFloat(e);return isNaN(t)?e:t};let an;const Wo=()=>an||(an=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});let ve;class Ko{constructor(t=!1){this.detached=t,this._active=!0,this.effects=[],this.cleanups=[],this.parent=ve,!t&&ve&&(this.index=(ve.scopes||(ve.scopes=[])).push(this)-1)}get active(){return this._active}run(t){if(this._active){const s=ve;try{return ve=this,t()}finally{ve=s}}}on(){ve=this}off(){ve=this.parent}stop(t){if(this._active){let s,n;for(s=0,n=this.effects.length;s<n;s++)this.effects[s].stop();for(s=0,n=this.cleanups.length;s<n;s++)this.cleanups[s]();if(this.scopes)for(s=0,n=this.scopes.length;s<n;s++)this.scopes[s].stop(!0);if(!this.detached&&this.parent&&!t){const o=this.parent.scopes.pop();o&&o!==this&&(this.parent.scopes[this.index]=o,o.index=this.index)}this.parent=void 0,this._active=!1}}}function Qo(e,t=ve){t&&t.active&&t.effects.push(e)}function Xo(){return ve}const Ns=e=>{const t=new Set(e);return t.w=0,t.n=0,t},jn=e=>(e.w&Je)>0,Fn=e=>(e.n&Je)>0,Yo=({deps:e})=>{if(e.length)for(let t=0;t<e.length;t++)e[t].w|=Je},Go=e=>{const{deps:t}=e;if(t.length){let s=0;for(let n=0;n<t.length;n++){const o=t[n];jn(o)&&!Fn(o)?o.delete(e):t[s++]=o,o.w&=~Je,o.n&=~Je}t.length=s}},us=new WeakMap;let _t=0,Je=1;const fs=30;let ye;const Ze=Symbol(""),hs=Symbol("");class Os{constructor(t,s=null,n){this.fn=t,this.scheduler=s,this.active=!0,this.deps=[],this.parent=void 0,Qo(this,n)}run(){if(!this.active)return this.fn();let t=ye,s=Fe;for(;t;){if(t===this)return;t=t.parent}try{return this.parent=ye,ye=this,Fe=!0,Je=1<<++_t,_t<=fs?Yo(this):cn(this),this.fn()}finally{_t<=fs&&Go(this),Je=1<<--_t,ye=this.parent,Fe=s,this.parent=void 0,this.deferStop&&this.stop()}}stop(){ye===this?this.deferStop=!0:this.active&&(cn(this),this.onStop&&this.onStop(),this.active=!1)}}function cn(e){const{deps:t}=e;if(t.length){for(let s=0;s<t.length;s++)t[s].delete(e);t.length=0}}let Fe=!0;const kn=[];function pt(){kn.push(Fe),Fe=!1}function ut(){const e=kn.pop();Fe=e===void 0?!0:e}function pe(e,t,s){if(Fe&&ye){let n=us.get(e);n||us.set(e,n=new Map);let o=n.get(s);o||n.set(s,o=Ns()),Jn(o)}}function Jn(e,t){let s=!1;_t<=fs?Fn(e)||(e.n|=Je,s=!jn(e)):s=!e.has(ye),s&&(e.add(ye),ye.deps.push(e))}function Be(e,t,s,n,o,i){const l=us.get(e);if(!l)return;let c=[];if(t==="clear")c=[...l.values()];else if(s==="length"&&O(e)){const p=Number(n);l.forEach((g,b)=>{(b==="length"||b>=p)&&c.push(g)})}else switch(s!==void 0&&c.push(l.get(s)),t){case"add":O(e)?Bs(s)&&c.push(l.get("length")):(c.push(l.get(Ze)),gt(e)&&c.push(l.get(hs)));break;case"delete":O(e)||(c.push(l.get(Ze)),gt(e)&&c.push(l.get(hs)));break;case"set":gt(e)&&c.push(l.get(Ze));break}if(c.length===1)c[0]&&_s(c[0]);else{const p=[];for(const g of c)g&&p.push(...g);_s(Ns(p))}}function _s(e,t){const s=O(e)?e:[...e];for(const n of s)n.computed&&dn(n);for(const n of s)n.computed||dn(n)}function dn(e,t){(e!==ye||e.allowRecurse)&&(e.scheduler?e.scheduler():e.run())}const Zo=qs("__proto__,__v_isRef,__isVue"),Hn=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(Is)),ei=Ms(),ti=Ms(!1,!0),si=Ms(!0),pn=ni();function ni(){const e={};return["includes","indexOf","lastIndexOf"].forEach(t=>{e[t]=function(...s){const n=J(this);for(let i=0,l=this.length;i<l;i++)pe(n,"get",i+"");const o=n[t](...s);return o===-1||o===!1?n[t](...s.map(J)):o}}),["push","pop","shift","unshift","splice"].forEach(t=>{e[t]=function(...s){pt();const n=J(this)[t].apply(this,s);return ut(),n}}),e}function oi(e){const t=J(this);return pe(t,"has",e),t.hasOwnProperty(e)}function Ms(e=!1,t=!1){return function(n,o,i){if(o==="__v_isReactive")return!e;if(o==="__v_isReadonly")return e;if(o==="__v_isShallow")return t;if(o==="__v_raw"&&i===(e?t?bi:Wn:t?Un:zn).get(n))return n;const l=O(n);if(!e){if(l&&k(pn,o))return Reflect.get(pn,o,i);if(o==="hasOwnProperty")return oi}const c=Reflect.get(n,o,i);return(Is(o)?Hn.has(o):Zo(o))||(e||pe(n,"get",o),t)?c:ae(c)?l&&Bs(o)?c:c.value:ee(c)?e?Kn(c):ks(c):c}}const ii=Rn(),li=Rn(!0);function Rn(e=!1){return function(s,n,o,i){let l=s[n];if(wt(l)&&ae(l)&&!ae(o))return!1;if(!e&&(!ms(o)&&!wt(o)&&(l=J(l),o=J(o)),!O(s)&&ae(l)&&!ae(o)))return l.value=o,!0;const c=O(s)&&Bs(n)?Number(n)<s.length:k(s,n),p=Reflect.set(s,n,o,i);return s===J(i)&&(c?Ft(o,l)&&Be(s,"set",n,o):Be(s,"add",n,o)),p}}function ri(e,t){const s=k(e,t);e[t];const n=Reflect.deleteProperty(e,t);return n&&s&&Be(e,"delete",t,void 0),n}function ai(e,t){const s=Reflect.has(e,t);return(!Is(t)||!Hn.has(t))&&pe(e,"has",t),s}function ci(e){return pe(e,"iterate",O(e)?"length":Ze),Reflect.ownKeys(e)}const Vn={get:ei,set:ii,deleteProperty:ri,has:ai,ownKeys:ci},di={get:si,set(e,t){return!0},deleteProperty(e,t){return!0}},pi=ie({},Vn,{get:ti,set:li}),js=e=>e,Wt=e=>Reflect.getPrototypeOf(e);function qt(e,t,s=!1,n=!1){e=e.__v_raw;const o=J(e),i=J(t);s||(t!==i&&pe(o,"get",t),pe(o,"get",i));const{has:l}=Wt(o),c=n?js:s?Rs:Hs;if(l.call(o,t))return c(e.get(t));if(l.call(o,i))return c(e.get(i));e!==o&&e.get(t)}function Et(e,t=!1){const s=this.__v_raw,n=J(s),o=J(e);return t||(e!==o&&pe(n,"has",e),pe(n,"has",o)),e===o?s.has(e):s.has(e)||s.has(o)}function Tt(e,t=!1){return e=e.__v_raw,!t&&pe(J(e),"iterate",Ze),Reflect.get(e,"size",e)}function un(e){e=J(e);const t=J(this);return Wt(t).has.call(t,e)||(t.add(e),Be(t,"add",e,e)),this}function fn(e,t){t=J(t);const s=J(this),{has:n,get:o}=Wt(s);let i=n.call(s,e);i||(e=J(e),i=n.call(s,e));const l=o.call(s,e);return s.set(e,t),i?Ft(t,l)&&Be(s,"set",e,t):Be(s,"add",e,t),this}function hn(e){const t=J(this),{has:s,get:n}=Wt(t);let o=s.call(t,e);o||(e=J(e),o=s.call(t,e)),n&&n.call(t,e);const i=t.delete(e);return o&&Be(t,"delete",e,void 0),i}function _n(){const e=J(this),t=e.size!==0,s=e.clear();return t&&Be(e,"clear",void 0,void 0),s}function Lt(e,t){return function(n,o){const i=this,l=i.__v_raw,c=J(l),p=t?js:e?Rs:Hs;return!e&&pe(c,"iterate",Ze),l.forEach((g,b)=>n.call(o,p(g),p(b),i))}}function At(e,t,s){return function(...n){const o=this.__v_raw,i=J(o),l=gt(i),c=e==="entries"||e===Symbol.iterator&&l,p=e==="keys"&&l,g=o[e](...n),b=s?js:t?Rs:Hs;return!t&&pe(i,"iterate",p?hs:Ze),{next(){const{value:C,done:q}=g.next();return q?{value:C,done:q}:{value:c?[b(C[0]),b(C[1])]:b(C),done:q}},[Symbol.iterator](){return this}}}}function Me(e){return function(...t){return e==="delete"?!1:this}}function ui(){const e={get(i){return qt(this,i)},get size(){return Tt(this)},has:Et,add:un,set:fn,delete:hn,clear:_n,forEach:Lt(!1,!1)},t={get(i){return qt(this,i,!1,!0)},get size(){return Tt(this)},has:Et,add:un,set:fn,delete:hn,clear:_n,forEach:Lt(!1,!0)},s={get(i){return qt(this,i,!0)},get size(){return Tt(this,!0)},has(i){return Et.call(this,i,!0)},add:Me("add"),set:Me("set"),delete:Me("delete"),clear:Me("clear"),forEach:Lt(!0,!1)},n={get(i){return qt(this,i,!0,!0)},get size(){return Tt(this,!0)},has(i){return Et.call(this,i,!0)},add:Me("add"),set:Me("set"),delete:Me("delete"),clear:Me("clear"),forEach:Lt(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(i=>{e[i]=At(i,!1,!1),s[i]=At(i,!0,!1),t[i]=At(i,!1,!0),n[i]=At(i,!0,!0)}),[e,s,t,n]}const[fi,hi,_i,mi]=ui();function Fs(e,t){const s=t?e?mi:_i:e?hi:fi;return(n,o,i)=>o==="__v_isReactive"?!e:o==="__v_isReadonly"?e:o==="__v_raw"?n:Reflect.get(k(s,o)&&o in n?s:n,o,i)}const gi={get:Fs(!1,!1)},vi={get:Fs(!1,!0)},yi={get:Fs(!0,!1)},zn=new WeakMap,Un=new WeakMap,Wn=new WeakMap,bi=new WeakMap;function wi(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function $i(e){return e.__v_skip||!Object.isExtensible(e)?0:wi(Ho(e))}function ks(e){return wt(e)?e:Js(e,!1,Vn,gi,zn)}function xi(e){return Js(e,!1,pi,vi,Un)}function Kn(e){return Js(e,!0,di,yi,Wn)}function Js(e,t,s,n,o){if(!ee(e)||e.__v_raw&&!(t&&e.__v_isReactive))return e;const i=o.get(e);if(i)return i;const l=$i(e);if(l===0)return e;const c=new Proxy(e,l===2?n:s);return o.set(e,c),c}function lt(e){return wt(e)?lt(e.__v_raw):!!(e&&e.__v_isReactive)}function wt(e){return!!(e&&e.__v_isReadonly)}function ms(e){return!!(e&&e.__v_isShallow)}function Qn(e){return lt(e)||wt(e)}function J(e){const t=e&&e.__v_raw;return t?J(t):e}function Xn(e){return kt(e,"__v_skip",!0),e}const Hs=e=>ee(e)?ks(e):e,Rs=e=>ee(e)?Kn(e):e;function Pi(e){Fe&&ye&&(e=J(e),Jn(e.dep||(e.dep=Ns())))}function Si(e,t){e=J(e);const s=e.dep;s&&_s(s)}function ae(e){return!!(e&&e.__v_isRef===!0)}function Ci(e){return ae(e)?e.value:e}const Di={get:(e,t,s)=>Ci(Reflect.get(e,t,s)),set:(e,t,s,n)=>{const o=e[t];return ae(o)&&!ae(s)?(o.value=s,!0):Reflect.set(e,t,s,n)}};function Yn(e){return lt(e)?e:new Proxy(e,Di)}var Gn;class qi{constructor(t,s,n,o){this._setter=s,this.dep=void 0,this.__v_isRef=!0,this[Gn]=!1,this._dirty=!0,this.effect=new Os(t,()=>{this._dirty||(this._dirty=!0,Si(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!o,this.__v_isReadonly=n}get value(){const t=J(this);return Pi(t),(t._dirty||!t._cacheable)&&(t._dirty=!1,t._value=t.effect.run()),t._value}set value(t){this._setter(t)}}Gn="__v_isReadonly";function Ei(e,t,s=!1){let n,o;const i=M(e);return i?(n=e,o=$e):(n=e.get,o=e.set),new qi(n,o,i||!o,s)}function ke(e,t,s,n){let o;try{o=n?e(...n):e()}catch(i){Kt(i,t,s)}return o}function me(e,t,s,n){if(M(e)){const i=ke(e,t,s,n);return i&&On(i)&&i.catch(l=>{Kt(l,t,s)}),i}const o=[];for(let i=0;i<e.length;i++)o.push(me(e[i],t,s,n));return o}function Kt(e,t,s,n=!0){const o=t?t.vnode:null;if(t){let i=t.parent;const l=t.proxy,c=s;for(;i;){const g=i.ec;if(g){for(let b=0;b<g.length;b++)if(g[b](e,l,c)===!1)return}i=i.parent}const p=t.appContext.config.errorHandler;if(p){ke(p,null,10,[e,l,c]);return}}Ti(e,s,o,n)}function Ti(e,t,s,n=!0){console.error(e)}let $t=!1,gs=!1;const oe=[];let Ee=0;const rt=[];let Ae=null,Xe=0;const Zn=Promise.resolve();let Vs=null;function Li(e){const t=Vs||Zn;return e?t.then(this?e.bind(this):e):t}function Ai(e){let t=Ee+1,s=oe.length;for(;t<s;){const n=t+s>>>1;xt(oe[n])<e?t=n+1:s=n}return t}function zs(e){(!oe.length||!oe.includes(e,$t&&e.allowRecurse?Ee+1:Ee))&&(e.id==null?oe.push(e):oe.splice(Ai(e.id),0,e),eo())}function eo(){!$t&&!gs&&(gs=!0,Vs=Zn.then(so))}function Ii(e){const t=oe.indexOf(e);t>Ee&&oe.splice(t,1)}function Bi(e){O(e)?rt.push(...e):(!Ae||!Ae.includes(e,e.allowRecurse?Xe+1:Xe))&&rt.push(e),eo()}function mn(e,t=$t?Ee+1:0){for(;t<oe.length;t++){const s=oe[t];s&&s.pre&&(oe.splice(t,1),t--,s())}}function to(e){if(rt.length){const t=[...new Set(rt)];if(rt.length=0,Ae){Ae.push(...t);return}for(Ae=t,Ae.sort((s,n)=>xt(s)-xt(n)),Xe=0;Xe<Ae.length;Xe++)Ae[Xe]();Ae=null,Xe=0}}const xt=e=>e.id==null?1/0:e.id,Ni=(e,t)=>{const s=xt(e)-xt(t);if(s===0){if(e.pre&&!t.pre)return-1;if(t.pre&&!e.pre)return 1}return s};function so(e){gs=!1,$t=!0,oe.sort(Ni);const t=$e;try{for(Ee=0;Ee<oe.length;Ee++){const s=oe[Ee];s&&s.active!==!1&&ke(s,null,14)}}finally{Ee=0,oe.length=0,to(),$t=!1,Vs=null,(oe.length||rt.length)&&so()}}function Oi(e,t,...s){if(e.isUnmounted)return;const n=e.vnode.props||W;let o=s;const i=t.startsWith("update:"),l=i&&t.slice(7);if(l&&l in n){const b=`${l==="modelValue"?"model":l}Modifiers`,{number:C,trim:q}=n[b]||W;q&&(o=s.map(B=>se(B)?B.trim():B)),C&&(o=s.map(Uo))}let c,p=n[c=os(t)]||n[c=os(at(t))];!p&&i&&(p=n[c=os(dt(t))]),p&&me(p,e,6,o);const g=n[c+"Once"];if(g){if(!e.emitted)e.emitted={};else if(e.emitted[c])return;e.emitted[c]=!0,me(g,e,6,o)}}function no(e,t,s=!1){const n=t.emitsCache,o=n.get(e);if(o!==void 0)return o;const i=e.emits;let l={},c=!1;if(!M(e)){const p=g=>{const b=no(g,t,!0);b&&(c=!0,ie(l,b))};!s&&t.mixins.length&&t.mixins.forEach(p),e.extends&&p(e.extends),e.mixins&&e.mixins.forEach(p)}return!i&&!c?(ee(e)&&n.set(e,null),null):(O(i)?i.forEach(p=>l[p]=null):ie(l,i),ee(e)&&n.set(e,l),l)}function Qt(e,t){return!e||!Vt(t)?!1:(t=t.slice(2).replace(/Once$/,""),k(e,t[0].toLowerCase()+t.slice(1))||k(e,dt(t))||k(e,t))}let be=null,oo=null;function Jt(e){const t=be;return be=e,oo=e&&e.type.__scopeId||null,t}function Mi(e,t=be,s){if(!t||e._n)return e;const n=(...o)=>{n._d&&Sn(-1);const i=Jt(t);let l;try{l=e(...o)}finally{Jt(i),n._d&&Sn(1)}return l};return n._n=!0,n._c=!0,n._d=!0,n}function ls(e){const{type:t,vnode:s,proxy:n,withProxy:o,props:i,propsOptions:[l],slots:c,attrs:p,emit:g,render:b,renderCache:C,data:q,setupState:B,ctx:H,inheritAttrs:A}=e;let Y,V;const he=Jt(e);try{if(s.shapeFlag&4){const K=o||n;Y=qe(b.call(K,K,C,i,B,q,H)),V=p}else{const K=t;Y=qe(K.length>1?K(i,{attrs:p,slots:c,emit:g}):K(i,null)),V=t.props?p:ji(p)}}catch(K){yt.length=0,Kt(K,e,1),Y=u(Ie)}let N=Y;if(V&&A!==!1){const K=Object.keys(V),{shapeFlag:ne}=N;K.length&&ne&7&&(l&&K.some(Ls)&&(V=Fi(V,l)),N=He(N,V))}return s.dirs&&(N=He(N),N.dirs=N.dirs?N.dirs.concat(s.dirs):s.dirs),s.transition&&(N.transition=s.transition),Y=N,Jt(he),Y}const ji=e=>{let t;for(const s in e)(s==="class"||s==="style"||Vt(s))&&((t||(t={}))[s]=e[s]);return t},Fi=(e,t)=>{const s={};for(const n in e)(!Ls(n)||!(n.slice(9)in t))&&(s[n]=e[n]);return s};function ki(e,t,s){const{props:n,children:o,component:i}=e,{props:l,children:c,patchFlag:p}=t,g=i.emitsOptions;if(t.dirs||t.transition)return!0;if(s&&p>=0){if(p&1024)return!0;if(p&16)return n?gn(n,l,g):!!l;if(p&8){const b=t.dynamicProps;for(let C=0;C<b.length;C++){const q=b[C];if(l[q]!==n[q]&&!Qt(g,q))return!0}}}else return(o||c)&&(!c||!c.$stable)?!0:n===l?!1:n?l?gn(n,l,g):!0:!!l;return!1}function gn(e,t,s){const n=Object.keys(t);if(n.length!==Object.keys(e).length)return!0;for(let o=0;o<n.length;o++){const i=n[o];if(t[i]!==e[i]&&!Qt(s,i))return!0}return!1}function Ji({vnode:e,parent:t},s){for(;t&&t.subTree===e;)(e=t.vnode).el=s,t=t.parent}const Hi=e=>e.__isSuspense;function Ri(e,t){t&&t.pendingBranch?O(e)?t.effects.push(...e):t.effects.push(e):Bi(e)}function Vi(e,t){if(Z){let s=Z.provides;const n=Z.parent&&Z.parent.provides;n===s&&(s=Z.provides=Object.create(n)),s[e]=t}}function Nt(e,t,s=!1){const n=Z||be;if(n){const o=n.parent==null?n.vnode.appContext&&n.vnode.appContext.provides:n.parent.provides;if(o&&e in o)return o[e];if(arguments.length>1)return s&&M(t)?t.call(n.proxy):t}}const It={};function rs(e,t,s){return io(e,t,s)}function io(e,t,{immediate:s,deep:n,flush:o,onTrack:i,onTrigger:l}=W){const c=Xo()===(Z==null?void 0:Z.scope)?Z:null;let p,g=!1,b=!1;if(ae(e)?(p=()=>e.value,g=ms(e)):lt(e)?(p=()=>e,n=!0):O(e)?(b=!0,g=e.some(N=>lt(N)||ms(N)),p=()=>e.map(N=>{if(ae(N))return N.value;if(lt(N))return ot(N);if(M(N))return ke(N,c,2)})):M(e)?t?p=()=>ke(e,c,2):p=()=>{if(!(c&&c.isUnmounted))return C&&C(),me(e,c,3,[q])}:p=$e,t&&n){const N=p;p=()=>ot(N())}let C,q=N=>{C=V.onStop=()=>{ke(N,c,4)}},B;if(St)if(q=$e,t?s&&me(t,c,3,[p(),b?[]:void 0,q]):p(),o==="sync"){const N=kl();B=N.__watcherHandles||(N.__watcherHandles=[])}else return $e;let H=b?new Array(e.length).fill(It):It;const A=()=>{if(V.active)if(t){const N=V.run();(n||g||(b?N.some((K,ne)=>Ft(K,H[ne])):Ft(N,H)))&&(C&&C(),me(t,c,3,[N,H===It?void 0:b&&H[0]===It?[]:H,q]),H=N)}else V.run()};A.allowRecurse=!!t;let Y;o==="sync"?Y=A:o==="post"?Y=()=>ce(A,c&&c.suspense):(A.pre=!0,c&&(A.id=c.uid),Y=()=>zs(A));const V=new Os(p,Y);t?s?A():H=V.run():o==="post"?ce(V.run.bind(V),c&&c.suspense):V.run();const he=()=>{V.stop(),c&&c.scope&&As(c.scope.effects,V)};return B&&B.push(he),he}function zi(e,t,s){const n=this.proxy,o=se(e)?e.includes(".")?lo(n,e):()=>n[e]:e.bind(n,n);let i;M(t)?i=t:(i=t.handler,s=t);const l=Z;ct(this);const c=io(o,i.bind(n),s);return l?ct(l):et(),c}function lo(e,t){const s=t.split(".");return()=>{let n=e;for(let o=0;o<s.length&&n;o++)n=n[s[o]];return n}}function ot(e,t){if(!ee(e)||e.__v_skip||(t=t||new Set,t.has(e)))return e;if(t.add(e),ae(e))ot(e.value,t);else if(O(e))for(let s=0;s<e.length;s++)ot(e[s],t);else if(ko(e)||gt(e))e.forEach(s=>{ot(s,t)});else if(Ro(e))for(const s in e)ot(e[s],t);return e}function Ui(){const e={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return po(()=>{e.isMounted=!0}),uo(()=>{e.isUnmounting=!0}),e}const _e=[Function,Array],Wi={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:_e,onEnter:_e,onAfterEnter:_e,onEnterCancelled:_e,onBeforeLeave:_e,onLeave:_e,onAfterLeave:_e,onLeaveCancelled:_e,onBeforeAppear:_e,onAppear:_e,onAfterAppear:_e,onAppearCancelled:_e},setup(e,{slots:t}){const s=Al(),n=Ui();let o;return()=>{const i=t.default&&ao(t.default(),!0);if(!i||!i.length)return;let l=i[0];if(i.length>1){for(const A of i)if(A.type!==Ie){l=A;break}}const c=J(e),{mode:p}=c;if(n.isLeaving)return as(l);const g=vn(l);if(!g)return as(l);const b=vs(g,c,n,s);ys(g,b);const C=s.subTree,q=C&&vn(C);let B=!1;const{getTransitionKey:H}=g.type;if(H){const A=H();o===void 0?o=A:A!==o&&(o=A,B=!0)}if(q&&q.type!==Ie&&(!Ye(g,q)||B)){const A=vs(q,c,n,s);if(ys(q,A),p==="out-in")return n.isLeaving=!0,A.afterLeave=()=>{n.isLeaving=!1,s.update.active!==!1&&s.update()},as(l);p==="in-out"&&g.type!==Ie&&(A.delayLeave=(Y,V,he)=>{const N=ro(n,q);N[String(q.key)]=q,Y._leaveCb=()=>{V(),Y._leaveCb=void 0,delete b.delayedLeave},b.delayedLeave=he})}return l}}},Ki=Wi;function ro(e,t){const{leavingVNodes:s}=e;let n=s.get(t.type);return n||(n=Object.create(null),s.set(t.type,n)),n}function vs(e,t,s,n){const{appear:o,mode:i,persisted:l=!1,onBeforeEnter:c,onEnter:p,onAfterEnter:g,onEnterCancelled:b,onBeforeLeave:C,onLeave:q,onAfterLeave:B,onLeaveCancelled:H,onBeforeAppear:A,onAppear:Y,onAfterAppear:V,onAppearCancelled:he}=t,N=String(e.key),K=ro(s,e),ne=(j,te)=>{j&&me(j,n,9,te)},tt=(j,te)=>{const Q=te[1];ne(j,te),O(j)?j.every(ue=>ue.length<=1)&&Q():j.length<=1&&Q()},Oe={mode:i,persisted:l,beforeEnter(j){let te=c;if(!s.isMounted)if(o)te=A||c;else return;j._leaveCb&&j._leaveCb(!0);const Q=K[N];Q&&Ye(e,Q)&&Q.el._leaveCb&&Q.el._leaveCb(),ne(te,[j])},enter(j){let te=p,Q=g,ue=b;if(!s.isMounted)if(o)te=Y||p,Q=V||g,ue=he||b;else return;let xe=!1;const Te=j._enterCb=ft=>{xe||(xe=!0,ft?ne(ue,[j]):ne(Q,[j]),Oe.delayedLeave&&Oe.delayedLeave(),j._enterCb=void 0)};te?tt(te,[j,Te]):Te()},leave(j,te){const Q=String(e.key);if(j._enterCb&&j._enterCb(!0),s.isUnmounting)return te();ne(C,[j]);let ue=!1;const xe=j._leaveCb=Te=>{ue||(ue=!0,te(),Te?ne(H,[j]):ne(B,[j]),j._leaveCb=void 0,K[Q]===e&&delete K[Q])};K[Q]=e,q?tt(q,[j,xe]):xe()},clone(j){return vs(j,t,s,n)}};return Oe}function as(e){if(Xt(e))return e=He(e),e.children=null,e}function vn(e){return Xt(e)?e.children?e.children[0]:void 0:e}function ys(e,t){e.shapeFlag&6&&e.component?ys(e.component.subTree,t):e.shapeFlag&128?(e.ssContent.transition=t.clone(e.ssContent),e.ssFallback.transition=t.clone(e.ssFallback)):e.transition=t}function ao(e,t=!1,s){let n=[],o=0;for(let i=0;i<e.length;i++){let l=e[i];const c=s==null?l.key:String(s)+String(l.key!=null?l.key:i);l.type===De?(l.patchFlag&128&&o++,n=n.concat(ao(l.children,t,c))):(t||l.type!==Ie)&&n.push(c!=null?He(l,{key:c}):l)}if(o>1)for(let i=0;i<n.length;i++)n[i].patchFlag=-2;return n}const Ot=e=>!!e.type.__asyncLoader,Xt=e=>e.type.__isKeepAlive;function Qi(e,t){co(e,"a",t)}function Xi(e,t){co(e,"da",t)}function co(e,t,s=Z){const n=e.__wdc||(e.__wdc=()=>{let o=s;for(;o;){if(o.isDeactivated)return;o=o.parent}return e()});if(Yt(t,n,s),s){let o=s.parent;for(;o&&o.parent;)Xt(o.parent.vnode)&&Yi(n,t,s,o),o=o.parent}}function Yi(e,t,s,n){const o=Yt(t,e,n,!0);fo(()=>{As(n[t],o)},s)}function Yt(e,t,s=Z,n=!1){if(s){const o=s[e]||(s[e]=[]),i=t.__weh||(t.__weh=(...l)=>{if(s.isUnmounted)return;pt(),ct(s);const c=me(t,s,e,l);return et(),ut(),c});return n?o.unshift(i):o.push(i),i}}const Ne=e=>(t,s=Z)=>(!St||e==="sp")&&Yt(e,(...n)=>t(...n),s),Gi=Ne("bm"),po=Ne("m"),Zi=Ne("bu"),el=Ne("u"),uo=Ne("bum"),fo=Ne("um"),tl=Ne("sp"),sl=Ne("rtg"),nl=Ne("rtc");function ol(e,t=Z){Yt("ec",e,t)}function Ue(e,t,s,n){const o=e.dirs,i=t&&t.dirs;for(let l=0;l<o.length;l++){const c=o[l];i&&(c.oldValue=i[l].value);let p=c.dir[n];p&&(pt(),me(p,s,8,[e.el,c,e,t]),ut())}}const il=Symbol(),bs=e=>e?xo(e)?Qs(e)||e.proxy:bs(e.parent):null,vt=ie(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>bs(e.parent),$root:e=>bs(e.root),$emit:e=>e.emit,$options:e=>Us(e),$forceUpdate:e=>e.f||(e.f=()=>zs(e.update)),$nextTick:e=>e.n||(e.n=Li.bind(e.proxy)),$watch:e=>zi.bind(e)}),cs=(e,t)=>e!==W&&!e.__isScriptSetup&&k(e,t),ll={get({_:e},t){const{ctx:s,setupState:n,data:o,props:i,accessCache:l,type:c,appContext:p}=e;let g;if(t[0]!=="$"){const B=l[t];if(B!==void 0)switch(B){case 1:return n[t];case 2:return o[t];case 4:return s[t];case 3:return i[t]}else{if(cs(n,t))return l[t]=1,n[t];if(o!==W&&k(o,t))return l[t]=2,o[t];if((g=e.propsOptions[0])&&k(g,t))return l[t]=3,i[t];if(s!==W&&k(s,t))return l[t]=4,s[t];ws&&(l[t]=0)}}const b=vt[t];let C,q;if(b)return t==="$attrs"&&pe(e,"get",t),b(e);if((C=c.__cssModules)&&(C=C[t]))return C;if(s!==W&&k(s,t))return l[t]=4,s[t];if(q=p.config.globalProperties,k(q,t))return q[t]},set({_:e},t,s){const{data:n,setupState:o,ctx:i}=e;return cs(o,t)?(o[t]=s,!0):n!==W&&k(n,t)?(n[t]=s,!0):k(e.props,t)||t[0]==="$"&&t.slice(1)in e?!1:(i[t]=s,!0)},has({_:{data:e,setupState:t,accessCache:s,ctx:n,appContext:o,propsOptions:i}},l){let c;return!!s[l]||e!==W&&k(e,l)||cs(t,l)||(c=i[0])&&k(c,l)||k(n,l)||k(vt,l)||k(o.config.globalProperties,l)},defineProperty(e,t,s){return s.get!=null?e._.accessCache[t]=0:k(s,"value")&&this.set(e,t,s.value,null),Reflect.defineProperty(e,t,s)}};let ws=!0;function rl(e){const t=Us(e),s=e.proxy,n=e.ctx;ws=!1,t.beforeCreate&&yn(t.beforeCreate,e,"bc");const{data:o,computed:i,methods:l,watch:c,provide:p,inject:g,created:b,beforeMount:C,mounted:q,beforeUpdate:B,updated:H,activated:A,deactivated:Y,beforeDestroy:V,beforeUnmount:he,destroyed:N,unmounted:K,render:ne,renderTracked:tt,renderTriggered:Oe,errorCaptured:j,serverPrefetch:te,expose:Q,inheritAttrs:ue,components:xe,directives:Te,filters:ft}=t;if(g&&al(g,n,null,e.appContext.config.unwrapInjectedRef),l)for(const X in l){const z=l[X];M(z)&&(n[X]=z.bind(s))}if(o){const X=o.call(s,s);ee(X)&&(e.data=ks(X))}if(ws=!0,i)for(const X in i){const z=i[X],Ve=M(z)?z.bind(s,s):M(z.get)?z.get.bind(s,s):$e,Ct=!M(z)&&M(z.set)?z.set.bind(s):$e,ze=jl({get:Ve,set:Ct});Object.defineProperty(n,X,{enumerable:!0,configurable:!0,get:()=>ze.value,set:Pe=>ze.value=Pe})}if(c)for(const X in c)ho(c[X],n,s,X);if(p){const X=M(p)?p.call(s):p;Reflect.ownKeys(X).forEach(z=>{Vi(z,X[z])})}b&&yn(b,e,"c");function le(X,z){O(z)?z.forEach(Ve=>X(Ve.bind(s))):z&&X(z.bind(s))}if(le(Gi,C),le(po,q),le(Zi,B),le(el,H),le(Qi,A),le(Xi,Y),le(ol,j),le(nl,tt),le(sl,Oe),le(uo,he),le(fo,K),le(tl,te),O(Q))if(Q.length){const X=e.exposed||(e.exposed={});Q.forEach(z=>{Object.defineProperty(X,z,{get:()=>s[z],set:Ve=>s[z]=Ve})})}else e.exposed||(e.exposed={});ne&&e.render===$e&&(e.render=ne),ue!=null&&(e.inheritAttrs=ue),xe&&(e.components=xe),Te&&(e.directives=Te)}function al(e,t,s=$e,n=!1){O(e)&&(e=$s(e));for(const o in e){const i=e[o];let l;ee(i)?"default"in i?l=Nt(i.from||o,i.default,!0):l=Nt(i.from||o):l=Nt(i),ae(l)&&n?Object.defineProperty(t,o,{enumerable:!0,configurable:!0,get:()=>l.value,set:c=>l.value=c}):t[o]=l}}function yn(e,t,s){me(O(e)?e.map(n=>n.bind(t.proxy)):e.bind(t.proxy),t,s)}function ho(e,t,s,n){const o=n.includes(".")?lo(s,n):()=>s[n];if(se(e)){const i=t[e];M(i)&&rs(o,i)}else if(M(e))rs(o,e.bind(s));else if(ee(e))if(O(e))e.forEach(i=>ho(i,t,s,n));else{const i=M(e.handler)?e.handler.bind(s):t[e.handler];M(i)&&rs(o,i,e)}}function Us(e){const t=e.type,{mixins:s,extends:n}=t,{mixins:o,optionsCache:i,config:{optionMergeStrategies:l}}=e.appContext,c=i.get(t);let p;return c?p=c:!o.length&&!s&&!n?p=t:(p={},o.length&&o.forEach(g=>Ht(p,g,l,!0)),Ht(p,t,l)),ee(t)&&i.set(t,p),p}function Ht(e,t,s,n=!1){const{mixins:o,extends:i}=t;i&&Ht(e,i,s,!0),o&&o.forEach(l=>Ht(e,l,s,!0));for(const l in t)if(!(n&&l==="expose")){const c=cl[l]||s&&s[l];e[l]=c?c(e[l],t[l]):t[l]}return e}const cl={data:bn,props:Qe,emits:Qe,methods:Qe,computed:Qe,beforeCreate:re,created:re,beforeMount:re,mounted:re,beforeUpdate:re,updated:re,beforeDestroy:re,beforeUnmount:re,destroyed:re,unmounted:re,activated:re,deactivated:re,errorCaptured:re,serverPrefetch:re,components:Qe,directives:Qe,watch:pl,provide:bn,inject:dl};function bn(e,t){return t?e?function(){return ie(M(e)?e.call(this,this):e,M(t)?t.call(this,this):t)}:t:e}function dl(e,t){return Qe($s(e),$s(t))}function $s(e){if(O(e)){const t={};for(let s=0;s<e.length;s++)t[e[s]]=e[s];return t}return e}function re(e,t){return e?[...new Set([].concat(e,t))]:t}function Qe(e,t){return e?ie(ie(Object.create(null),e),t):t}function pl(e,t){if(!e)return t;if(!t)return e;const s=ie(Object.create(null),e);for(const n in t)s[n]=re(e[n],t[n]);return s}function ul(e,t,s,n=!1){const o={},i={};kt(i,Zt,1),e.propsDefaults=Object.create(null),_o(e,t,o,i);for(const l in e.propsOptions[0])l in o||(o[l]=void 0);s?e.props=n?o:xi(o):e.type.props?e.props=o:e.props=i,e.attrs=i}function fl(e,t,s,n){const{props:o,attrs:i,vnode:{patchFlag:l}}=e,c=J(o),[p]=e.propsOptions;let g=!1;if((n||l>0)&&!(l&16)){if(l&8){const b=e.vnode.dynamicProps;for(let C=0;C<b.length;C++){let q=b[C];if(Qt(e.emitsOptions,q))continue;const B=t[q];if(p)if(k(i,q))B!==i[q]&&(i[q]=B,g=!0);else{const H=at(q);o[H]=xs(p,c,H,B,e,!1)}else B!==i[q]&&(i[q]=B,g=!0)}}}else{_o(e,t,o,i)&&(g=!0);let b;for(const C in c)(!t||!k(t,C)&&((b=dt(C))===C||!k(t,b)))&&(p?s&&(s[C]!==void 0||s[b]!==void 0)&&(o[C]=xs(p,c,C,void 0,e,!0)):delete o[C]);if(i!==c)for(const C in i)(!t||!k(t,C))&&(delete i[C],g=!0)}g&&Be(e,"set","$attrs")}function _o(e,t,s,n){const[o,i]=e.propsOptions;let l=!1,c;if(t)for(let p in t){if(Bt(p))continue;const g=t[p];let b;o&&k(o,b=at(p))?!i||!i.includes(b)?s[b]=g:(c||(c={}))[b]=g:Qt(e.emitsOptions,p)||(!(p in n)||g!==n[p])&&(n[p]=g,l=!0)}if(i){const p=J(s),g=c||W;for(let b=0;b<i.length;b++){const C=i[b];s[C]=xs(o,p,C,g[C],e,!k(g,C))}}return l}function xs(e,t,s,n,o,i){const l=e[s];if(l!=null){const c=k(l,"default");if(c&&n===void 0){const p=l.default;if(l.type!==Function&&M(p)){const{propsDefaults:g}=o;s in g?n=g[s]:(ct(o),n=g[s]=p.call(null,t),et())}else n=p}l[0]&&(i&&!c?n=!1:l[1]&&(n===""||n===dt(s))&&(n=!0))}return n}function mo(e,t,s=!1){const n=t.propsCache,o=n.get(e);if(o)return o;const i=e.props,l={},c=[];let p=!1;if(!M(e)){const b=C=>{p=!0;const[q,B]=mo(C,t,!0);ie(l,q),B&&c.push(...B)};!s&&t.mixins.length&&t.mixins.forEach(b),e.extends&&b(e.extends),e.mixins&&e.mixins.forEach(b)}if(!i&&!p)return ee(e)&&n.set(e,it),it;if(O(i))for(let b=0;b<i.length;b++){const C=at(i[b]);wn(C)&&(l[C]=W)}else if(i)for(const b in i){const C=at(b);if(wn(C)){const q=i[b],B=l[C]=O(q)||M(q)?{type:q}:Object.assign({},q);if(B){const H=Pn(Boolean,B.type),A=Pn(String,B.type);B[0]=H>-1,B[1]=A<0||H<A,(H>-1||k(B,"default"))&&c.push(C)}}}const g=[l,c];return ee(e)&&n.set(e,g),g}function wn(e){return e[0]!=="$"}function $n(e){const t=e&&e.toString().match(/^\s*(function|class) (\w+)/);return t?t[2]:e===null?"null":""}function xn(e,t){return $n(e)===$n(t)}function Pn(e,t){return O(t)?t.findIndex(s=>xn(s,e)):M(t)&&xn(t,e)?0:-1}const go=e=>e[0]==="_"||e==="$stable",Ws=e=>O(e)?e.map(qe):[qe(e)],hl=(e,t,s)=>{if(t._n)return t;const n=Mi((...o)=>Ws(t(...o)),s);return n._c=!1,n},vo=(e,t,s)=>{const n=e._ctx;for(const o in e){if(go(o))continue;const i=e[o];if(M(i))t[o]=hl(o,i,n);else if(i!=null){const l=Ws(i);t[o]=()=>l}}},yo=(e,t)=>{const s=Ws(t);e.slots.default=()=>s},_l=(e,t)=>{if(e.vnode.shapeFlag&32){const s=t._;s?(e.slots=J(t),kt(t,"_",s)):vo(t,e.slots={})}else e.slots={},t&&yo(e,t);kt(e.slots,Zt,1)},ml=(e,t,s)=>{const{vnode:n,slots:o}=e;let i=!0,l=W;if(n.shapeFlag&32){const c=t._;c?s&&c===1?i=!1:(ie(o,t),!s&&c===1&&delete o._):(i=!t.$stable,vo(t,o)),l=t}else t&&(yo(e,t),l={default:1});if(i)for(const c in o)!go(c)&&!(c in l)&&delete o[c]};function bo(){return{app:null,config:{isNativeTag:Mo,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let gl=0;function vl(e,t){return function(n,o=null){M(n)||(n=Object.assign({},n)),o!=null&&!ee(o)&&(o=null);const i=bo(),l=new Set;let c=!1;const p=i.app={_uid:gl++,_component:n,_props:o,_container:null,_context:i,_instance:null,version:Jl,get config(){return i.config},set config(g){},use(g,...b){return l.has(g)||(g&&M(g.install)?(l.add(g),g.install(p,...b)):M(g)&&(l.add(g),g(p,...b))),p},mixin(g){return i.mixins.includes(g)||i.mixins.push(g),p},component(g,b){return b?(i.components[g]=b,p):i.components[g]},directive(g,b){return b?(i.directives[g]=b,p):i.directives[g]},mount(g,b,C){if(!c){const q=u(n,o);return q.appContext=i,b&&t?t(q,g):e(q,g,C),c=!0,p._container=g,g.__vue_app__=p,Qs(q.component)||q.component.proxy}},unmount(){c&&(e(null,p._container),delete p._container.__vue_app__)},provide(g,b){return i.provides[g]=b,p}};return p}}function Ps(e,t,s,n,o=!1){if(O(e)){e.forEach((q,B)=>Ps(q,t&&(O(t)?t[B]:t),s,n,o));return}if(Ot(n)&&!o)return;const i=n.shapeFlag&4?Qs(n.component)||n.component.proxy:n.el,l=o?null:i,{i:c,r:p}=e,g=t&&t.r,b=c.refs===W?c.refs={}:c.refs,C=c.setupState;if(g!=null&&g!==p&&(se(g)?(b[g]=null,k(C,g)&&(C[g]=null)):ae(g)&&(g.value=null)),M(p))ke(p,c,12,[l,b]);else{const q=se(p),B=ae(p);if(q||B){const H=()=>{if(e.f){const A=q?k(C,p)?C[p]:b[p]:p.value;o?O(A)&&As(A,i):O(A)?A.includes(i)||A.push(i):q?(b[p]=[i],k(C,p)&&(C[p]=b[p])):(p.value=[i],e.k&&(b[e.k]=p.value))}else q?(b[p]=l,k(C,p)&&(C[p]=l)):B&&(p.value=l,e.k&&(b[e.k]=l))};l?(H.id=-1,ce(H,s)):H()}}}const ce=Ri;function yl(e){return bl(e)}function bl(e,t){const s=Wo();s.__VUE__=!0;const{insert:n,remove:o,patchProp:i,createElement:l,createText:c,createComment:p,setText:g,setElementText:b,parentNode:C,nextSibling:q,setScopeId:B=$e,insertStaticContent:H}=e,A=(r,d,f,y=null,v=null,P=null,D=!1,x=null,S=!!d.dynamicChildren)=>{if(r===d)return;r&&!Ye(r,d)&&(y=Dt(r),Pe(r,v,P,!0),r=null),d.patchFlag===-2&&(S=!1,d.dynamicChildren=null);const{type:w,ref:T,shapeFlag:E}=d;switch(w){case Gt:Y(r,d,f,y);break;case Ie:V(r,d,f,y);break;case Mt:r==null&&he(d,f,y,D);break;case De:xe(r,d,f,y,v,P,D,x,S);break;default:E&1?ne(r,d,f,y,v,P,D,x,S):E&6?Te(r,d,f,y,v,P,D,x,S):(E&64||E&128)&&w.process(r,d,f,y,v,P,D,x,S,st)}T!=null&&v&&Ps(T,r&&r.ref,P,d||r,!d)},Y=(r,d,f,y)=>{if(r==null)n(d.el=c(d.children),f,y);else{const v=d.el=r.el;d.children!==r.children&&g(v,d.children)}},V=(r,d,f,y)=>{r==null?n(d.el=p(d.children||""),f,y):d.el=r.el},he=(r,d,f,y)=>{[r.el,r.anchor]=H(r.children,d,f,y,r.el,r.anchor)},N=({el:r,anchor:d},f,y)=>{let v;for(;r&&r!==d;)v=q(r),n(r,f,y),r=v;n(d,f,y)},K=({el:r,anchor:d})=>{let f;for(;r&&r!==d;)f=q(r),o(r),r=f;o(d)},ne=(r,d,f,y,v,P,D,x,S)=>{D=D||d.type==="svg",r==null?tt(d,f,y,v,P,D,x,S):te(r,d,v,P,D,x,S)},tt=(r,d,f,y,v,P,D,x)=>{let S,w;const{type:T,props:E,shapeFlag:L,transition:I,dirs:F}=r;if(S=r.el=l(r.type,P,E&&E.is,E),L&8?b(S,r.children):L&16&&j(r.children,S,null,y,v,P&&T!=="foreignObject",D,x),F&&Ue(r,null,y,"created"),Oe(S,r,r.scopeId,D,y),E){for(const R in E)R!=="value"&&!Bt(R)&&i(S,R,null,E[R],P,r.children,y,v,Le);"value"in E&&i(S,"value",null,E.value),(w=E.onVnodeBeforeMount)&&Ce(w,y,r)}F&&Ue(r,null,y,"beforeMount");const U=(!v||v&&!v.pendingBranch)&&I&&!I.persisted;U&&I.beforeEnter(S),n(S,d,f),((w=E&&E.onVnodeMounted)||U||F)&&ce(()=>{w&&Ce(w,y,r),U&&I.enter(S),F&&Ue(r,null,y,"mounted")},v)},Oe=(r,d,f,y,v)=>{if(f&&B(r,f),y)for(let P=0;P<y.length;P++)B(r,y[P]);if(v){let P=v.subTree;if(d===P){const D=v.vnode;Oe(r,D,D.scopeId,D.slotScopeIds,v.parent)}}},j=(r,d,f,y,v,P,D,x,S=0)=>{for(let w=S;w<r.length;w++){const T=r[w]=x?je(r[w]):qe(r[w]);A(null,T,d,f,y,v,P,D,x)}},te=(r,d,f,y,v,P,D)=>{const x=d.el=r.el;let{patchFlag:S,dynamicChildren:w,dirs:T}=d;S|=r.patchFlag&16;const E=r.props||W,L=d.props||W;let I;f&&We(f,!1),(I=L.onVnodeBeforeUpdate)&&Ce(I,f,d,r),T&&Ue(d,r,f,"beforeUpdate"),f&&We(f,!0);const F=v&&d.type!=="foreignObject";if(w?Q(r.dynamicChildren,w,x,f,y,F,P):D||z(r,d,x,null,f,y,F,P,!1),S>0){if(S&16)ue(x,d,E,L,f,y,v);else if(S&2&&E.class!==L.class&&i(x,"class",null,L.class,v),S&4&&i(x,"style",E.style,L.style,v),S&8){const U=d.dynamicProps;for(let R=0;R<U.length;R++){const G=U[R],ge=E[G],nt=L[G];(nt!==ge||G==="value")&&i(x,G,ge,nt,v,r.children,f,y,Le)}}S&1&&r.children!==d.children&&b(x,d.children)}else!D&&w==null&&ue(x,d,E,L,f,y,v);((I=L.onVnodeUpdated)||T)&&ce(()=>{I&&Ce(I,f,d,r),T&&Ue(d,r,f,"updated")},y)},Q=(r,d,f,y,v,P,D)=>{for(let x=0;x<d.length;x++){const S=r[x],w=d[x],T=S.el&&(S.type===De||!Ye(S,w)||S.shapeFlag&70)?C(S.el):f;A(S,w,T,null,y,v,P,D,!0)}},ue=(r,d,f,y,v,P,D)=>{if(f!==y){if(f!==W)for(const x in f)!Bt(x)&&!(x in y)&&i(r,x,f[x],null,D,d.children,v,P,Le);for(const x in y){if(Bt(x))continue;const S=y[x],w=f[x];S!==w&&x!=="value"&&i(r,x,w,S,D,d.children,v,P,Le)}"value"in y&&i(r,"value",f.value,y.value)}},xe=(r,d,f,y,v,P,D,x,S)=>{const w=d.el=r?r.el:c(""),T=d.anchor=r?r.anchor:c("");let{patchFlag:E,dynamicChildren:L,slotScopeIds:I}=d;I&&(x=x?x.concat(I):I),r==null?(n(w,f,y),n(T,f,y),j(d.children,f,T,v,P,D,x,S)):E>0&&E&64&&L&&r.dynamicChildren?(Q(r.dynamicChildren,L,f,v,P,D,x),(d.key!=null||v&&d===v.subTree)&&wo(r,d,!0)):z(r,d,f,T,v,P,D,x,S)},Te=(r,d,f,y,v,P,D,x,S)=>{d.slotScopeIds=x,r==null?d.shapeFlag&512?v.ctx.activate(d,f,y,D,S):ft(d,f,y,v,P,D,S):tn(r,d,S)},ft=(r,d,f,y,v,P,D)=>{const x=r.component=Ll(r,y,v);if(Xt(r)&&(x.ctx.renderer=st),Il(x),x.asyncDep){if(v&&v.registerDep(x,le),!r.el){const S=x.subTree=u(Ie);V(null,S,d,f)}return}le(x,r,d,f,v,P,D)},tn=(r,d,f)=>{const y=d.component=r.component;if(ki(r,d,f))if(y.asyncDep&&!y.asyncResolved){X(y,d,f);return}else y.next=d,Ii(y.update),y.update();else d.el=r.el,y.vnode=d},le=(r,d,f,y,v,P,D)=>{const x=()=>{if(r.isMounted){let{next:T,bu:E,u:L,parent:I,vnode:F}=r,U=T,R;We(r,!1),T?(T.el=F.el,X(r,T,D)):T=F,E&&is(E),(R=T.props&&T.props.onVnodeBeforeUpdate)&&Ce(R,I,T,F),We(r,!0);const G=ls(r),ge=r.subTree;r.subTree=G,A(ge,G,C(ge.el),Dt(ge),r,v,P),T.el=G.el,U===null&&Ji(r,G.el),L&&ce(L,v),(R=T.props&&T.props.onVnodeUpdated)&&ce(()=>Ce(R,I,T,F),v)}else{let T;const{el:E,props:L}=d,{bm:I,m:F,parent:U}=r,R=Ot(d);if(We(r,!1),I&&is(I),!R&&(T=L&&L.onVnodeBeforeMount)&&Ce(T,U,d),We(r,!0),E&&ns){const G=()=>{r.subTree=ls(r),ns(E,r.subTree,r,v,null)};R?d.type.__asyncLoader().then(()=>!r.isUnmounted&&G()):G()}else{const G=r.subTree=ls(r);A(null,G,f,y,r,v,P),d.el=G.el}if(F&&ce(F,v),!R&&(T=L&&L.onVnodeMounted)){const G=d;ce(()=>Ce(T,U,G),v)}(d.shapeFlag&256||U&&Ot(U.vnode)&&U.vnode.shapeFlag&256)&&r.a&&ce(r.a,v),r.isMounted=!0,d=f=y=null}},S=r.effect=new Os(x,()=>zs(w),r.scope),w=r.update=()=>S.run();w.id=r.uid,We(r,!0),w()},X=(r,d,f)=>{d.component=r;const y=r.vnode.props;r.vnode=d,r.next=null,fl(r,d.props,y,f),ml(r,d.children,f),pt(),mn(),ut()},z=(r,d,f,y,v,P,D,x,S=!1)=>{const w=r&&r.children,T=r?r.shapeFlag:0,E=d.children,{patchFlag:L,shapeFlag:I}=d;if(L>0){if(L&128){Ct(w,E,f,y,v,P,D,x,S);return}else if(L&256){Ve(w,E,f,y,v,P,D,x,S);return}}I&8?(T&16&&Le(w,v,P),E!==w&&b(f,E)):T&16?I&16?Ct(w,E,f,y,v,P,D,x,S):Le(w,v,P,!0):(T&8&&b(f,""),I&16&&j(E,f,y,v,P,D,x,S))},Ve=(r,d,f,y,v,P,D,x,S)=>{r=r||it,d=d||it;const w=r.length,T=d.length,E=Math.min(w,T);let L;for(L=0;L<E;L++){const I=d[L]=S?je(d[L]):qe(d[L]);A(r[L],I,f,null,v,P,D,x,S)}w>T?Le(r,v,P,!0,!1,E):j(d,f,y,v,P,D,x,S,E)},Ct=(r,d,f,y,v,P,D,x,S)=>{let w=0;const T=d.length;let E=r.length-1,L=T-1;for(;w<=E&&w<=L;){const I=r[w],F=d[w]=S?je(d[w]):qe(d[w]);if(Ye(I,F))A(I,F,f,null,v,P,D,x,S);else break;w++}for(;w<=E&&w<=L;){const I=r[E],F=d[L]=S?je(d[L]):qe(d[L]);if(Ye(I,F))A(I,F,f,null,v,P,D,x,S);else break;E--,L--}if(w>E){if(w<=L){const I=L+1,F=I<T?d[I].el:y;for(;w<=L;)A(null,d[w]=S?je(d[w]):qe(d[w]),f,F,v,P,D,x,S),w++}}else if(w>L)for(;w<=E;)Pe(r[w],v,P,!0),w++;else{const I=w,F=w,U=new Map;for(w=F;w<=L;w++){const fe=d[w]=S?je(d[w]):qe(d[w]);fe.key!=null&&U.set(fe.key,w)}let R,G=0;const ge=L-F+1;let nt=!1,on=0;const ht=new Array(ge);for(w=0;w<ge;w++)ht[w]=0;for(w=I;w<=E;w++){const fe=r[w];if(G>=ge){Pe(fe,v,P,!0);continue}let Se;if(fe.key!=null)Se=U.get(fe.key);else for(R=F;R<=L;R++)if(ht[R-F]===0&&Ye(fe,d[R])){Se=R;break}Se===void 0?Pe(fe,v,P,!0):(ht[Se-F]=w+1,Se>=on?on=Se:nt=!0,A(fe,d[Se],f,null,v,P,D,x,S),G++)}const ln=nt?wl(ht):it;for(R=ln.length-1,w=ge-1;w>=0;w--){const fe=F+w,Se=d[fe],rn=fe+1<T?d[fe+1].el:y;ht[w]===0?A(null,Se,f,rn,v,P,D,x,S):nt&&(R<0||w!==ln[R]?ze(Se,f,rn,2):R--)}}},ze=(r,d,f,y,v=null)=>{const{el:P,type:D,transition:x,children:S,shapeFlag:w}=r;if(w&6){ze(r.component.subTree,d,f,y);return}if(w&128){r.suspense.move(d,f,y);return}if(w&64){D.move(r,d,f,st);return}if(D===De){n(P,d,f);for(let E=0;E<S.length;E++)ze(S[E],d,f,y);n(r.anchor,d,f);return}if(D===Mt){N(r,d,f);return}if(y!==2&&w&1&&x)if(y===0)x.beforeEnter(P),n(P,d,f),ce(()=>x.enter(P),v);else{const{leave:E,delayLeave:L,afterLeave:I}=x,F=()=>n(P,d,f),U=()=>{E(P,()=>{F(),I&&I()})};L?L(P,F,U):U()}else n(P,d,f)},Pe=(r,d,f,y=!1,v=!1)=>{const{type:P,props:D,ref:x,children:S,dynamicChildren:w,shapeFlag:T,patchFlag:E,dirs:L}=r;if(x!=null&&Ps(x,null,f,r,!0),T&256){d.ctx.deactivate(r);return}const I=T&1&&L,F=!Ot(r);let U;if(F&&(U=D&&D.onVnodeBeforeUnmount)&&Ce(U,d,r),T&6)To(r.component,f,y);else{if(T&128){r.suspense.unmount(f,y);return}I&&Ue(r,null,d,"beforeUnmount"),T&64?r.type.remove(r,d,f,v,st,y):w&&(P!==De||E>0&&E&64)?Le(w,d,f,!1,!0):(P===De&&E&384||!v&&T&16)&&Le(S,d,f),y&&sn(r)}(F&&(U=D&&D.onVnodeUnmounted)||I)&&ce(()=>{U&&Ce(U,d,r),I&&Ue(r,null,d,"unmounted")},f)},sn=r=>{const{type:d,el:f,anchor:y,transition:v}=r;if(d===De){Eo(f,y);return}if(d===Mt){K(r);return}const P=()=>{o(f),v&&!v.persisted&&v.afterLeave&&v.afterLeave()};if(r.shapeFlag&1&&v&&!v.persisted){const{leave:D,delayLeave:x}=v,S=()=>D(f,P);x?x(r.el,P,S):S()}else P()},Eo=(r,d)=>{let f;for(;r!==d;)f=q(r),o(r),r=f;o(d)},To=(r,d,f)=>{const{bum:y,scope:v,update:P,subTree:D,um:x}=r;y&&is(y),v.stop(),P&&(P.active=!1,Pe(D,r,d,f)),x&&ce(x,d),ce(()=>{r.isUnmounted=!0},d),d&&d.pendingBranch&&!d.isUnmounted&&r.asyncDep&&!r.asyncResolved&&r.suspenseId===d.pendingId&&(d.deps--,d.deps===0&&d.resolve())},Le=(r,d,f,y=!1,v=!1,P=0)=>{for(let D=P;D<r.length;D++)Pe(r[D],d,f,y,v)},Dt=r=>r.shapeFlag&6?Dt(r.component.subTree):r.shapeFlag&128?r.suspense.next():q(r.anchor||r.el),nn=(r,d,f)=>{r==null?d._vnode&&Pe(d._vnode,null,null,!0):A(d._vnode||null,r,d,null,null,null,f),mn(),to(),d._vnode=r},st={p:A,um:Pe,m:ze,r:sn,mt:ft,mc:j,pc:z,pbc:Q,n:Dt,o:e};let ss,ns;return t&&([ss,ns]=t(st)),{render:nn,hydrate:ss,createApp:vl(nn,ss)}}function We({effect:e,update:t},s){e.allowRecurse=t.allowRecurse=s}function wo(e,t,s=!1){const n=e.children,o=t.children;if(O(n)&&O(o))for(let i=0;i<n.length;i++){const l=n[i];let c=o[i];c.shapeFlag&1&&!c.dynamicChildren&&((c.patchFlag<=0||c.patchFlag===32)&&(c=o[i]=je(o[i]),c.el=l.el),s||wo(l,c)),c.type===Gt&&(c.el=l.el)}}function wl(e){const t=e.slice(),s=[0];let n,o,i,l,c;const p=e.length;for(n=0;n<p;n++){const g=e[n];if(g!==0){if(o=s[s.length-1],e[o]<g){t[n]=o,s.push(n);continue}for(i=0,l=s.length-1;i<l;)c=i+l>>1,e[s[c]]<g?i=c+1:l=c;g<e[s[i]]&&(i>0&&(t[n]=s[i-1]),s[i]=n)}}for(i=s.length,l=s[i-1];i-- >0;)s[i]=l,l=t[l];return s}const $l=e=>e.__isTeleport,De=Symbol(void 0),Gt=Symbol(void 0),Ie=Symbol(void 0),Mt=Symbol(void 0),yt=[];let we=null;function h(e=!1){yt.push(we=e?null:[])}function xl(){yt.pop(),we=yt[yt.length-1]||null}let Pt=1;function Sn(e){Pt+=e}function Pl(e){return e.dynamicChildren=Pt>0?we||it:null,xl(),Pt>0&&we&&we.push(e),e}function _(e,t,s,n,o,i){return Pl(a(e,t,s,n,o,i,!0))}function Sl(e){return e?e.__v_isVNode===!0:!1}function Ye(e,t){return e.type===t.type&&e.key===t.key}const Zt="__vInternal",$o=({key:e})=>e??null,jt=({ref:e,ref_key:t,ref_for:s})=>e!=null?se(e)||ae(e)||M(e)?{i:be,r:e,k:t,f:!!s}:e:null;function a(e,t=null,s=null,n=0,o=null,i=e===De?0:1,l=!1,c=!1){const p={__v_isVNode:!0,__v_skip:!0,type:e,props:t,key:t&&$o(t),ref:t&&jt(t),scopeId:oo,slotScopeIds:null,children:s,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:i,patchFlag:n,dynamicProps:o,dynamicChildren:null,appContext:null,ctx:be};return c?(Ks(p,s),i&128&&e.normalize(p)):s&&(p.shapeFlag|=se(s)?8:16),Pt>0&&!l&&we&&(p.patchFlag>0||i&6)&&p.patchFlag!==32&&we.push(p),p}const u=Cl;function Cl(e,t=null,s=null,n=0,o=null,i=!1){if((!e||e===il)&&(e=Ie),Sl(e)){const c=He(e,t,!0);return s&&Ks(c,s),Pt>0&&!i&&we&&(c.shapeFlag&6?we[we.indexOf(e)]=c:we.push(c)),c.patchFlag|=-2,c}if(Ml(e)&&(e=e.__vccOpts),t){t=Dl(t);let{class:c,style:p}=t;c&&!se(c)&&(t.class=Ts(c)),ee(p)&&(Qn(p)&&!O(p)&&(p=ie({},p)),t.style=Es(p))}const l=se(e)?1:Hi(e)?128:$l(e)?64:ee(e)?4:M(e)?2:0;return a(e,t,s,n,o,l,i,!0)}function Dl(e){return e?Qn(e)||Zt in e?ie({},e):e:null}function He(e,t,s=!1){const{props:n,ref:o,patchFlag:i,children:l}=e,c=t?ql(n||{},t):n;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:c,key:c&&$o(c),ref:t&&t.ref?s&&o?O(o)?o.concat(jt(t)):[o,jt(t)]:jt(t):o,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:l,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:t&&e.type!==De?i===-1?16:i|16:i,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&He(e.ssContent),ssFallback:e.ssFallback&&He(e.ssFallback),el:e.el,anchor:e.anchor,ctx:e.ctx,ce:e.ce}}function bt(e=" ",t=0){return u(Gt,null,e,t)}function $(e,t){const s=u(Mt,null,e);return s.staticCount=t,s}function qe(e){return e==null||typeof e=="boolean"?u(Ie):O(e)?u(De,null,e.slice()):typeof e=="object"?je(e):u(Gt,null,String(e))}function je(e){return e.el===null&&e.patchFlag!==-1||e.memo?e:He(e)}function Ks(e,t){let s=0;const{shapeFlag:n}=e;if(t==null)t=null;else if(O(t))s=16;else if(typeof t=="object")if(n&65){const o=t.default;o&&(o._c&&(o._d=!1),Ks(e,o()),o._c&&(o._d=!0));return}else{s=32;const o=t._;!o&&!(Zt in t)?t._ctx=be:o===3&&be&&(be.slots._===1?t._=1:(t._=2,e.patchFlag|=1024))}else M(t)?(t={default:t,_ctx:be},s=32):(t=String(t),n&64?(s=16,t=[bt(t)]):s=8);e.children=t,e.shapeFlag|=s}function ql(...e){const t={};for(let s=0;s<e.length;s++){const n=e[s];for(const o in n)if(o==="class")t.class!==n.class&&(t.class=Ts([t.class,n.class]));else if(o==="style")t.style=Es([t.style,n.style]);else if(Vt(o)){const i=t[o],l=n[o];l&&i!==l&&!(O(i)&&i.includes(l))&&(t[o]=i?[].concat(i,l):l)}else o!==""&&(t[o]=n[o])}return t}function Ce(e,t,s,n=null){me(e,t,7,[s,n])}const El=bo();let Tl=0;function Ll(e,t,s){const n=e.type,o=(t?t.appContext:e.appContext)||El,i={uid:Tl++,vnode:e,type:n,parent:t,appContext:o,root:null,next:null,subTree:null,effect:null,update:null,scope:new Ko(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(o.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:mo(n,o),emitsOptions:no(n,o),emit:null,emitted:null,propsDefaults:W,inheritAttrs:n.inheritAttrs,ctx:W,data:W,props:W,attrs:W,slots:W,refs:W,setupState:W,setupContext:null,suspense:s,suspenseId:s?s.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return i.ctx={_:i},i.root=t?t.root:i,i.emit=Oi.bind(null,i),e.ce&&e.ce(i),i}let Z=null;const Al=()=>Z||be,ct=e=>{Z=e,e.scope.on()},et=()=>{Z&&Z.scope.off(),Z=null};function xo(e){return e.vnode.shapeFlag&4}let St=!1;function Il(e,t=!1){St=t;const{props:s,children:n}=e.vnode,o=xo(e);ul(e,s,o,t),_l(e,n);const i=o?Bl(e,t):void 0;return St=!1,i}function Bl(e,t){const s=e.type;e.accessCache=Object.create(null),e.proxy=Xn(new Proxy(e.ctx,ll));const{setup:n}=s;if(n){const o=e.setupContext=n.length>1?Ol(e):null;ct(e),pt();const i=ke(n,e,0,[e.props,o]);if(ut(),et(),On(i)){if(i.then(et,et),t)return i.then(l=>{Cn(e,l,t)}).catch(l=>{Kt(l,e,0)});e.asyncDep=i}else Cn(e,i,t)}else Po(e,t)}function Cn(e,t,s){M(t)?e.type.__ssrInlineRender?e.ssrRender=t:e.render=t:ee(t)&&(e.setupState=Yn(t)),Po(e,s)}let Dn;function Po(e,t,s){const n=e.type;if(!e.render){if(!t&&Dn&&!n.render){const o=n.template||Us(e).template;if(o){const{isCustomElement:i,compilerOptions:l}=e.appContext.config,{delimiters:c,compilerOptions:p}=n,g=ie(ie({isCustomElement:i,delimiters:c},l),p);n.render=Dn(o,g)}}e.render=n.render||$e}ct(e),pt(),rl(e),ut(),et()}function Nl(e){return new Proxy(e.attrs,{get(t,s){return pe(e,"get","$attrs"),t[s]}})}function Ol(e){const t=n=>{e.exposed=n||{}};let s;return{get attrs(){return s||(s=Nl(e))},slots:e.slots,emit:e.emit,expose:t}}function Qs(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(Yn(Xn(e.exposed)),{get(t,s){if(s in t)return t[s];if(s in vt)return vt[s](e)},has(t,s){return s in t||s in vt}}))}function Ml(e){return M(e)&&"__vccOpts"in e}const jl=(e,t)=>Ei(e,t,St),Fl=Symbol(""),kl=()=>Nt(Fl),Jl="3.2.47",Hl="http://www.w3.org/2000/svg",Ge=typeof document<"u"?document:null,qn=Ge&&Ge.createElement("template"),Rl={insert:(e,t,s)=>{t.insertBefore(e,s||null)},remove:e=>{const t=e.parentNode;t&&t.removeChild(e)},createElement:(e,t,s,n)=>{const o=t?Ge.createElementNS(Hl,e):Ge.createElement(e,s?{is:s}:void 0);return e==="select"&&n&&n.multiple!=null&&o.setAttribute("multiple",n.multiple),o},createText:e=>Ge.createTextNode(e),createComment:e=>Ge.createComment(e),setText:(e,t)=>{e.nodeValue=t},setElementText:(e,t)=>{e.textContent=t},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>Ge.querySelector(e),setScopeId(e,t){e.setAttribute(t,"")},insertStaticContent(e,t,s,n,o,i){const l=s?s.previousSibling:t.lastChild;if(o&&(o===i||o.nextSibling))for(;t.insertBefore(o.cloneNode(!0),s),!(o===i||!(o=o.nextSibling)););else{qn.innerHTML=n?`<svg>${e}</svg>`:e;const c=qn.content;if(n){const p=c.firstChild;for(;p.firstChild;)c.appendChild(p.firstChild);c.removeChild(p)}t.insertBefore(c,s)}return[l?l.nextSibling:t.firstChild,s?s.previousSibling:t.lastChild]}};function Vl(e,t,s){const n=e._vtc;n&&(t=(t?[t,...n]:[...n]).join(" ")),t==null?e.removeAttribute("class"):s?e.setAttribute("class",t):e.className=t}function zl(e,t,s){const n=e.style,o=se(s);if(s&&!o){if(t&&!se(t))for(const i in t)s[i]==null&&Ss(n,i,"");for(const i in s)Ss(n,i,s[i])}else{const i=n.display;o?t!==s&&(n.cssText=s):t&&e.removeAttribute("style"),"_vod"in e&&(n.display=i)}}const En=/\s*!important$/;function Ss(e,t,s){if(O(s))s.forEach(n=>Ss(e,t,n));else if(s==null&&(s=""),t.startsWith("--"))e.setProperty(t,s);else{const n=Ul(e,t);En.test(s)?e.setProperty(dt(n),s.replace(En,""),"important"):e[n]=s}}const Tn=["Webkit","Moz","ms"],ds={};function Ul(e,t){const s=ds[t];if(s)return s;let n=at(t);if(n!=="filter"&&n in e)return ds[t]=n;n=Mn(n);for(let o=0;o<Tn.length;o++){const i=Tn[o]+n;if(i in e)return ds[t]=i}return t}const Ln="http://www.w3.org/1999/xlink";function Wl(e,t,s,n,o){if(n&&t.startsWith("xlink:"))s==null?e.removeAttributeNS(Ln,t.slice(6,t.length)):e.setAttributeNS(Ln,t,s);else{const i=Oo(t);s==null||i&&!Nn(s)?e.removeAttribute(t):e.setAttribute(t,i?"":s)}}function Kl(e,t,s,n,o,i,l){if(t==="innerHTML"||t==="textContent"){n&&l(n,o,i),e[t]=s??"";return}if(t==="value"&&e.tagName!=="PROGRESS"&&!e.tagName.includes("-")){e._value=s;const p=s??"";(e.value!==p||e.tagName==="OPTION")&&(e.value=p),s==null&&e.removeAttribute(t);return}let c=!1;if(s===""||s==null){const p=typeof e[t];p==="boolean"?s=Nn(s):s==null&&p==="string"?(s="",c=!0):p==="number"&&(s=0,c=!0)}try{e[t]=s}catch{}c&&e.removeAttribute(t)}function Ql(e,t,s,n){e.addEventListener(t,s,n)}function Xl(e,t,s,n){e.removeEventListener(t,s,n)}function Yl(e,t,s,n,o=null){const i=e._vei||(e._vei={}),l=i[t];if(n&&l)l.value=n;else{const[c,p]=Gl(t);if(n){const g=i[t]=tr(n,o);Ql(e,c,g,p)}else l&&(Xl(e,c,l,p),i[t]=void 0)}}const An=/(?:Once|Passive|Capture)$/;function Gl(e){let t;if(An.test(e)){t={};let n;for(;n=e.match(An);)e=e.slice(0,e.length-n[0].length),t[n[0].toLowerCase()]=!0}return[e[2]===":"?e.slice(3):dt(e.slice(2)),t]}let ps=0;const Zl=Promise.resolve(),er=()=>ps||(Zl.then(()=>ps=0),ps=Date.now());function tr(e,t){const s=n=>{if(!n._vts)n._vts=Date.now();else if(n._vts<=s.attached)return;me(sr(n,s.value),t,5,[n])};return s.value=e,s.attached=er(),s}function sr(e,t){if(O(t)){const s=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{s.call(e),e._stopped=!0},t.map(n=>o=>!o._stopped&&n&&n(o))}else return t}const In=/^on[a-z]/,nr=(e,t,s,n,o=!1,i,l,c,p)=>{t==="class"?Vl(e,n,o):t==="style"?zl(e,s,n):Vt(t)?Ls(t)||Yl(e,t,s,n,l):(t[0]==="."?(t=t.slice(1),!0):t[0]==="^"?(t=t.slice(1),!1):or(e,t,n,o))?Kl(e,t,n,i,l,c,p):(t==="true-value"?e._trueValue=n:t==="false-value"&&(e._falseValue=n),Wl(e,t,n,o))};function or(e,t,s,n){return n?!!(t==="innerHTML"||t==="textContent"||t in e&&In.test(t)&&M(s)):t==="spellcheck"||t==="draggable"||t==="translate"||t==="form"||t==="list"&&e.tagName==="INPUT"||t==="type"&&e.tagName==="TEXTAREA"||In.test(t)&&se(s)?!1:t in e}const ir={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String};Ki.props;const lr=ie({patchProp:nr},Rl);let Bn;function rr(){return Bn||(Bn=yl(lr))}const ar=(...e)=>{const t=rr().createApp(...e),{mount:s}=t;return t.mount=n=>{const o=cr(n);if(!o)return;const i=t._component;!M(i)&&!i.render&&!i.template&&(i.template=o.innerHTML),o.innerHTML="";const l=s(o,!1,o instanceof SVGElement);return o instanceof Element&&(o.removeAttribute("v-cloak"),o.setAttribute("data-v-app","")),l},t};function cr(e){return se(e)?document.querySelector(e):e}const dr="/conception/assets/javaee-bdc328c8.svg",m=(e,t)=>{const s=e.__vccOpts||e;for(const[n,o]of t)s[n]=o;return s},pr={},ur={class:"slide show"},fr=$('<div class="heading">Conception d&#39;application</div><div class="content grid center"><h3 class="title">Conception d&#39;application<br></h3><p class="sub-title">Concepts de base et avancés</p><p>Mon portefeuille</p><p><a href="https://kilian-schropp.surge.sh/">https://kilian-schropp.surge.sh/</a></p></div>',2),hr=[fr];function _r(e,t){return h(),_("div",ur,hr)}const mr=m(pr,[["render",_r]]),gr="/conception/assets/product-life-cycle-8da8da8d.svg",vr={},yr={class:"slide"},br=$('<div class="heading">La signature d&#39;une pagaille</div><div class="content"><div class="flex-container"><div style="width:40%;"><h2>L&#39;augmentation du nombre de développeurs</h2><br><p> Ce graphique montre une entreprise prospère qui engage de plus en plus de développeurs à chaque version principale. </p><p> Je suis sûr que vous conviendrez que cette tendance est très encourageante. Une telle croissance doit être le signe d&#39;un succès significatif ! </p></div><div style="width:55%;"><img src="'+gr+'" style="width:100%;"></div></div></div>',2),wr=[br];function $r(e,t){return h(),_("div",yr,wr)}const xr=m(vr,[["render",$r]]),Pr="/conception/assets/kloc-8baa53b6.svg",Sr={},Cr={class:"slide"},Dr=$('<div class="heading">La signature d&#39;une pagaille</div><div class="content"><div class="flex-container"><div style="width:35%;"><h2>Lignes de code</h2><br><p> Il est clair que quelque chose ne va pas ici. Même si chaque version est soutenue par une augmentation de développeurs, la croissance du code semble s&#39;approcher d&#39;une limit. </p></div><div style="width:65%;"><img src="'+Pr+'" style="width:85%;"></div></div></div>',2),qr=[Dr];function Er(e,t){return h(),_("div",Cr,qr)}const Tr=m(Sr,[["render",Er]]),Lr="/conception/assets/Modèle_en_cascade-7ec45635.png",Ar={},Ir={class:"slide"},Br=$('<div class="heading">Rappel gestion de projet</div><div class="content"><div class="flex-container"><div style="width:30%;"><h2>Modèle en cascade</h2><br><p> Le modèle en cascade, est une organisation des activités d&#39;un projet sous forme de phases linéaires et séquentielles </p><p> La détection de défauts en aval nécessite des retours vers les étapes précédentes, jusqu&#39;aux exigences si celles-ci sont erronées. </p></div><div style="width:70%;"><img src="'+Lr+'" style="width:100%;"></div></div></div>',2),Nr=[Br];function Or(e,t){return h(),_("div",Ir,Nr)}const Mr=m(Ar,[["render",Or]]),jr="/conception/assets/v-model-c2a4c095.svg",Fr={},kr={class:"slide"},Jr=$('<div class="heading">Rappel gestion de projet</div><div class="content"><div class="flex-container"><div style="width:40%;"><h2>Cycle en V</h2><br><p> Le cycle en V est un modèle d&#39;organisation des activités de développement d&#39;un produit qui se caractérise par un flux d&#39;activité descendant qui détaille le produit jusqu&#39;à sa réalisation, et un flux ascendant, qui assemble le produit en vérifiant sa qualité </p></div><div style="width:55%;"><img src="'+jr+'" style="width:70%;"></div></div></div>',2),Hr=[Jr];function Rr(e,t){return h(),_("div",kr,Hr)}const Vr=m(Fr,[["render",Rr]]),zr="/conception/assets/small-step-721a0ce4.svg",Ur="/conception/assets/big-step-bd72b895.svg",Wr={},Kr={class:"slide"},Qr=$('<div class="heading">Rappel gestion de projet</div><div class="content"><h2>Iterative and Incremental</h2><br><div class="flex-container"><div><ul><li><p>vous planifiez un peu</p></li><li><p>vous spécifiez, concevez et mettez en œuvre un peu</p></li><li><p>Vous intégrez, testez et exécutez un peu chaque itération.</p></li></ul></div><div><img src="'+zr+'" style="width:40%;"><img src="'+Ur+'" style="width:40%;"></div></div><br><p> Entre chaque étape, vous recevez un feedback qui vous aide à vous concentrer sur l&#39;étape suivante. </p><p>Chaque itération est comme une &quot;mini-cascade&quot;.</p></div>',2),Xr=[Qr];function Yr(e,t){return h(),_("div",Kr,Xr)}const Gr=m(Wr,[["render",Yr]]),Zr="/conception/assets/iterative-99de3e6b.svg",ea={},ta={class:"slide"},sa=$('<div class="heading">Rappel gestion de projet</div><div class="content"><div class="flex-container"><div style="width:35%;"><h2>Pourquoi un développement itératif et incrémental ?</h2><br><p> En utilisant le modèle en cascade, il est possible que les risques sérieux ne soient pas adressés avant l&#39;intégration du code. </p></div><div style="width:65%;"><img src="'+Zr+'" style="width:100%;"></div></div></div>',2),na=[sa];function oa(e,t){return h(),_("div",ta,na)}const ia=m(ea,[["render",oa]]),la="/conception/assets/Spiral_model-b17fefb7.svg",ra={},aa={class:"slide"},ca=$('<div class="heading">Rappel gestion de projet</div><div class="content"><div class="flex-container"><div style="width:39%;"><h2>Modèle en spirale</h2><br><p> Le modèle en spirale combine l&#39;idée de développement itératif avec les aspects systématiques et contrôlés du v-model. </p></div><div style="width:59%;"><img src="'+la+'" style="width:75%;"></div></div></div>',2),da=[ca];function pa(e,t){return h(),_("div",aa,da)}const ua=m(ra,[["render",pa]]),fa="/conception/assets/designbreakage-48a6ddf5.svg",ha={},_a={class:"slide"},ma=$('<div class="heading">Rappel gestion de projet</div><div class="content"><div class="flex-container"><div style="width:34%;"><h2>Atteindre l&#39;intégration continue</h2><br><p> A chaque itération, le projet démontre qu&#39;il a réduit certains risques. Les parties intéressées peuvent voir que le projet progresse. </p></div><div style="width:63%;"><img src="'+fa+'" style="width:100%;"></div></div></div>',2),ga=[ma];function va(e,t){return h(),_("div",_a,ga)}const ya=m(ha,[["render",va]]),ba="/conception/assets/monolith-aca46f3c.svg",wa={},$a={class:"slide"},xa=$('<div class="heading">Historique</div><div class="content"><div class="flex-container"><div style="width:70%;"><h2>Applications monolithiques (Années 50/60)</h2><br><p> Le code et les données ne forment qu&#39;un bloc. Les langages informatiques ne permettant pas d&#39;être &quot;modulaire&quot;. </p><h3>Avantages</h3><ul><li>Peut avoir un sens sur de petites applications</li></ul><br><h3>Inconvénients</h3><ul><li>Tests compliqués et fastidieux</li><li>Pas ou peu de réutilisation de code</li><li>Applicatif lourd</li><li>Pas de séparation des bases de données et des traitements</li><li>Maintenance complexe</li></ul></div><div style="width:30%;"><img src="'+ba+'" style="width:90%;"></div></div></div>',2),Pa=[xa];function Sa(e,t){return h(),_("div",$a,Pa)}const Ca=m(wa,[["render",Sa]]),Da="/conception/assets/monolith-sql-cedc01f4.svg",qa={},Ea={class:"slide"},Ta=$('<div class="heading">Historique</div><div class="content"><div class="flex-container"><div style="width:55%;"><h2>Applications monolithiques avec SGBDR (Années 70/80)</h2><br><p> Forte évolution des langages de programmation et développement des bases de données relationnelles </p><h3>Avantages</h3><ul><li>Séparation des traitements et de données</li></ul><br><h3>Inconvénients</h3><ul><li>Nécessite plus de compétences</li><li>L&#39;applicatif reste monolithique</li></ul></div><div style="width:45%;"><img src="'+Da+'" style="width:100%;"></div></div></div>',2),La=[Ta];function Aa(e,t){return h(),_("div",Ea,La)}const Ia=m(qa,[["render",Aa]]),Ba="/conception/assets/monolith-client-serverl-e20845e8.svg",Na={},Oa={class:"slide"},Ma=$('<div class="heading">Historique</div><div class="content"><h2> Application avec SGBDR et architecture client-serveur (Années 80+) </h2><div class="flex-container"><div style="width:35%;"><br><p>Communication à travers un serveur</p><h3>Avantages</h3><ul><li>Séparation entre le code client et le code serveur</li><li> Utilisation intensive des protocoles de communication réseau </li></ul><br><h3>Inconvénients</h3><ul><li>Compétence en réseau</li><li>Ne résout pas la conception monolithique</li><li>Augmente la technicité</li></ul></div><div style="width:60%;"><br><img src="'+Ba+'" style="width:100%;"></div></div></div>',2),ja=[Ma];function Fa(e,t){return h(),_("div",Oa,ja)}const ka=m(Na,[["render",Fa]]),So="/conception/assets/monolith-decoupage-2a78ec27.svg",Ja={},Ha={class:"slide"},Ra=$('<div class="heading">Le découplage applicatif</div><div class="content"><div class="flex-container"><div style="width:60%;"><h2>Objectif</h2><br><ul><li>Avoir des composants applicatifs</li><li>Pouvant évoluer de manière libre</li><li>Nous ne parlerons ici que du code</li></ul><br><h3>Couplage fort:</h3><ul><li> Impossible de séparer les composants <ul><li>L&#39;intrication est trop forte</li><li>Il n&#39;y pas de notions d&#39;interface</li></ul></li><li> Pouvant évoluer de manière libre <ul><li> Les objets doivent mutuellement se connaître pour exister </li></ul></li><li>Nous ne parlerons ici que du code</li></ul></div><div style="width:35%;"><br><img src="'+So+'" style="width:100%;"></div></div></div>',2),Va=[Ra];function za(e,t){return h(),_("div",Ha,Va)}const Ua=m(Ja,[["render",za]]),Wa="/conception/assets/monolith-decoupled-77be1629.svg",Ka={},Qa={class:"slide"},Xa=$('<div class="heading">Le découplage applicatif</div><div class="content"><div class="flex-container"><div style="width:60%;"><h2>Objectif</h2><br><ul><li>Avoir des composants applicatifs</li><li>Pouvant évoluer de manière libre</li><li>Nous ne parlerons ici que du code</li></ul><br><h3>Couplage faible:</h3><ul><li>Réduction des dépendances entre les composants</li><li>Notion d&#39;interface et de service</li><li> Les composants ne sont pas totalement autonomes <ul><li>Même si les dépendances sont faibles</li><li> La suppression d&#39;un composant impacte le fonctionnement du système </li></ul></li></ul></div><div style="width:35%;"><br><img src="'+Wa+'" style="width:100%;"></div></div></div>',2),Ya=[Xa];function Ga(e,t){return h(),_("div",Qa,Ya)}const Za=m(Ka,[["render",Ga]]),ec="/conception/assets/monolith-decoupled-total-2c84301f.svg",tc={},sc={class:"slide"},nc=$('<div class="heading">Le découplage applicatif</div><div class="content"><div class="flex-container"><div style="width:60%;"><h2>Objectif</h2><br><ul><li>Avoir des composants applicatifs</li><li>Pouvant évoluer de manière libre</li><li>Nous ne parlerons ici que du code</li></ul><br><h3>Découplage total:</h3><ul><li>Les composants communiquent par des protocoles</li><li>On peut débrancher les clients sans impacter les serveurs</li><li> On peut débrancher un composant <ul><li>Et le remplacer par un autre</li><li>Sans régression</li></ul></li></ul></div><div style="width:35%;"><br><img src="'+ec+'" style="width:100%;"></div></div></div>',2),oc=[nc];function ic(e,t){return h(),_("div",sc,oc)}const lc=m(tc,[["render",ic]]),rc={},ac={class:"slide"},cc=$(`<div class="heading"> Paradigme de programmation - Structured programming </div><div class="content"><div class="flex-container"><div style="width:50%;"><h2>Structured programming</h2><div style="background:#ffffff;overflow:auto;width:auto;height:100%;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:100%;font-size:0.95em;">              <span style="color:#008800;font-weight:bold;">function</span> quadraticFormula(a, b, c) {
                  <span style="color:#008800;font-weight:bold;">let</span> discriminant <span style="color:#333333;">=</span> b<span style="color:#333333;">**</span><span style="color:#0000DD;font-weight:bold;">2</span> <span style="color:#333333;">-</span> <span style="color:#0000DD;font-weight:bold;">4</span><span style="color:#333333;">*</span>a<span style="color:#333333;">*</span>c;
                  <span style="color:#008800;font-weight:bold;">if</span> (discriminant <span style="color:#333333;">&lt;</span> <span style="color:#0000DD;font-weight:bold;">0</span>) {
                      <span style="color:#008800;font-weight:bold;">return</span> <span style="color:#008800;font-weight:bold;">null</span>;
                  } <span style="color:#008800;font-weight:bold;">else</span> {
                      <span style="color:#008800;font-weight:bold;">let</span> x1 <span style="color:#333333;">=</span> (<span style="color:#333333;">-</span>b <span style="color:#333333;">+</span> <span style="color:#007020;">Math</span>.sqrt(discriminant)) <span style="color:#333333;">/</span> (<span style="color:#0000DD;font-weight:bold;">2</span><span style="color:#333333;">*</span>a);
                      <span style="color:#008800;font-weight:bold;">let</span> x2 <span style="color:#333333;">=</span> (<span style="color:#333333;">-</span>b <span style="color:#333333;">-</span> <span style="color:#007020;">Math</span>.sqrt(discriminant)) <span style="color:#333333;">/</span> (<span style="color:#0000DD;font-weight:bold;">2</span><span style="color:#333333;">*</span>a);
                      <span style="color:#008800;font-weight:bold;">return</span> [x1, x2];
                  }
              }
              <span style="color:#008800;font-weight:bold;">function</span> main() {
                  <span style="color:#008800;font-weight:bold;">let</span> a <span style="color:#333333;">=</span> <span style="color:#007020;">parseFloat</span>(prompt(<span style="background-color:#fff0f0;">&quot;Enter first number: &quot;</span>));
                  <span style="color:#008800;font-weight:bold;">let</span> b <span style="color:#333333;">=</span> <span style="color:#007020;">parseFloat</span>(prompt(<span style="background-color:#fff0f0;">&quot;Enter second number: &quot;</span>));
                  <span style="color:#008800;font-weight:bold;">let</span> c <span style="color:#333333;">=</span> <span style="color:#007020;">parseFloat</span>(prompt(<span style="background-color:#fff0f0;">&quot;Enter third number: &quot;</span>));
                  
                  <span style="color:#008800;font-weight:bold;">let</span> roots <span style="color:#333333;">=</span> quadraticFormula(a, b, c);
                  <span style="color:#008800;font-weight:bold;">if</span> (roots <span style="color:#333333;">===</span> <span style="color:#008800;font-weight:bold;">null</span>) {
                      console.log(<span style="background-color:#fff0f0;">&quot;No real roots&quot;</span>);
                  } <span style="color:#008800;font-weight:bold;">else</span> {
                      console.log(<span style="background-color:#fff0f0;">&quot;The roots are:&quot;</span>, roots);
                  }
              }
              main();</pre></div></div><div style="width:45%;"><h2>Non-structured programming</h2><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            <span style="color:#6600EE;font-weight:bold;">10</span> <span style="color:#008800;font-weight:bold;">INPUT</span> <span style="background-color:#fff0f0;">&quot;ENTER FIRST NUMBER&quot;</span>; A
            <span style="color:#6600EE;font-weight:bold;">20</span> <span style="color:#008800;font-weight:bold;">INPUT</span> <span style="background-color:#fff0f0;">&quot;ENTER SECOND NUMBER&quot;</span>; B
            <span style="color:#6600EE;font-weight:bold;">30</span> <span style="color:#008800;font-weight:bold;">INPUT</span> <span style="background-color:#fff0f0;">&quot;ENTER THIRD NUMBER&quot;</span>; C
            <span style="color:#6600EE;font-weight:bold;">40</span> <span style="color:#008800;font-weight:bold;">IF</span> A <span style="color:#333333;">=</span> <span style="color:#6600EE;font-weight:bold;">0</span> <span style="color:#008800;font-weight:bold;">THEN</span> <span style="color:#008800;font-weight:bold;">GOTO</span> <span style="color:#6600EE;font-weight:bold;">120</span>
            <span style="color:#6600EE;font-weight:bold;">50</span> D <span style="color:#333333;">=</span> B<span style="color:#333333;">^</span><span style="color:#6600EE;font-weight:bold;">2</span> <span style="color:#333333;">-</span> <span style="color:#6600EE;font-weight:bold;">4</span><span style="color:#333333;">*</span>A<span style="color:#333333;">*</span>C
            <span style="color:#6600EE;font-weight:bold;">60</span> <span style="color:#008800;font-weight:bold;">IF</span> D <span style="color:#333333;">&lt;</span> <span style="color:#6600EE;font-weight:bold;">0</span> <span style="color:#008800;font-weight:bold;">THEN</span> <span style="color:#008800;font-weight:bold;">GOTO</span> <span style="color:#6600EE;font-weight:bold;">90</span>
            <span style="color:#6600EE;font-weight:bold;">70</span> X1 <span style="color:#333333;">=</span> (<span style="color:#333333;">-</span>B <span style="color:#333333;">+</span> <span style="color:#007020;">SQR</span>(D))<span style="color:#333333;">/</span>(<span style="color:#6600EE;font-weight:bold;">2</span><span style="color:#333333;">*</span>A)
            <span style="color:#6600EE;font-weight:bold;">80</span> X2 <span style="color:#333333;">=</span> (<span style="color:#333333;">-</span>B <span style="color:#333333;">-</span> <span style="color:#007020;">SQR</span>(D))<span style="color:#333333;">/</span>(<span style="color:#6600EE;font-weight:bold;">2</span><span style="color:#333333;">*</span>A)
            <span style="color:#6600EE;font-weight:bold;">90</span> <span style="color:#008800;font-weight:bold;">PRINT</span> <span style="background-color:#fff0f0;">&quot;THE ROOTS ARE&quot;</span>
            <span style="color:#6600EE;font-weight:bold;">100</span> <span style="color:#008800;font-weight:bold;">PRINT</span> X1
            <span style="color:#6600EE;font-weight:bold;">110</span> <span style="color:#008800;font-weight:bold;">PRINT</span> X2
            <span style="color:#6600EE;font-weight:bold;">120</span> <span style="color:#008800;font-weight:bold;">END</span></pre></div></div></div></div>`,2),dc=[cc];function pc(e,t){return h(),_("div",ac,dc)}const uc=m(rc,[["render",pc]]),fc="/conception/assets/spaghetti-4e9a699d.svg",hc={},_c={class:"slide"},mc=$('<div class="heading"> Paradigme de programmation - Structured programming </div><div class="content"><div class="flex-container"><div style="width:55%;"><h2>Non-structured programming</h2><br><h3>Il peut être difficile de tester et de réutiliser le code</h3><br><p> Certaines utilisations des instructions goto empêchent la décomposition des modules en unités de plus en plus petites, empêchant ainsi l&#39;utilisation de l&#39;approche &quot;diviser pour régner&quot; nécessaire pour des tests raisonnables. </p><p> La programmation est difficile, et les programmeurs ne la font pas très bien, ce qui, surtout dans le cas de la programmation non structurée, donne un code spaghetti. </p></div><div style="width:40%;"><img src="'+fc+'" style="width:90%;"></div></div></div>',2),gc=[mc];function vc(e,t){return h(),_("div",_c,gc)}const yc=m(hc,[["render",vc]]),bc={},wc={class:"slide"},$c=$(`<div class="heading">Paradigme de programmation - POO</div><div class="content"><h2>Qu&#39;est-ce que la programmation orientée objet ?</h2><br><ol><li><p>Un moyen de modéliser le monde réel?</p> Pourquoi je pourrais pas le faire sans POO ? </li><br><li><p>La combinaison des données et de la fonction?</p> Alors c&#39;est quoi la différence entre les deux ? <div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            object.<span style="color:#008800;font-weight:bold;">function</span>()
            <span style="color:#008800;font-weight:bold;">function</span>(object)</pre></div></li><br><li><p>encapsulation, l&#39;héritage et le polymorphisme?</p> On ne pouvait pas faire ça avant POO? </li></ol></div>`,2),xc=[$c];function Pc(e,t){return h(),_("div",wc,xc)}const Sc=m(bc,[["render",Pc]]),Cc="/conception/assets/capsule-0ab86ebc.svg",Dc={},qc={class:"slide"},Ec=$('<div class="heading">Paradigme de programmation - POO</div><div class="content"><div class="flex-container"><div style="width:55%;"><h2>Encapsulation</h2><br><p> Dans les systèmes logiciels, l&#39;encapsulation désigne le regroupement de données avec les mécanismes ou les méthodes qui opèrent sur ces données. Elle peut également faire référence à la limitation de l&#39;accès direct à certaines de ces données. </p><br><p> L&#39;encapsulation existait déjà avant que POO ne soit une chose. En C, nous pouvions même réaliser une meilleure encapsulation que Java et C# ou d&#39;autres langages POO. </p></div><div style="width:40%;"><img src="'+Cc+'" style="width:80%;"></div></div></div>',2),Tc=[Ec];function Lc(e,t){return h(),_("div",qc,Tc)}const Ac=m(Dc,[["render",Lc]]),Ic="/conception/assets/link-7d728cc3.gif",Bc="/conception/assets/grave-7411f7d8.svg",Nc={},Oc={class:"slide"},Mc=$('<div class="heading">Paradigme de programmation - POO</div><div class="content"><h2>Inheritance</h2><br><p> l&#39;héritage est le mécanisme qui consiste à baser un objet ou une classe sur un autre objet ou une autre classe, en conservant une mise en œuvre similaire </p><p> Les programmeurs C pouvaient avoir une sorte d&#39;héritage avant que POO n&#39;entre en scène. </p><p> La vérité est que c&#39;est une ruse, et c&#39;est loin d&#39;être aussi pratique que l&#39;héritage réel. <a href="https://github.com/git/git/blob/master/tag.h#L8">Git</a> utilise cette ruse </p><img src="'+Ic+'" style="width:20%;"><img src="'+Bc+'" style="width:20%;"></div>',2),jc=[Mc];function Fc(e,t){return h(),_("div",Oc,jc)}const kc=m(Nc,[["render",Fc]]),Jc="/conception/assets/Jaguar-light-ed3cf925.jpg",Hc="/conception/assets/Black_jaguar-c0be6605.jpg",Rc={},Vc={class:"slide"},zc=$('<div class="heading">Paradigme de programmation - POO</div><div class="content"><div class="flex-container"><div style="width:75%;"><h2>Polymorphism</h2><br><p> Dans la théorie des langages de programmation et la théorie des types, le polymorphisme est la fourniture d&#39;une interface unique à des entités de types différents ou l&#39;utilisation d&#39;un symbole unique pour représenter plusieurs types différents </p><p> Les programmeurs ont utilisé des pointeurs vers des fonctions pour obtenir un comportement polymorphe depuis la mise en œuvre des premières architectures Von Neumann à la fin des années 1940 </p><h2>Alors pourquoi s&#39;embêter avec POO ?</h2><p> POO a rendu le Polymorphisme beaucoup plus sûr et beaucoup plus pratique </p></div><div style="width:22%;"><img src="'+Jc+'" style="width:100%;"> Light Jaguar <img src="'+Hc+'" style="width:100%;"> Black Jaguar </div></div></div>',2),Uc=[zc];function Wc(e,t){return h(),_("div",Vc,Uc)}const Kc=m(Rc,[["render",Wc]]),Qc="/conception/assets/Traditional-af13eb78.svg",Xc="/conception/assets/dependencyInversion-60ce8845.svg",Yc={},Gc={class:"slide"},Zc=$('<div class="heading">Paradigme de programmation - POO</div><div class="content"><h2>Inversion des dépendances</h2><br><p> C&#39;est le pouvoir que POO fournit. POO est la capacité, grâce à l&#39;utilisation du polymorphisme, d&#39;obtenir un contrôle absolu sur chaque dépendance du code source dans le système. Elle permet à l&#39;architecte de créer une architecture plug-in </p><div class="flex-container"><div style="width:48%;"><h2>Traditional layers pattern</h2><img src="'+Qc+'" style="width:80%;"></div><div style="width:48%;"><h2>Dependency inversion pattern</h2><img src="'+Xc+'" style="width:75%;"></div></div></div>',2),ed=[Zc];function td(e,t){return h(),_("div",Gc,ed)}const sd=m(Yc,[["render",td]]),nd="/conception/assets/buttonTraditional-58f61c48.svg",od={},id={class:"slide"},ld=a("div",{class:"heading"},"DIP - Dependency Inversion Principle",-1),rd=a("div",{class:"content"},[a("h2",null,"Traditional layers pattern"),a("br"),a("p",null,"Nous revenons au polymorphisme et pourquoi c'est si cool."),a("p",null," Tout d'abord, imprégnons-nous du traditional layer pattern. Je vous fournirai un exemple programmatique, j'expliquerai pourquoi il est moins flexible et je vous proposerai une alternative. "),a("br"),a("img",{src:nd,style:{width:"80%"}})],-1),ad=[ld,rd];function cd(e,t){return h(),_("div",id,ad)}const dd=m(od,[["render",cd]]),pd={},ud={class:"slide"},fd=a("div",{class:"heading"},"DIP - Dependency Inversion Principle",-1),hd=a("div",{class:"content"},[a("h2",null,"Traditional layers pattern"),a("div",{class:"iFrame-container","data-link":"https://replit.com/@DupondDupont/Button-lamp?embed=1"},[a("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),_d=[fd,hd];function md(e,t){return h(),_("div",ud,_d)}const gd=m(pd,[["render",md]]),vd={},yd={class:"slide"},bd=$('<div class="heading">DIP - Dependency Inversion Principle</div><div class="content"><div class="flex-container"><div style="width:60%;"><h2>Traditional layers pattern</h2><br><p> Vous vous souvenez de ce que nous avons dit plus tôt à propos du monolithe. L&#39;utilisation du &quot;Traditional layers pattern&quot; est un excellent point de départ pour créer un tel monolithe indestructible. </p><br><h3>Couplage fort:</h3><br><ul><li> Impossible de séparer les composants <ul><li>L&#39;intrication est trop forte</li><li>Il n&#39;y pas de notions d&#39;interface</li></ul></li><li> Pouvant évoluer de manière libre <ul><li> Les objets doivent mutuellement se connaître pour exister </li></ul></li></ul></div><div style="width:35%;"><br><img src="'+So+'" style="width:100%;"></div></div></div>',2),wd=[bd];function $d(e,t){return h(),_("div",yd,wd)}const xd=m(vd,[["render",$d]]),Pd="/conception/assets/buttonDIP-ff5a3048.svg",Sd={},Cd={class:"slide"},Dd=$('<div class="heading">DIP - Dependency Inversion Principle</div><div class="content"><div class="flex-container"><div style="width:48%;"><h2>Dependency inversion pattern</h2><br><p> Les systèmes les plus flexibles sont ceux dans lesquels les dépendances du code source ne font référence qu&#39;à des abstractions, et non à des concrétions </p><p> En Java, cela signifie que l&#39;instruction du &quot;import&quot; ne doit faire référence qu&#39;aux modules sources contenant des interfaces, des classes abstraites, ou un autre type de déclaration abstraite. Il ne faut dépendre de rien de concret. </p></div><div style="width:48%;"><img src="'+Pd+'" style="width:100%;"></div></div></div>',2),qd=[Dd];function Ed(e,t){return h(),_("div",Cd,qd)}const Td=m(Sd,[["render",Ed]]),Ld={},Ad={class:"slide"},Id=a("div",{class:"heading"},"DIP - Dependency Inversion Principle",-1),Bd=a("div",{class:"content"},[a("h2",null,"Dependency inversion pattern"),a("div",{class:"iFrame-container","data-link":"https://replit.com/@DupondDupont/buttonDIP?embed=1"},[a("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),Nd=[Id,Bd];function Od(e,t){return h(),_("div",Ad,Nd)}const Md=m(Ld,[["render",Od]]),jd="/conception/assets/sponge-20403a27.svg",Fd={},kd={class:"slide"},Jd=$('<div class="heading">DIP - Dependency Inversion Principle</div><div class="content"><div class="flex-container"><div style="width:48%;"><h2>Dependency inversion pattern</h2><br><h3>D&#39;acc, c&#39;est bien, et alors ?</h3><br><p> Examinons notre exemple une fois qu&#39;il est un peu plus complexe et qu&#39;il comporte plus de fonctionnalités. </p><p> Le patron entre en trombe dans le bureau. Il transpire, se penche vers vous et vous dit. </p><p><i>Nous ne devons pas seulement éteindre les lampes, mais aussi les ordinateurs.</i></p><p>Qu&#39;est-ce qu&#39;on fait ?</p></div><div style="width:48%;"><img src="'+jd+'" style="width:100%;"></div></div></div>',2),Hd=[Jd];function Rd(e,t){return h(),_("div",kd,Hd)}const Vd=m(Fd,[["render",Rd]]),zd="/conception/assets/buttonTraditionalextension-6c3c6204.svg",Ud={},Wd={class:"slide"},Kd=a("div",{class:"heading"},"DIP - Dependency Inversion Principle",-1),Qd=a("div",{class:"content"},[a("h2",null,"Traditional layers pattern"),a("br"),a("p",null," En regardant le diagramme des classes, nous voyons déjà que tout semble très dupliqué. Cette situation n'est pas optimale. "),a("br"),a("img",{src:zd,style:{width:"60%"}})],-1),Xd=[Kd,Qd];function Yd(e,t){return h(),_("div",Wd,Xd)}const Gd=m(Ud,[["render",Yd]]),Zd={},ep={class:"slide"},tp=a("div",{class:"heading"},"DIP - Dependency Inversion Principle",-1),sp=a("div",{class:"content"},[a("h2",null,"Traditional layers pattern"),a("div",{class:"iFrame-container","data-link":"https://replit.com/@DupondDupont/buttonExtension?embed=1"},[a("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),np=[tp,sp];function op(e,t){return h(),_("div",ep,np)}const ip=m(Zd,[["render",op]]),lp="/conception/assets/buttonDIPextended-a3856df7.svg",rp={},ap={class:"slide"},cp=a("div",{class:"heading"},"DIP - Dependency Inversion Principle",-1),dp=a("div",{class:"content"},[a("h2",null,"Dependency inversion pattern"),a("br"),a("p",null," La solution avec le DIP est assez simple. Il suffit de fournir une deuxième implémentation pour l'interface SwitchableDevice. Easy! "),a("img",{src:lp,style:{width:"47%"}})],-1),pp=[cp,dp];function up(e,t){return h(),_("div",ap,pp)}const fp=m(rp,[["render",up]]),hp={},_p={class:"slide"},mp=a("div",{class:"heading"},"DIP - Dependency Inversion Principle",-1),gp=a("div",{class:"content"},[a("h2",null,"Dependency inversion pattern"),a("div",{class:"iFrame-container","data-link":"https://replit.com/@DupondDupont/buttonDIPExtension?embed=1"},[a("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),vp=[mp,gp];function yp(e,t){return h(),_("div",_p,vp)}const bp=m(hp,[["render",yp]]),Re="/conception/assets/zip-file-64b1e69f.svg",wp={},$p={class:"slide"},xp=a("div",{class:"heading"},"DIP - Dependency Inversion Principle",-1),Pp=a("div",{class:"content"},[a("h2",null,"Dependency inversion pattern"),a("br"),a("h3",null," Exercice: Ajouter au code une imprimante qui peut être allumée et éteinte. "),a("br"),a("p",null," Bonus : Ajoutez une alternative à Button. Comme un capteur qui réagit aux applaudissements. Lorsqu'il est applaudi une fois, l'appareil s'allume. Lorsqu'il est applaudi deux fois, l'appareil s'éteint. "),a("p",null," (Je ne m'attends pas à quelque chose d'extraordinaire. Je veux juste montrer avec le bonus que même Button peut être remplacé par quelque chose d'autre dans ce système.) "),a("a",{href:"./exercices/dip/DIP-exercice-1.zip",download:"DIP-exercice-1.zip"},[a("img",{src:Re,style:{width:"10%"}}),bt("Download zip exercice")])],-1),Sp=[xp,Pp];function Cp(e,t){return h(),_("div",$p,Sp)}const Dp=m(wp,[["render",Cp]]),qp={},Ep={class:"slide"},Tp=$('<div class="heading">DIP - Dependency Inversion Principle</div><div class="content"><div class="flex-container"><div style="width:49%;"><h2>Exercice: Ce code ne suit-il pas le DIP ?</h2><br><p> Voyez comment MessageService a deux dépendances pour EmailSender et TextMessageSender. Que diriez-vous de modifier le code en respectant la règle DIP ? </p><a href="./exercices/dip/DIP-exercice-2.zip" download="DIP-exercice-2.zip"><img src="'+Re+`" style="width:10%;">Download zip exercice</a></div><div style="width:50%;"><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">          <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">MessageService</span> <span style="color:#333333;">{</span>
              <span style="color:#008800;font-weight:bold;">private</span> EmailSender emailSender<span style="color:#333333;">;</span>
              <span style="color:#008800;font-weight:bold;">private</span> TextMessageSender textMessageSender<span style="color:#333333;">;</span>
              
              <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#0066BB;font-weight:bold;">MessageService</span><span style="color:#333333;">()</span> <span style="color:#333333;">{</span>
                  emailSender <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">new</span> EmailSender<span style="color:#333333;">();</span>
                  textMessageSender <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">new</span> TextMessageSender<span style="color:#333333;">();</span>
              <span style="color:#333333;">}</span>
              
              <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#333399;font-weight:bold;">void</span> <span style="color:#0066BB;font-weight:bold;">sendEmail</span><span style="color:#333333;">(</span>String message<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
                  emailSender<span style="color:#333333;">.</span><span style="color:#0000CC;">sendEmail</span><span style="color:#333333;">(</span>message<span style="color:#333333;">);</span>
              <span style="color:#333333;">}</span>
              
              <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#333399;font-weight:bold;">void</span> <span style="color:#0066BB;font-weight:bold;">sendTextMessage</span><span style="color:#333333;">(</span>String message<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
                  textMessageSender<span style="color:#333333;">.</span><span style="color:#0000CC;">sendTextMessage</span><span style="color:#333333;">(</span>message<span style="color:#333333;">);</span>
              <span style="color:#333333;">}</span>
          <span style="color:#333333;">}</span></pre></div></div></div></div>`,2),Lp=[Tp];function Ap(e,t){return h(),_("div",Ep,Lp)}const Ip=m(qp,[["render",Ap]]),Bp="/conception/assets/buttonDIPextendedInheritance-6d722a86.svg",Np={},Op={class:"slide"},Mp=$('<div class="heading">DIP - Inheritance</div><div class="content"><div class="flex-container"><div style="width:48%;"><h2>Nous avons vu pourquoi le DIP est si cool</h2><br><p> D&#39;accord, mais on peut pas faire la même chose avec l&#39;héritage ? </p><p> Voyons à quoi ressemblerait notre bouton si nous le mettions en œuvre en utilisant l&#39;héritage. Nous verrons ensuite pourquoi l&#39;héritage a des limites. À la fin, j&#39;essaie d&#39;expliquer pourquoi il peut même être dangereux dans certains cas. </p></div><div style="width:48%;"><img src="'+Bp+'" style="width:100%;"></div></div></div>',2),jp=[Mp];function Fp(e,t){return h(),_("div",Op,jp)}const kp=m(Np,[["render",Fp]]),Jp={},Hp={class:"slide"},Rp=a("div",{class:"heading"},"DIP - Inheritance",-1),Vp=a("div",{class:"content"},[a("p",null," Nous avons même un comportement par défaut lorsqu'une sous-classe étend la classe de base et oublie d'implémenter les deux fonctions. N'est-ce pas un peu cool ? "),a("div",{class:"iFrame-container","data-link":"https://replit.com/@DupondDupont/buttonDIPInheritance?embed=1"},[a("iframe",{src:"lightswitch.html",width:"100%",height:"97%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),zp=[Rp,Vp];function Up(e,t){return h(),_("div",Hp,zp)}const Wp=m(Jp,[["render",Up]]),Kp="/conception/assets/buttonDIPextendedInheritanceInventory-87d29f34.svg",Qp={},Xp={class:"slide"},Yp=a("div",{class:"heading"},"DIP - Inheritance",-1),Gp=a("div",{class:"content"},[a("h2",null,"Voyons à quel point c'est cool"),a("br"),a("p",null," Notre patron a décidé de suivre l'évolution de ses stocks. Une lampe, un ordinateur et une imprimante sont tous des biens en stock. Nous voulons donc les inclure dans notre modèle. "),a("p",null," Il veut scanner les codes-barres pour identifier les biens et tenir l'inventaire. "),a("img",{src:Kp,style:{width:"70%"}})],-1),Zp=[Yp,Gp];function e3(e,t){return h(),_("div",Xp,Zp)}const t3=m(Qp,[["render",e3]]),s3={},n3={class:"slide"},o3=a("div",{class:"heading"},"DIP - Inheritance",-1),i3=a("div",{class:"content"},[a("p",null," J'ai réussi à le faire fonctionner. Mais remarquez que mon diagramme de classes correspond pas à mon code. "),a("div",{class:"iFrame-container","data-link":"https://replit.com/@DupondDupont/buttonDIPInheritanceExtension2?embed=1"},[a("iframe",{src:"lightswitch.html",width:"100%",height:"97%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),l3=[o3,i3];function r3(e,t){return h(),_("div",n3,l3)}const a3=m(s3,[["render",r3]]),c3="/conception/assets/buttonDIPextendedInheritanceInventoryMess-9e122861.svg",d3={},p3={class:"slide"},u3=$('<div class="heading">DIP - Inheritance</div><div class="content"><div class="flex-container"><div style="width:58%;"><h2>Ça sent le désordre</h2><br><p> Nous ne pouvons pas étendre plusieurs classes de base dans les classes Computer et Lamp. </p><p>Nous laissons donc le device étendre InventoryAsset.</p><p> Tout ce qui étend maintenant Device est-un (is-a) device et-un (is-a) inventoryAsset. </p><h3>Le téléphone privé est-il un InventoryAsset?</h3></div><div style="width:40%;"><img src="'+c3+'" style="width:100%;"></div></div></div>',2),f3=[u3];function h3(e,t){return h(),_("div",p3,f3)}const _3=m(d3,[["render",h3]]),m3="/conception/assets/frog-014a28ae.svg",g3="/conception/assets/Diamond_inheritance-4a404e96.svg",v3={},y3={class:"slide"},b3=$('<div class="heading">DIP - Inheritance - Problème du diamant</div><div class="content"><p> Pourquoi on ne peut pas utiliser extend pour hériter de plusieurs classes ? </p><img src="'+m3+`" class="logo" style="left:50%;top:35%;height:25%;"><div class="flex-container" style="overflow-y:scroll;height:100%;"><div style="width:68%;"><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            abstract <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">LiveAnimals</span> {
                public abstract void livingPlace();
            }

            <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">Aquatics</span> extends LiveAnimals {
                public void livingPlace() {
                    System<span style="color:#333333;">.</span>out<span style="color:#333333;">.</span>println(<span style="background-color:#fff0f0;">&quot;Live in water&quot;</span>);
                }
            }

            <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">Terrestrials</span> extends LiveAnimals {
                public void livingPlace() {
                    System<span style="color:#333333;">.</span>out<span style="color:#333333;">.</span>println(<span style="background-color:#fff0f0;">&quot;Live on Land&quot;</span>);
                }
            }

            <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">Amphibians</span> extends Terrestrials extends Aquatics {
                public void live() {
                    livingPlace(); <span style="color:#333333;">//</span>Quelle methode livingPlace() va etre appelee ?
                }
            }</pre></div></div><div style="width:30%;"><h2>Problème du diamant</h2><img src="`+g3+'" style="width:77%;"></div></div></div>',2),w3=[b3];function $3(e,t){return h(),_("div",y3,w3)}const x3=m(v3,[["render",$3]]),P3={},S3={class:"slide"},C3=a("div",{class:"heading"},"DIP - Inheritance",-1),D3=a("div",{class:"content"},[a("p",null," Voyons comment nous pouvons résoudre ce problème à l'aide d'interfaces "),a("div",{class:"iFrame-container","data-link":"https://replit.com/@DupondDupont/buttonScanInterface?embed=1"},[a("iframe",{src:"lightswitch.html",width:"100%",height:"97%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),q3=[C3,D3];function E3(e,t){return h(),_("div",S3,q3)}const T3=m(P3,[["render",E3]]),L3="/conception/assets/buttonDIPextendedInventoryInterface-b89311f6.svg",A3={},I3={class:"slide"},B3=a("div",{class:"heading"},"DIP - Inheritance",-1),N3=a("div",{class:"content"},[a("h2",null,"Contrôle total"),a("br"),a("p",null," Pas de dépendances inutiles, de fonctionnalités dont une sous-classe pourrait ne pas avoir besoin, pas de problème de diamant. Joli "),a("p",null," Nous pouvons même ajouter une table. Un article d'inventaire qui ne peut pas être allumé ou éteint et qui s'intègre dans notre modèle. "),a("img",{src:L3,style:{width:"60%"}})],-1),O3=[B3,N3];function M3(e,t){return h(),_("div",I3,O3)}const j3=m(A3,[["render",M3]]),F3={},k3={class:"slide"},J3=$(`<div class="heading">Conventions de dénomination</div><div class="content"><p> Petit détour par les conventions de nommage des interfaces et des classes </p><br><h2>Noms de classe</h2><p> Les noms de classe doivent être des noms (noun), car ils représentent des &quot;choses&quot; ou des &quot;objets&quot;. </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">        <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">Fish</span> <span style="color:#333333;">{...}</span></pre></div><br><h2>Noms des interfaces</h2><p> Les noms d&#39;interface doivent être des adjectifs. Ils doivent se terminer par &quot;able&quot; ou &quot;ible&quot; lorsque l&#39;interface fournit une capacité ; sinon, ils doivent être des noms. </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">        <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">interface</span> <span style="color:#BB0066;font-weight:bold;">Serializable</span> <span style="color:#333333;">{...}</span>
        <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">interface</span> <span style="color:#BB0066;font-weight:bold;">SystemPanel</span> <span style="color:#333333;">{...}</span></pre></div></div>`,2),H3=[J3];function R3(e,t){return h(),_("div",k3,H3)}const V3=m(F3,[["render",R3]]),z3="/conception/assets/rectangleSquare-44030b65.svg",U3={},W3={class:"slide"},K3=$('<div class="heading">LSP - The Liskov Substitution Principle</div><div class="content"><div class="flex-container"><div style="width:68%;"><h2> Les sous-types doivent être substituables à leurs types de base </h2><br><p> Comme il peut être difficile de comprendre ce que cela signifie, examinons un code qui enfreint la règle du LSP </p><p> Un rectangle a une hauteur et une longueur. Un carré est un rectangle qui n&#39;a qu&#39;une seule longueur. </p><h3>On verra des problèmes inattendus</h3></div><div style="width:30%;"><img src="'+z3+'" style="width:80%;"></div></div></div>',2),Q3=[K3];function X3(e,t){return h(),_("div",W3,Q3)}const Y3=m(U3,[["render",X3]]),G3={},Z3={class:"slide"},eu=a("div",{class:"heading"},"LSP - The Liskov Substitution Principle",-1),tu=a("div",{class:"content"},[a("p",null," Si la personne qui écrit la méthode pense qu'elle travaille avec un rectangle, le résultat pour l'aire peut être surprenant "),a("div",{class:"iFrame-container","data-link":"https://replit.com/@DupondDupont/squareLSP?embed=1"},[a("iframe",{src:"lightswitch.html",width:"100%",height:"97%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),su=[eu,tu];function nu(e,t){return h(),_("div",Z3,su)}const ou=m(G3,[["render",nu]]),iu={},lu={class:"slide"},ru=$(`<div class="heading">LSP - The Liskov Substitution Principle</div><div class="content"><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">    
        <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">static</span> <span style="color:#333399;font-weight:bold;">void</span> <span style="color:#0066BB;font-weight:bold;">modifyArea</span><span style="color:#333333;">(</span>Rectangle r<span style="color:#333333;">){</span>
            r<span style="color:#333333;">.</span><span style="color:#0000CC;">setHeight</span><span style="color:#333333;">(</span><span style="color:#0000DD;font-weight:bold;">2</span><span style="color:#333333;">);</span>
            r<span style="color:#333333;">.</span><span style="color:#0000CC;">setWidth</span><span style="color:#333333;">(</span><span style="color:#0000DD;font-weight:bold;">3</span><span style="color:#333333;">);</span>
            <span style="color:#008800;font-weight:bold;">assert</span><span style="color:#333333;">(</span>r<span style="color:#333333;">.</span><span style="color:#0000CC;">getArea</span><span style="color:#333333;">()</span> <span style="color:#333333;">==</span> <span style="color:#0000DD;font-weight:bold;">6</span><span style="color:#333333;">);</span>
            System<span style="color:#333333;">.</span><span style="color:#0000CC;">out</span><span style="color:#333333;">.</span><span style="color:#0000CC;">println</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;Area est: &quot;</span> <span style="color:#333333;">+</span> r<span style="color:#333333;">.</span><span style="color:#0000CC;">getArea</span><span style="color:#333333;">());</span>
        <span style="color:#333333;">}</span></pre></div><br><p> L&#39;auteur de modifyRectangle a supposé que la modification de la largeur d&#39;un rectangle laissait sa hauteur inchangée. </p><p> L&#39;auteur de modifyRectangle était en droit de supposer que sa méthode fonctionnerait correctement sur un Rectangle. </p><p> Square a enfreint la règle des LSP. Rectangle ne peut être remplacé par Square sans que le code ne change radicalement </p></div>`,2),au=[ru];function cu(e,t){return h(),_("div",lu,au)}const du=m(iu,[["render",cu]]),pu={},uu={class:"slide"},fu=$(`<div class="heading">Inheritance - composition au lieu de l&#39;héritage</div><div class="content"><div class="flex-container" style="overflow-y:scroll;height:100%;"><div style="width:50%;"><h2>Héritage</h2><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">Vehicle</span> <span style="color:#333333;">{</span>
                <span style="color:#008800;font-weight:bold;">protected</span> <span style="color:#333399;font-weight:bold;">int</span> numWheels<span style="color:#333333;">;</span>
                <span style="color:#008800;font-weight:bold;">protected</span> <span style="color:#333399;font-weight:bold;">int</span> numSeats<span style="color:#333333;">;</span>
                
                <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#333399;font-weight:bold;">void</span> <span style="color:#0066BB;font-weight:bold;">start</span><span style="color:#333333;">()</span> <span style="color:#333333;">{</span>
                    System<span style="color:#333333;">.</span><span style="color:#0000CC;">out</span><span style="color:#333333;">.</span><span style="color:#0000CC;">println</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;Starting vehicle...&quot;</span><span style="color:#333333;">);</span>
                <span style="color:#333333;">}</span>
            <span style="color:#333333;">}</span>

            <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">Car</span> <span style="color:#008800;font-weight:bold;">extends</span> Vehicle <span style="color:#333333;">{</span>
                <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#0066BB;font-weight:bold;">Car</span><span style="color:#333333;">()</span> <span style="color:#333333;">{</span>
                    numWheels <span style="color:#333333;">=</span> <span style="color:#0000DD;font-weight:bold;">4</span><span style="color:#333333;">;</span>
                    numSeats <span style="color:#333333;">=</span> <span style="color:#0000DD;font-weight:bold;">5</span><span style="color:#333333;">;</span>
                <span style="color:#333333;">}</span>
            <span style="color:#333333;">}</span>

            <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">Truck</span> <span style="color:#008800;font-weight:bold;">extends</span> Vehicle <span style="color:#333333;">{</span>
                <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#0066BB;font-weight:bold;">Truck</span><span style="color:#333333;">()</span> <span style="color:#333333;">{</span>
                    numWheels <span style="color:#333333;">=</span> <span style="color:#0000DD;font-weight:bold;">6</span><span style="color:#333333;">;</span>
                    numSeats <span style="color:#333333;">=</span> <span style="color:#0000DD;font-weight:bold;">3</span><span style="color:#333333;">;</span>
                <span style="color:#333333;">}</span>
            <span style="color:#333333;">}</span></pre></div></div><div style="width:48%;"><h2>Composition</h2><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">Vehicle</span> <span style="color:#333333;">{</span>
                <span style="color:#008800;font-weight:bold;">private</span> <span style="color:#333399;font-weight:bold;">int</span> numWheels<span style="color:#333333;">;</span>
                <span style="color:#008800;font-weight:bold;">private</span> <span style="color:#333399;font-weight:bold;">int</span> numSeats<span style="color:#333333;">;</span>
                
                <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#0066BB;font-weight:bold;">Vehicle</span><span style="color:#333333;">(</span><span style="color:#333399;font-weight:bold;">int</span> numWheels<span style="color:#333333;">,</span> <span style="color:#333399;font-weight:bold;">int</span> numSeats<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
                    <span style="color:#008800;font-weight:bold;">this</span><span style="color:#333333;">.</span><span style="color:#0000CC;">numWheels</span> <span style="color:#333333;">=</span> numWheels<span style="color:#333333;">;</span>
                    <span style="color:#008800;font-weight:bold;">this</span><span style="color:#333333;">.</span><span style="color:#0000CC;">numSeats</span> <span style="color:#333333;">=</span> numSeats<span style="color:#333333;">;</span>
                <span style="color:#333333;">}</span>
                
                <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#333399;font-weight:bold;">void</span> <span style="color:#0066BB;font-weight:bold;">start</span><span style="color:#333333;">()</span> <span style="color:#333333;">{</span>
                    System<span style="color:#333333;">.</span><span style="color:#0000CC;">out</span><span style="color:#333333;">.</span><span style="color:#0000CC;">println</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;Starting vehicle...&quot;</span><span style="color:#333333;">);</span>
                <span style="color:#333333;">}</span>
            <span style="color:#333333;">}</span>

            <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">Car</span> <span style="color:#333333;">{</span>
                <span style="color:#008800;font-weight:bold;">private</span> Vehicle vehicle<span style="color:#333333;">;</span>
                
                <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#0066BB;font-weight:bold;">Car</span><span style="color:#333333;">()</span> <span style="color:#333333;">{</span>
                    vehicle <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">new</span> Vehicle<span style="color:#333333;">(</span><span style="color:#0000DD;font-weight:bold;">4</span><span style="color:#333333;">,</span> <span style="color:#0000DD;font-weight:bold;">5</span><span style="color:#333333;">);</span>
                <span style="color:#333333;">}</span>
                
                <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#333399;font-weight:bold;">void</span> <span style="color:#0066BB;font-weight:bold;">start</span><span style="color:#333333;">()</span> <span style="color:#333333;">{</span>
                    vehicle<span style="color:#333333;">.</span><span style="color:#0000CC;">start</span><span style="color:#333333;">();</span>
                <span style="color:#333333;">}</span>
            <span style="color:#333333;">}</span>

            <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">Truck</span> <span style="color:#333333;">{</span>
                <span style="color:#008800;font-weight:bold;">private</span> Vehicle vehicle<span style="color:#333333;">;</span>
                
                <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#0066BB;font-weight:bold;">Truck</span><span style="color:#333333;">()</span> <span style="color:#333333;">{</span>
                    vehicle <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">new</span> Vehicle<span style="color:#333333;">(</span><span style="color:#0000DD;font-weight:bold;">6</span><span style="color:#333333;">,</span> <span style="color:#0000DD;font-weight:bold;">3</span><span style="color:#333333;">);</span>
                <span style="color:#333333;">}</span>
                
                <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#333399;font-weight:bold;">void</span> <span style="color:#0066BB;font-weight:bold;">start</span><span style="color:#333333;">()</span> <span style="color:#333333;">{</span>
                    vehicle<span style="color:#333333;">.</span><span style="color:#0000CC;">start</span><span style="color:#333333;">();</span>
                <span style="color:#333333;">}</span>
            <span style="color:#333333;">}</span></pre></div></div></div></div>`,2),hu=[fu];function _u(e,t){return h(),_("div",uu,hu)}const mu=m(pu,[["render",_u]]),gu={},vu={class:"slide"},yu=$(`<div class="heading">Inheritance - composition au lieu de l&#39;héritage</div><div class="content"><div class="flex-container" style="overflow-y:scroll;height:100%;"><div style="width:40%;"><h2>L&#39;héritage viole l&#39;encapsulation</h2><br><p> une sous-classe dépend des détails d&#39;implémentation de sa superclasse pour fonctionner correctement. L&#39;implémentation de la superclasse peut changer d&#39;une version à l&#39;autre et si c&#39;est le cas, la sous-classe peut se briser, même si son code n&#39;a pas été touché. </p><p> Comme exemple, nous écrivons une variante de HashSet qui comptabilise le nombre de tentatives d&#39;insertion d&#39;éléments et exporte un accesseur pour ce comptage. </p></div><div style="width:58%;"><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            <span style="color:#888888;">//Cassé - Utilisation inappropriée de l&#39;héritage !</span>
            <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">InstrumentedHashSet</span><span style="color:#333333;">&lt;</span>E<span style="color:#333333;">&gt;</span> <span style="color:#008800;font-weight:bold;">extends</span> HashSet<span style="color:#333333;">&lt;</span>E<span style="color:#333333;">&gt;</span> <span style="color:#333333;">{</span>
              <span style="color:#888888;">// Nombre de tentatives d&#39;insertion d&#39;éléments</span>
              <span style="color:#008800;font-weight:bold;">private</span> <span style="color:#333399;font-weight:bold;">int</span> addCount <span style="color:#333333;">=</span> <span style="color:#0000DD;font-weight:bold;">0</span><span style="color:#333333;">;</span>

              <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#0066BB;font-weight:bold;">InstrumentedHashSet</span><span style="color:#333333;">(</span><span style="color:#333399;font-weight:bold;">int</span> initCap<span style="color:#333333;">,</span> <span style="color:#333399;font-weight:bold;">float</span> loadFactor<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
                <span style="color:#008800;font-weight:bold;">super</span><span style="color:#333333;">(</span>initCap<span style="color:#333333;">,</span> loadFactor<span style="color:#333333;">);</span>
              <span style="color:#333333;">}</span>
              <span style="color:#555555;font-weight:bold;">@Override</span>
              <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#333399;font-weight:bold;">boolean</span> <span style="color:#0066BB;font-weight:bold;">add</span><span style="color:#333333;">(</span>E e<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
                addCount<span style="color:#333333;">++;</span>
                <span style="color:#008800;font-weight:bold;">return</span> <span style="color:#008800;font-weight:bold;">super</span><span style="color:#333333;">.</span><span style="color:#0000CC;">add</span><span style="color:#333333;">(</span>e<span style="color:#333333;">);</span>
              <span style="color:#333333;">}</span>
              <span style="color:#555555;font-weight:bold;">@Override</span>
              <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#333399;font-weight:bold;">boolean</span> <span style="color:#0066BB;font-weight:bold;">addAll</span><span style="color:#333333;">(</span>Collection<span style="color:#333333;">&lt;?</span> <span style="color:#008800;font-weight:bold;">extends</span> E<span style="color:#333333;">&gt;</span> c<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
                addCount <span style="color:#333333;">+=</span> c<span style="color:#333333;">.</span><span style="color:#0000CC;">size</span><span style="color:#333333;">();</span>
                <span style="color:#008800;font-weight:bold;">return</span> <span style="color:#008800;font-weight:bold;">super</span><span style="color:#333333;">.</span><span style="color:#0000CC;">addAll</span><span style="color:#333333;">(</span>c<span style="color:#333333;">);</span>
              <span style="color:#333333;">}</span>
              <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#333399;font-weight:bold;">int</span> <span style="color:#0066BB;font-weight:bold;">getAddCount</span><span style="color:#333333;">()</span> <span style="color:#333333;">{</span>
                <span style="color:#008800;font-weight:bold;">return</span> addCount<span style="color:#333333;">;</span>
              <span style="color:#333333;">}</span>
            <span style="color:#333333;">}</span></pre></div></div></div></div>`,2),bu=[yu];function wu(e,t){return h(),_("div",vu,bu)}const $u=m(gu,[["render",wu]]),xu={},Pu={class:"slide"},Su=a("div",{class:"heading"},"Inheritance - composition au lieu de l'héritage",-1),Cu=a("div",{class:"content"},[a("p",null,"Cette classe semble raisonnable, mais elle ne fonctionne pas."),a("div",{class:"iFrame-container","data-link":"https://replit.com/@DupondDupont/CompOverInheritance?embed=1"},[a("iframe",{src:"lightswitch.html",width:"100%",height:"97%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),Du=[Su,Cu];function qu(e,t){return h(),_("div",Pu,Du)}const Eu=m(xu,[["render",qu]]),Tu={},Lu={class:"slide"},Au=$('<div class="heading">Inheritance - composition au lieu de l&#39;héritage</div><div class="content"><h2>Ce qui s&#39;est passé?</h2><p> En interne, la méthode addAll de HashSet est implémentée au-dessus de la méthode add. HashSet ne documente pas ce détail d&#39;implémentation. </p><h2>Options?</h2><br><h3>Pas de surcharge de addAll</h3><p><span style="font-size:2rem;">↪</span> le fait que addAll utilise sa méthode interne &quot;add&quot; peut changer, ce qui casserait à nouveau notre classe </p><br><h3> Surcharge la méthode addAll pour itérer sur la collection spécifiée, en appelant la méthode &quot;add&quot; une fois pour chaque élément </h3><p><span style="font-size:2rem;">↪</span> n&#39;est pas toujours possible car certaines méthodes ne peuvent être implémentées sans accès à des champs privés inaccessibles à la sous-classe. </p></div>',2),Iu=[Au];function Bu(e,t){return h(),_("div",Lu,Iu)}const Nu=m(Tu,[["render",Bu]]),Ou={},Mu={class:"slide"},ju=a("div",{class:"heading"},"Inheritance - composition au lieu de l'héritage",-1),Fu=a("div",{class:"content"},[a("p",null," Il est plus facile de faire de la composition. Plus précisément, c'est un decorator class "),a("div",{class:"iFrame-container","data-link":"https://replit.com/@DupondDupont/CompOverInheritanceSmallFix?embed=1"},[a("iframe",{src:"lightswitch.html",width:"100%",height:"97%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),ku=[ju,Fu];function Ju(e,t){return h(),_("div",Mu,ku)}const Hu=m(Ou,[["render",Ju]]),Ru="/conception/assets/wrap-2ec31e2e.svg",Vu={},zu={class:"slide"},Uu=$('<div class="heading">Wrapper Design Patterns</div><div class="content"><p> Ce que nous venons de faire est une wrapper classe (simple). Il s&#39;agit d&#39;un modèle de conception courant. </p><h3>Types de Wrapper patterns</h3><br><h3>Adapter</h3><p><span style="font-size:2rem;">↪</span> Un adaptateur traduit l&#39;interface d&#39;une classe pour la faire correspondre à une autre. </p><br><h3>Proxy pattern</h3><p><span style="font-size:2rem;">↪</span> le Proxy pattern contrôle l&#39;accès à un objet. Le Proxy pattern peut ajouter des comportements supplémentaires, tels que des contrôles de sécurité, avant d&#39;appeler les méthodes de l&#39;objet réel. </p><br><h3>Decorator</h3><p><span style="font-size:2rem;">↪</span> un décorateur améliore le comportement d&#39;une classe existante. </p><img src="'+Ru+'" class="logo" style="left:80%;top:75%;height:25%;"></div>',2),Wu=[Uu];function Ku(e,t){return h(),_("div",zu,Wu)}const Qu=m(Vu,[["render",Ku]]),Xu={},Yu={class:"slide"},Gu=a("div",{class:"heading"},"Wrapper Design Patterns - Forwarding Decorator",-1),Zu=a("div",{class:"content"},[a("p",null," Le forwarding pattern n'a de sens que si j'ai plusieurs implémentations différentes. "),a("div",{class:"iFrame-container","data-link":"https://replit.com/@DupondDupont/CompOverInheritanceFixed?embed=1"},[a("iframe",{src:"lightswitch.html",width:"100%",height:"97%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),ef=[Gu,Zu];function tf(e,t){return h(),_("div",Yu,ef)}const sf=m(Xu,[["render",tf]]),nf={},of={class:"slide"},lf=a("div",{class:"heading"},"Wrapper Design Patterns - Adapter pattern",-1),rf=a("div",{class:"content"},[a("p",null," bon lorsque l'on veut réutiliser un code ancien dans notre application sans modifier le code d'origine "),a("div",{class:"iFrame-container","data-link":"https://replit.com/@DupondDupont/Adapter-pattern?embed=1"},[a("iframe",{src:"lightswitch.html",width:"100%",height:"97%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),af=[lf,rf];function cf(e,t){return h(),_("div",of,af)}const df=m(nf,[["render",cf]]),pf={},uf={class:"slide"},ff=a("div",{class:"heading"},"Wrapper Design Patterns - Proxy pattern",-1),hf=a("div",{class:"content"},[a("p",null," Nous l'utilisons ici pour avoir une version simplifiée d'un objet complexe ou lourd "),a("div",{class:"iFrame-container","data-link":"https://replit.com/@DupondDupont/ProxyPattern?embed=1"},[a("iframe",{src:"lightswitch.html",width:"100%",height:"97%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),_f=[ff,hf];function mf(e,t){return h(),_("div",uf,_f)}const gf=m(pf,[["render",mf]]),vf={},yf={class:"slide"},bf=a("div",{class:"heading"},"Inheritance - composition au lieu de l'héritage",-1),wf=a("div",{class:"content"},[a("p",null," Exercice : ici, la fenêtre s'étend du Rectangle. Pouvez-vous briser l'héritage et utiliser la composition ? "),a("div",{class:"iFrame-container","data-link":"https://replit.com/@DupondDupont/WindowRectangleInheritance?embed=1"},[a("iframe",{src:"lightswitch.html",width:"100%",height:"97%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),$f=[bf,wf];function xf(e,t){return h(),_("div",yf,$f)}const Pf=m(vf,[["render",xf]]),Sf="/conception/assets/windowInheritance-2ffd33b1.svg",Cf="/conception/assets/windowComp-8a7ae1a3.svg",Df={},qf={class:"slide"},Ef=$('<div class="heading">Inheritance - composition au lieu de l&#39;héritage</div><div class="content"><div class="flex-container"><div style="width:47%;"><p> Exercice : ici, la fenêtre s&#39;étend du Rectangle. Pouvez-vous briser l&#39;héritage et utiliser la composition ? </p><br><a href="./exercices/composition/composition-exercice-1.zip" download="composition-exercice-1.zip"><img src="'+Re+'" style="width:10%;">Download zip exercice</a></div><div style="width:50%;"><img src="'+Sf+'" style="width:100%;"><img src="'+Cf+'" style="width:100%;"></div></div></div>',2),Tf=[Ef];function Lf(e,t){return h(),_("div",qf,Tf)}const Af=m(Df,[["render",Lf]]),If="/conception/assets/3tier-0c251071.svg",Bf={},Nf={class:"slide"},Of=$('<div class="heading">Architecture 3 Tiers</div><div class="content"><div class="flex-container"><div style="width:50%;"><h2>Présentation Tier</h2><ul><li>L&#39;affichage au &quot;tier&quot; du client</li></ul><br><h2>Middle Tier/Application tier</h2><ul><li>Les traitement métiers</li><li>Le code de manipulation de la base de données</li></ul><br><h2>Data tier</h2><ul><li>Les traitement métiers</li><li>Le code de manipulation de la base de données</li></ul><br><p> Si le serveur de base de données et le serveur d&#39;applications web se trouvent sur la même machine, il s&#39;agit d&#39;un système à deux tier (niveaux). </p></div><div style="width:48%;"><img src="'+If+'" style="width:100%;"></div></div></div>',2),Mf=[Of];function jf(e,t){return h(),_("div",Nf,Mf)}const Ff=m(Bf,[["render",jf]]),kf="/conception/assets/presentationSuit-63e72c0d.svg",Jf={},Hf={class:"slide"},Rf=$('<div class="heading">Architecture 3 Tiers</div><div class="content"><div class="flex-container"><div style="width:65%;"><h2>Presentation tier</h2><br><ol><li><p>Peut fonctionner sur différentes plates-formes</p><ul><li>Navigateurs web</li><li>desktop applications</li></ul></li><br><li><p>Langues</p><ul><li>souvent développés à l&#39;aide de HTML, CSS et JavaScript</li><li> Les applications de bureau peuvent être écrites dans différents langages de programmation en fonction de la plate-forme </li></ul></li></ol></div><div style="width:30%;"><img src="'+kf+'" style="width:100%;"></div></div></div>',2),Vf=[Rf];function zf(e,t){return h(),_("div",Hf,Vf)}const Uf=m(Jf,[["render",zf]]),Wf="/conception/assets/middleTiers-5ad791f2.svg",Kf={},Qf={class:"slide"},Xf=$('<div class="heading">Architecture 3 Tiers</div><div class="content"><div class="flex-container"><div style="width:65%;"><h2>MiddleTiers (Application tier)</h2><br><ol><li><p>Cœur d&#39;une application</p></li><br><li><p>Traitement des données</p><ul><li> Traite les informations collectées au &quot;tier&quot; de la présentation (presentation-tier) </li><li>Modifie les données au &quot;tier&quot; des données (data-tier)</li></ul></li><br><li><p>Langues</p><ul><li> Il est généralement développé en utilisant Python, Java, Perl, PHP ou Ruby. </li></ul></li></ol></div><div style="width:35%;"><img src="'+Wf+'" style="width:100%;"></div></div></div>',2),Yf=[Xf];function Gf(e,t){return h(),_("div",Qf,Yf)}const Zf=m(Kf,[["render",Gf]]),eh="/conception/assets/datatier-3c72ced1.svg",th={},sh={class:"slide"},nh=$('<div class="heading">Architecture 3 Tiers</div><div class="content"><div class="flex-container"><div style="width:65%;"><h2>Data tier</h2><br><ol><li><p>les données sont stockées et gérées</p></li><br><li><p>Relational Database Management System</p><ul><li> PostgreSQL, MySQL, MariaDB, Oracle, DB2 et Microsoft SQL Server </li></ul></li><br><li><p>NoSQL database server</p><ul><li>Cassandra, CouchDB, et MongoDB</li></ul></li><br><li><p> Le tier de présentation et le tier de données ne peuvent pas communiquer directement l&#39;un avec l&#39;autre. </p></li></ol></div><div style="width:35%;"><img src="'+eh+'" style="width:100%;"></div></div></div>',2),oh=[nh];function ih(e,t){return h(),_("div",sh,oh)}const lh=m(th,[["render",ih]]),mt="/conception/assets/thumbs-up-df94cb9b.svg",rh={},ah={class:"slide"},ch=$('<div class="heading">Architecture 3 Tiers - Avantages</div><div class="content"><ol><li><p>Séparation des fonctionnalités</p> Chaque tiers peut fonctionner sur un système d&#39;exploitation et une plate-forme de serveur distincts </li><br><li><p>Développement plus rapide</p> Chaque &quot;tier&quot; peut être développé simultanément par différentes équipes </li><br><li><p>Amélioration de l&#39;extensibilité (Scalability)</p> Chaque tier peut être étendu indépendamment des autres, selon les besoins </li><br><li><p>Amélioration de la fiabilité</p> Une panne à un tiers est moins susceptible d&#39;avoir un impact sur la disponibilité ou les performances des autres tiers </li><br><li><p>Amélioration de la sécurité</p> un &quot;tier&quot; d&#39;application bien conçu peut fonctionner comme une sorte de pare-feu interne, empêchant les injections SQL et d&#39;autres exploits malveillants </li></ol><img src="'+mt+'" style="height:40%;top:15%;left:75%;" class="logo"></div>',2),dh=[ch];function ph(e,t){return h(),_("div",ah,dh)}const uh=m(rh,[["render",ph]]),fh="/conception/assets/onion-d19e26b6.svg",hh={},_h={class:"slide"},mh=$('<div class="heading">Layering</div><div class="content"><div class="flex-container"><div style="width:65%;"><h3> Outre la séparation d&#39;un projet en &quot;tiers&quot; (niveaus), nous pouvons séparer un &quot;tier&quot; (niveau) en layers (couches). </h3><br><p>Et devinez les noms des principales layers (couches)</p><h3>- Présentation layer</h3><h3>- Domaine</h3><h3>- Data-Source/Data access layer</h3><br><p> Cela ressemble à l&#39;idée des 3 tiers. Mais ne vous y trompez pas, les layers ne sont pas des tiers. </p></div><div style="width:33%;"><img src="'+fh+'" style="width:100%;"></div></div></div>',2),gh=[mh];function vh(e,t){return h(),_("div",_h,gh)}const yh=m(hh,[["render",vh]]),bh="/conception/assets/3tier-withlayers-42b5c535.svg",wh={},$h={class:"slide"},xh=$('<div class="heading">Layering - Tier vs. layer</div><div class="content"><div class="flex-container"><div style="width:35%;"><p> Dans les discussions sur l&#39;Architecture 3 Tiers, le terme &quot;layer&quot; est souvent utilisé de manière interchangeable - et erronée - pour &quot;tier&quot;. </p><p>Reprenons le graphique de l&#39;Architecture 3 Tiers, mais étendu.</p><br><h3> La différence est importante, car les layers (couches) ne peuvent pas offrir les mêmes avantages que les Tiers (niveaux) </h3></div><div style="width:63%;"><img src="'+bh+'" style="width:99%;"></div></div></div>',2),Ph=[xh];function Sh(e,t){return h(),_("div",$h,Ph)}const Ch=m(wh,[["render",Sh]]),Co="/conception/assets/multilayered-db5e52de.svg",Dh={},qh={class:"slide"},Eh=a("div",{class:"heading"},"Layering - Jakarta EE",-1),Th=a("div",{class:"content"},[a("h3",null," C'est vers cette architecture que nous nous dirigeons (Pour le middle-tier) "),a("br"),a("p",null," Les architectures Jakarata EE peuvent devenir très complexes, mais on n'a pas le temps, alors on fait simple. "),a("img",{src:Co,style:{width:"65%"}})],-1),Lh=[Eh,Th];function Ah(e,t){return h(),_("div",qh,Lh)}const Ih=m(Dh,[["render",Ah]]),Bh={},Nh={class:"slide"},Oh=a("div",{class:"heading"},"Jakarta EE/ Java EE/ J2EE Platform",-1),Mh=a("div",{class:"content"},[a("h2",null,"Créer une application web Quelques questions …"),a("br"),a("ul",null,[a("p",null,"- Quelle architecture logicielle ?"),a("p",null,"- Comment assurer le passage à l'échelle (how to scale up)"),a("p",null," - Comment implémenter le contrôle d'accès (sécurité, plusieurs utilisateurs, login …) "),a("p",null,"- Comment gérer la persistance (Sans être lié à un vendeur de BD)"),a("p",null,"- Comment garantir l'atomicité des transactions ?"),a("p",null,"- Réutiliser du code existant")])],-1),jh=[Oh,Mh];function Fh(e,t){return h(),_("div",Nh,jh)}const kh=m(Bh,[["render",Fh]]),Jh={},Hh={class:"slide"},Rh=$('<div class="heading">Jakarta EE/ Java EE/ J2EE Platform</div><div class="content"><h2>Proposition Jakarta EE</h2><br><h3>Séparation claire</h3><p><span style="font-size:1.6rem;">↪</span> architectures en couches</p><br><h3>Fournit les services transversaux</h3><p><span style="font-size:1.6rem;">↪</span> Persistance, Sécurité, transaction … </p><br><h3>Fournit des frameworks standards</h3><p><span style="font-size:1.6rem;">↪</span> JSP, JSF, JPA, EJB, … choix du fournisseur de l&#39;implémentation </p><br><h3>Autorise l&#39;utilisation d&#39;autres frameworks</h3><p><span style="font-size:1.6rem;">↪</span> Struts, Spring …</p><br></div>',2),Vh=[Rh];function zh(e,t){return h(),_("div",Hh,Vh)}const Uh=m(Jh,[["render",zh]]),Wh={},Kh={class:"slide"},Qh=$('<div class="heading">Java SE (Java 2 Standard Edition/J2SE)</div><div class="content"><p> Avant de commencer à parler de Jakarta EE/Java EE/J2EE, je voudrais préciser ce qu&#39;est Java SE/J2SE/Java 2 Standart Edition. </p><p> Java SE fournit les fonctionnalités du langage Java ainsi que les bibliothèques de base nécessaires au développement Java. </p><table><thead><tr><th>Function</th><th>Nom du paquet</th></tr></thead><tbody><tr><td>GUI</td><td>java.awt.*, javax.swing.*</td></tr><tr><td>Accès aux bases de données</td><td>java.sql.*</td></tr><tr><td>Accès aux répertoires</td><td>javax.naming.*</td></tr><tr><td>CORBA</td><td>javax.rmi.CORBA.*</td></tr><tr><td>Sécurité</td><td>javax.security.*</td></tr><tr><td>Entrée/Sortie</td><td>javax.io.*</td></tr></tbody></table></div>',2),Xh=[Qh];function Yh(e,t){return h(),_("div",Kh,Xh)}const Gh=m(Wh,[["render",Yh]]),Zh={},e0={class:"slide"},t0=$('<div class="heading"> Historique - Architecture Jakarta EE/ Java EE/ J2EE Platform </div><div class="content"><p> Sun a lancé une initiative visant à unifier les normes des différentes technologies Java au sein d&#39;une plate-forme unique. </p><table><thead><tr><th>Nom du component</th><th>Description</th></tr></thead><tbody><tr><td>Servlet</td><td>gérer les demandes et les réponses HTTP.</td></tr><tr><td>Java Server Pages (JSP)</td><td> Les fichiers JSP sont des pages HTML contenant du code Java intégré qui peut être exécuté sur un serveur web. </td></tr><tr><td>Enterprise Java Bean (EJB)</td><td> fournir la persistance, le traitement des affaires, le traitement des transactions et les capacités de traitement distribué pour les applications d&#39;entreprise. des capacités de traitement distribué pour les applications d&#39;entreprise </td></tr><tr><td>Java Database Connectivity (JDBC)</td><td> Cette API donne aux programmeurs de rendre leurs applications Java indépendantes du fournisseur de la base de données. </td></tr><tr><td>Java Messaging Service (JMS)</td><td> JMS fournit une API Java standard pour l&#39;utilisation d&#39;un logiciel intermédiaire orienté message (MOM) pour les types de messagerie d&#39;entreprise point à point et publication/abonnement. </td></tr></tbody></table></div>',2),s0=[t0];function n0(e,t){return h(),_("div",e0,s0)}const o0=m(Zh,[["render",n0]]),i0="/conception/assets/container-341ac5aa.svg",l0={},r0={class:"slide"},a0=$('<div class="heading">Historique - j2ee Architecture</div><div class="content"><div class="flex-container"><div style="width:50%;"><h3>Web container (ou Servlet container)</h3><p><span style="font-size:1.6rem;">↪</span> Les servlets et les JSP fournissent des mécanismes pour la préparation dynamique du contenu, et le formatage liés à la présentation. </p><h3>Applet container</h3><p><span style="font-size:1.6rem;">↪</span> Complètement mort depuis Java 11 </p><h3>Application client container</h3><p><span style="font-size:1.6rem;">↪</span> semi mort depuis Java 11 (JNLP, openwebstart) </p><h3>EJB container</h3><p><span style="font-size:1.6rem;">↪</span> Les composants EJB, ou enterprise beans, sont de deux types : les session beans et les entity beans. </p></div><div style="width:50%;"><img src="'+i0+'" style="width:100%;"></div></div></div>',2),c0=[a0];function d0(e,t){return h(),_("div",r0,c0)}const p0=m(l0,[["render",d0]]),u0="/conception/assets/containerj2ee-675ac919.svg",f0={},h0={class:"slide"},_0=a("div",{class:"heading"},"Historique - j2ee Architecture",-1),m0=a("div",{class:"content"},[a("p",null,` C'est ainsi que ces conteneurs communiquaient entre eux. Chaque conteneur peut etre séparé par un "tier" (niveau) différent. `),a("img",{src:u0,style:{width:"80%"}})],-1),g0=[_0,m0];function v0(e,t){return h(),_("div",h0,g0)}const y0=m(f0,[["render",v0]]),b0="/conception/assets/containerj2eeTechnology-4ccd148a.svg",Do="/conception/assets/Apache_Tomcat_logo-23738a85.svg",w0={},$0={class:"slide"},x0=$('<div class="heading">Historique - j2ee Architecture</div><div class="content"><p> Normalement, tous les conteneurs sont des technologies distinctes. Sauf que les serveurs d&#39;application ont aujourd&#39;hui de multiples composants et ne sont donc pas de purs conteneurs web ou ejb. </p><div class="flex-container"><div style="width:75%;"><img src="'+b0+'" style="width:100%;"></div><div style="width:20%;"><h3>Exemple de serveur web pur avec support JSP/servlet</h3><br><img src="'+Do+'" style="width:75%;"><h3>Apache Tomcat</h3></div></div></div>',2),P0=[x0];function S0(e,t){return h(),_("div",$0,P0)}const C0=m(w0,[["render",S0]]),D0="/conception/assets/containerj2eeTechnologyDeaths-4886f632.svg",q0={},E0={class:"slide"},T0=a("div",{class:"heading"},"Historique - j2ee Architecture",-1),L0=a("div",{class:"content"},[a("p",null," Il reste OpenWebStart si vous voulez vraiment avoir une implémentation de Application Client container. OpenWebStart sert principalement à soutenir les logiciels existants/legacy. "),a("img",{src:D0,style:{width:"77%"}})],-1),A0=[T0,L0];function I0(e,t){return h(),_("div",E0,A0)}const B0=m(q0,[["render",I0]]),N0="/conception/assets/containerj2eeTechnologyToday-b596e705.svg",O0={},M0={class:"slide"},j0=a("div",{class:"heading"},"Historique - j2ee Architecture",-1),F0=a("div",{class:"content"},[a("p",null," Ce qui nous amène à la manière dont la plupart des applications Jakarta EE/ Java EE sont mises en œuvre aujourd'hui. "),a("img",{src:N0,style:{width:"100%"}})],-1),k0=[j0,F0];function J0(e,t){return h(),_("div",M0,k0)}const H0=m(O0,[["render",J0]]),R0="/conception/assets/containerj2eeServices-2a72b31a.svg",V0={},z0={class:"slide"},U0=a("div",{class:"heading"},"Historique - j2ee Architecture",-1),W0=a("div",{class:"content"},[a("p",null," Les conteneurs J2EE prennent en charge un certain nombre de services. Tous les services ne sont pas les mêmes pour tous les conteneurs. "),a("img",{src:R0,style:{width:"93%"}})],-1),K0=[U0,W0];function Q0(e,t){return h(),_("div",z0,K0)}const X0=m(V0,[["render",Q0]]),Y0={},G0={class:"slide"},Z0=$('<div class="heading">Layering - Jakarta EE</div><div class="content"><div class="flex-container"><div style="width:35%;"><p> Jetons un coup d&#39;œil à nos couches Jakarta EE de tout à l&#39;heure. Nous allons travailler sur chaque couche étape par étape. </p><br><p> Nous allons travailler du bas (couche DAO) vers le haut (couche Présentation). </p></div><div style="width:65%;"><img src="'+Co+'" style="width:100%;"></div></div></div>',2),e_=[Z0];function t_(e,t){return h(),_("div",G0,e_)}const s_=m(Y0,[["render",t_]]),n_="/conception/assets/multilayeredVO-61a24ce6.svg",o_={},i_={class:"slide"},l_=$('<div class="heading"> Value Object Layer - Data Transfer Object - Model Layer </div><div class="content"><div class="flex-container"><div style="width:33%;"><h2> Nous commencerons par la couche VO, également connue sous le nom de couche DTO ou couche Modèle. </h2><br></div><div style="width:63%;"><img src="'+n_+'" style="width:100%;"></div></div></div>',2),r_=[l_];function a_(e,t){return h(),_("div",i_,r_)}const c_=m(o_,[["render",a_]]),d_="/conception/assets/PersonClassDia-94b84bba.svg",p_={},u_={class:"slide"},f_=$(`<div class="heading"> Value Object Layer - Data Transfer Object - Model Layer </div><div class="content"><div class="flex-container" style="overflow-y:scroll;height:100%;"><div style="width:75%;"><p> En règle générale, une VO/DTO possède des accesseurs et des mutateurs, mais pas grand-chose d&#39;autre. </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            public <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">Person</span> {
                private <span style="color:#007020;">long</span> personNum;
                private String firstName;
                private String lastName;
                private List<span style="color:#333333;">&lt;</span>String<span style="color:#333333;">&gt;</span> phoneNumbers <span style="color:#333333;">=</span> new ArrayList<span style="color:#333333;">&lt;</span>String<span style="color:#333333;">&gt;</span>();

                public Person() {}
                
                public Person(<span style="color:#007020;">long</span> personNum, String firstName, String lastName) {
                    <span style="color:#007020;">super</span>();
                    this<span style="color:#333333;">.</span>personNum <span style="color:#333333;">=</span> personNum;
                    this<span style="color:#333333;">.</span>firstName <span style="color:#333333;">=</span> firstName;
                    this<span style="color:#333333;">.</span>lastName <span style="color:#333333;">=</span> lastName;
                }

                public <span style="color:#007020;">long</span> getPersonNum() {
                    <span style="color:#008800;font-weight:bold;">return</span> personNum;
                }

                public void setPersonNum(<span style="color:#007020;">long</span> personNum) {
                    this<span style="color:#333333;">.</span>personNum <span style="color:#333333;">=</span> personNum;
                }

                public String getFirstName() {
                    <span style="color:#008800;font-weight:bold;">return</span> firstName;
                }

                public void setFirstName(String firstName) {
                    this<span style="color:#333333;">.</span>firstName <span style="color:#333333;">=</span> firstName;
                }

                public String getLastName() {
                    <span style="color:#008800;font-weight:bold;">return</span> lastName;
                }

                public void setLastName(String lastName) {
                    this<span style="color:#333333;">.</span>lastName <span style="color:#333333;">=</span> lastName;
                }

                public List<span style="color:#333333;">&lt;</span>String<span style="color:#333333;">&gt;</span> getPhoneNumbers() {
                    <span style="color:#008800;font-weight:bold;">return</span> phoneNumbers;
                }

                public void setPhoneNumbers(List<span style="color:#333333;">&lt;</span>String<span style="color:#333333;">&gt;</span> phoneNumbers) {
                    this<span style="color:#333333;">.</span>phoneNumbers <span style="color:#333333;">=</span> phoneNumbers;
                }

            }
            </pre></div></div><div style="width:17%;"><img src="`+d_+'" style="width:100%;"></div></div></div>',2),h_=[f_];function __(e,t){return h(),_("div",u_,h_)}const m_=m(p_,[["render",__]]),g_="/conception/assets/multilayeredDAO-6a4b06db.svg",v_={},y_={class:"slide"},b_=$('<div class="heading">Data Access Object Layer</div><div class="content"><div class="flex-container"><div style="width:33%;"><h2>Vient ensuite le Data Access Object Layer</h2><br></div><div style="width:65%;"><img src="'+g_+'" style="width:100%;"></div></div></div>',2),w_=[b_];function $_(e,t){return h(),_("div",y_,w_)}const x_=m(v_,[["render",$_]]),P_="/conception/assets/daoLayer-83ce115f.svg",S_={},C_={class:"slide"},D_=$('<div class="heading">Data Access Object Layer</div><div class="content"><div class="flex-container"><div style="width:40%;"><p> Les objets d&#39;accès aux données (DAO) gèrent l&#39;accès à un stockage persistant d&#39;un certain type. </p><br><p> En général, le stockage utilisé est une base de données relationnelle, mais les DAO peuvent également gérer des fichiers, des documents XML et d&#39;autres types de stockage persistant. </p><h2>Data Persistence Methods</h2><br><p> Les principales méthodes de persistance sont aujourd&#39;hui JDBC, JPA et JDO. Il y en avait deux autres, mais elles sont mortes :( RIP. </p></div><div style="width:54%;"><img src="'+P_+'" style="width:100%;"></div></div></div>',2),q_=[D_];function E_(e,t){return h(),_("div",C_,q_)}const T_=m(S_,[["render",E_]]),Ke="/conception/assets/thumbs-middle-d9165b5a.svg",L_="/conception/assets/thumbs-down-a3d51a10.svg",A_={},I_={class:"slide"},B_=$('<div class="heading">Data Access Object Layer</div><div class="content"><h2>Data Persistence Methods</h2><br><table class="GeneratedTable"><thead><tr><th>Objectif</th><th>JDBC</th><th>JDO</th><th>JPA</th></tr></thead><tbody><tr><td>Minimiser la courbe d&#39;apprentissage</td><td><img src="'+mt+'" style="width:20%;"></td><td><img src="'+Ke+'" style="width:20%;"></td><td><img src="'+Ke+'" style="width:20%;"></td></tr><tr><td> Minimiser le code et les fichiers de configuration écrits et maintenus </td><td><img src="'+L_+'" style="width:20%;"></td><td><img src="'+Ke+'" style="width:20%;"></td><td><img src="'+Ke+'" style="width:20%;"></td></tr><tr><td>Maximiser la capacité de réglage</td><td><img src="'+mt+'" style="width:20%;"></td><td><img src="'+Ke+'" style="width:20%;"></td><td><img src="'+Ke+'" style="width:20%;"></td></tr><tr><td>Maximiser la portabilité du code</td><td><img src="'+Ke+'" style="width:20%;"></td><td><img src="'+mt+'" style="width:20%;"></td><td><img src="'+mt+'" style="width:20%;"></td></tr><tr><td>Gérable via JTA</td><td>oui</td><td>oui</td><td>oui</td></tr></tbody></table><br><p> JTA est une API permettant de gérer transaction commits et le rollbacks (retour en arrière des transactions). </p></div>',2),N_=[B_];function O_(e,t){return h(),_("div",I_,N_)}const M_=m(A_,[["render",O_]]),j_="/conception/assets/daoLayerAPI-907b6bc1.svg",F_={},k_={class:"slide"},J_=$('<div class="heading">Data Access Object Layer</div><div class="content"><div class="flex-container"><div style="width:48%;"><p> JPA et JDO utilisent sous le capot JDBC pour de nombreuses connexions. </p><p> Cependant, JPA ne concerne que les SGBDR (RDBMS), tandis que JDO prend en charge d&#39;autres systèmes de base de données, tels que les bases de données d&#39;objets, et peut même prendre en charge un XML Datastore. </p><p> Je peux également éviter JDO et JPA et me contenter d&#39;utiliser l&#39;API de niveau inférieur JDBC </p></div><div style="width:50%;"><img src="'+j_+'" style="width:100%;"></div></div></div>',2),H_=[J_];function R_(e,t){return h(),_("div",k_,H_)}const V_=m(F_,[["render",R_]]),z_="/conception/assets/daoPerson-8e18aa5b.svg",U_={},W_={class:"slide"},K_=$('<div class="heading">Data Access Object Layer</div><div class="content"><div class="flex-container"><div style="width:40%;"><p> J&#39;ai deux façons d&#39;accéder aux personnes stockées avec cette application. L&#39;une est un stockage XML et l&#39;autre est un stockage en mémoire. </p><p> Exercice: Que pensez-vous de créer une interface pour les deux afin que le service soit moins dépendant d&#39;une implémentation concrète et que je puisse facilement passer de l&#39;un à l&#39;autre ? </p><p>mvn datanucleus:enhance if bytecode generation does not work</p><a href="./exercices/dao/DAO-exercice-1.zip" download="DAO-exercice-1.zip"><img src="'+Re+'" style="width:10%;">Download zip exercice</a></div><div style="width:57%;"><img src="'+z_+'" style="width:100%;"></div></div></div>',2),Q_=[K_];function X_(e,t){return h(),_("div",W_,Q_)}const Y_=m(U_,[["render",X_]]),G_="/conception/assets/daoInterface-950aa918.svg",Z_={},em={class:"slide"},tm=a("div",{class:"heading"},"Data Access Object Layer",-1),sm=a("div",{class:"content"},[a("p",null," Voyez comment nous pouvons créer une interface pour les deux stockages de données. L'interface PersonDAO définit ce qu'une implémentation doit pouvoir faire. PersonInMemoryStore et PersonJDO remplissent ce contrat et nous suivons la règle DIP. "),a("img",{src:G_,style:{width:"80%"}})],-1),nm=[tm,sm];function om(e,t){return h(),_("div",em,nm)}const im=m(Z_,[["render",om]]),lm="/conception/assets/DAOBankAccount-1076ec68.svg",rm={},am={class:"slide"},cm=$('<div class="heading">Data Access Object Layer</div><div class="content"><div class="flex-container"><div style="width:34%;"><p> Exercice: Je souhaite ajouter un compte bancaire à mon modèle. Pouvez-vous implémenter tout ce qui est rose dans le diagramme de classes ? </p><p> Bonus : pour les plus rapides, pouvez-vous ajouter le BankAccountJDO dans le code? </p><a href="./exercices/dao/DAO-exercice-2.zip" download="DAO-exercice-2.zip"><img src="'+Re+'" style="width:10%;">Download zip exercice</a></div><div style="width:65%;"><img src="'+lm+'" style="width:100%;"></div></div></div>',2),dm=[cm];function pm(e,t){return h(),_("div",am,dm)}const um=m(rm,[["render",pm]]),fm="/conception/assets/PersonService-dff47538.svg",hm="/conception/assets/multilayeredBO-5779d6be.svg",_m={},mm={class:"slide"},gm=$('<div class="heading">Business Logic Layer</div><div class="content"><div class="flex-container"><div style="width:35%;"><p> Les objets de la couche logique d&#39;entreprise combinent des données avec des règles, des contraintes et des activités d&#39;entreprise. </p><br><img src="'+fm+'" style="width:90%;"></div><div style="width:67%;"><img src="'+hm+'" style="width:100%;"></div></div></div>',2),vm=[gm];function ym(e,t){return h(),_("div",mm,vm)}const bm=m(_m,[["render",ym]]),wm="/conception/assets/PersonAccountDelete-0fb6f852.svg",$m="/conception/assets/AccountPersonDelete-c738f19b.svg",xm={},Pm={class:"slide"},Sm=$('<div class="heading">Business Logic Layer</div><div class="content"><div class="flex-container"><div style="width:79%;"><h2>Voici ma règle de gestion</h2><br><p> Lorsqu&#39;une personne est supprimée, le compte dont elle est propriétaire est également supprimé. Une personne peut également être un conseiller bancaire. Nous ne voulons donc pas supprimer le compte bancaire mais définir le champ bankConsultant d&#39;un tel compte bancaire à &quot;null&quot;. </p><p> Puisque nous avons compris la couche DAO, nous allons travailler avec une couche DAO simplifiée qui est qu&#39;un in-memory-store a partir de maintenant. </p></div><div style="width:19%;"><img src="'+wm+'" style="width:100%;margin-bottom:5%;"><hr><img src="'+$m+'" style="width:100%;margin-top:5%;"></div></div></div>',2),Cm=[Sm];function Dm(e,t){return h(),_("div",Pm,Cm)}const qm=m(xm,[["render",Dm]]),Em={},Tm={class:"slide"},Lm=$(`<div class="heading">Business Logic Layer</div><div class="content"><h2>Indications</h2><p> Certaines classes et interfaces doivent être modifiées. Plus important encore, nous devons développer le BankAccountDAO. PersonService doit maintenant être en mesure de supprimer des personnes et des comptes bancaires. Bonne chance ! </p><div class="flex-container"><div style="width:39%;"><h3>PersonService</h3><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            public <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">PersonService</span>{
	
              final PersonDAO dao;
              final BankAccountDAO bankAccDao;

              public void remove(Person person) {
                  <span style="color:#333333;">...</span>
              }
            }</pre></div><a href="./exercices/service/Service-exercice-1.zip" download="Service-exercice-1.zip"><img src="`+Re+`" style="width:10%;">Download zip exercice</a></div><div style="width:59%;"><h3>BankAccountDAO</h3><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">interface</span> <span style="color:#BB0066;font-weight:bold;">BankAccountDAO</span> <span style="color:#333333;">{</span>
     
                <span style="color:#008800;font-weight:bold;">public</span> BankAccount <span style="color:#0066BB;font-weight:bold;">findByAccountOwner</span><span style="color:#333333;">(</span>Person owner<span style="color:#333333;">);</span>
                
                <span style="color:#008800;font-weight:bold;">public</span> BankAccount <span style="color:#0066BB;font-weight:bold;">findByConsultant</span><span style="color:#333333;">(</span>Person consultant<span style="color:#333333;">);</span>

                <span style="color:#333333;">...</span>
            <span style="color:#333333;">}</span></pre></div></div></div></div>`,2),Am=[Lm];function Im(e,t){return h(),_("div",Tm,Am)}const Bm=m(Em,[["render",Im]]),Nm={},Om={class:"slide"},Mm=$(`<div class="heading">Business Logic Layer - Validation</div><div class="content"><h2>Validation</h2><p> La validation est normalement effectuée sur le VO/DTO/modèle. Dans ce cas, notre Value Object layer et notre Business Logic layer se chevauchent. Ce n&#39;est pas grave. La validation d&#39;un objet doit être proche de l&#39;endroit où il est défini. </p><h3>Examinons un exemple simple d&#39;une telle validation</h3><div style="overflow-y:scroll;height:75%;"><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">          <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">Person</span> <span style="color:#333333;">{</span>
              <span style="color:#008800;font-weight:bold;">private</span> <span style="color:#333399;font-weight:bold;">long</span> personNum<span style="color:#333333;">;</span>
              <span style="color:#008800;font-weight:bold;">private</span> String firstName<span style="color:#333333;">;</span>
              <span style="color:#008800;font-weight:bold;">private</span> String lastName<span style="color:#333333;">;</span>
              <span style="color:#008800;font-weight:bold;">private</span> String socialSecurityNumber<span style="color:#333333;">;</span>
  
              <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#0066BB;font-weight:bold;">Person</span><span style="color:#333333;">(</span><span style="color:#333399;font-weight:bold;">long</span> personNum<span style="color:#333333;">,</span> String firstName<span style="color:#333333;">,</span> String lastName<span style="color:#333333;">,</span> String socialSecurityNumber<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
                  <span style="color:#008800;font-weight:bold;">this</span><span style="color:#333333;">.</span><span style="color:#0000CC;">personNum</span> <span style="color:#333333;">=</span> personNum<span style="color:#333333;">;</span>
                  <span style="color:#008800;font-weight:bold;">this</span><span style="color:#333333;">.</span><span style="color:#0000CC;">firstName</span> <span style="color:#333333;">=</span> firstName<span style="color:#333333;">;</span>
                  <span style="color:#008800;font-weight:bold;">this</span><span style="color:#333333;">.</span><span style="color:#0000CC;">lastName</span> <span style="color:#333333;">=</span> lastName<span style="color:#333333;">;</span>
                  <span style="color:#008800;font-weight:bold;">this</span><span style="color:#333333;">.</span><span style="color:#0000CC;">socialSecurityNumber</span> <span style="color:#333333;">=</span> socialSecurityNumber<span style="color:#333333;">;</span>
                  validateSocialSecurityNumber<span style="color:#333333;">(</span>socialSecurityNumber<span style="color:#333333;">);</span>
              <span style="color:#333333;">}</span>
  
              <span style="color:#008800;font-weight:bold;">private</span> <span style="color:#333399;font-weight:bold;">void</span> <span style="color:#0066BB;font-weight:bold;">validateSocialSecurityNumber</span><span style="color:#333333;">(</span>String socialSecurityNumber<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
                  <span style="color:#008800;font-weight:bold;">if</span> <span style="color:#333333;">(</span>socialSecurityNumber <span style="color:#333333;">==</span> <span style="color:#008800;font-weight:bold;">null</span> <span style="color:#333333;">||</span> <span style="color:#333333;">!</span>socialSecurityNumber<span style="color:#333333;">.</span><span style="color:#0000CC;">matches</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;\\\\d{3}-\\\\d{2}-\\\\d{4}&quot;</span><span style="color:#333333;">))</span> <span style="color:#333333;">{</span>
                      <span style="color:#008800;font-weight:bold;">throw</span> <span style="color:#008800;font-weight:bold;">new</span> <span style="color:#0066BB;font-weight:bold;">IllegalArgumentException</span><span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;Le numéro de sécurité sociale doit être au format ###-##-####.&quot;</span><span style="color:#333333;">);</span>
                  <span style="color:#333333;">}</span>
              <span style="color:#333333;">}</span>
              <span style="color:#888888;">// getters et setters omis par souci de concision</span>
          <span style="color:#333333;">}</span></pre></div></div></div>`,2),jm=[Mm];function Fm(e,t){return h(),_("div",Om,jm)}const km=m(Nm,[["render",Fm]]),Jm={},Hm={class:"slide"},Rm=$('<div class="heading">Business Logic Layer - Validation</div><div class="content"><p> nous pouvons également utiliser <a href="https://javaee.github.io/javaee-spec/javadocs/javax/validation/constraints/package-summary.html">javax.validation</a> et avoir des annotations prédéfinies. </p><table class="GeneratedTable"><thead><tr><th>Annotation</th><th>Description</th></tr></thead><tbody><tr><td>@NotNull</td><td> Valide que la valeur de la propriété annotée n&#39;est pas nulle </td></tr><tr><td>@AssertTrue</td><td>valide que la valeur de la propriété annotée est vraie</td></tr><tr><td>@Size</td><td> Valide que la valeur de la propriété annotée a une taille comprise entre les attributs min et max </td></tr><tr><td>@Max</td><td> Valide que la propriété annotée a une valeur inférieure ou égale à l&#39;attribut value </td></tr><tr><td>@Email</td><td> Valide que la propriété annotée est une adresse électronique valide </td></tr><tr><td>@NotBlank</td><td> valide que la propriété n&#39;est pas nulle ou qu&#39;il n&#39;y a pas d&#39;espace blanc. </td></tr><tr><td>@Positive et @PositiveOrZero</td><td> ne peut s&#39;appliquer qu&#39;aux valeurs textuelles et valide que la propriété n&#39;est pas nulle ou qu&#39;il n&#39;y a pas d&#39;espace blanc. </td></tr><tr><td>@Negative et @NegativeOrZero</td><td> s&#39;appliquent aux valeurs numériques et valident qu&#39;elles sont strictement négatives, ou négatives y compris 0. </td></tr><tr><td>@Past et @PastOrPresent</td><td> valider qu&#39;une valeur de date se situe dans le passé ou dans le passé incluant le présent. </td></tr><tr><td>@Future et @FutureOrPresent</td><td> valider qu&#39;une valeur de date se situe dans le futur, ou dans le futur incluant le présent. </td></tr></tbody></table></div>',2),Vm=[Rm];function zm(e,t){return h(),_("div",Hm,Vm)}const Um=m(Jm,[["render",zm]]),Wm={},Km={class:"slide"},Qm=$(`<div class="heading">Business Logic Layer - Validation</div><div class="content"><p>Voyons à quoi ressemblerait notre classe Personne annotée.</p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;overflow-y:scroll;height:90%;"><pre style="margin:0;line-height:125%;">        <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">Person</span> <span style="color:#333333;">{</span>

            <span style="color:#555555;font-weight:bold;">@Min</span><span style="color:#333333;">(</span><span style="color:#0000DD;font-weight:bold;">1</span><span style="color:#333333;">)</span>
            <span style="color:#008800;font-weight:bold;">private</span> <span style="color:#333399;font-weight:bold;">long</span> personNum<span style="color:#333333;">;</span>
          
            <span style="color:#555555;font-weight:bold;">@NotNull</span>
            <span style="color:#008800;font-weight:bold;">private</span> String firstName<span style="color:#333333;">;</span>
            
            <span style="color:#555555;font-weight:bold;">@NotNull</span>
            <span style="color:#008800;font-weight:bold;">private</span> String lastName<span style="color:#333333;">;</span>
            
            <span style="color:#555555;font-weight:bold;">@Min</span><span style="color:#333333;">(</span>value <span style="color:#333333;">=</span> <span style="color:#0000DD;font-weight:bold;">18</span><span style="color:#333333;">,</span> message <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&quot;Vous devez être âgé d&#39;au moins 18 ans&quot;</span><span style="color:#333333;">)</span>
            <span style="color:#008800;font-weight:bold;">private</span> <span style="color:#333399;font-weight:bold;">int</span> age<span style="color:#333333;">;</span>

            <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#0066BB;font-weight:bold;">Person</span><span style="color:#333333;">()</span> <span style="color:#333333;">{}</span>
            
            <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#0066BB;font-weight:bold;">Person</span><span style="color:#333333;">(</span><span style="color:#333399;font-weight:bold;">long</span> personNum<span style="color:#333333;">,</span> String firstName<span style="color:#333333;">,</span> String lastName<span style="color:#333333;">,</span> <span style="color:#333399;font-weight:bold;">int</span> age<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
                <span style="color:#008800;font-weight:bold;">this</span><span style="color:#333333;">.</span><span style="color:#0000CC;">personNum</span> <span style="color:#333333;">=</span> personNum<span style="color:#333333;">;</span>
                <span style="color:#008800;font-weight:bold;">this</span><span style="color:#333333;">.</span><span style="color:#0000CC;">firstName</span> <span style="color:#333333;">=</span> firstName<span style="color:#333333;">;</span>
                <span style="color:#008800;font-weight:bold;">this</span><span style="color:#333333;">.</span><span style="color:#0000CC;">lastName</span> <span style="color:#333333;">=</span> lastName<span style="color:#333333;">;</span>
                <span style="color:#008800;font-weight:bold;">this</span><span style="color:#333333;">.</span><span style="color:#0000CC;">setAge</span><span style="color:#333333;">(</span>age<span style="color:#333333;">);</span>
            <span style="color:#333333;">}</span>
            <span style="color:#333333;">...</span>
        <span style="color:#333333;">}</span></pre></div></div>`,2),Xm=[Qm];function Ym(e,t){return h(),_("div",Km,Xm)}const Gm=m(Wm,[["render",Ym]]),Zm={},eg={class:"slide"},tg=$(`<div class="heading">Détour - Annotations</div><div class="content"><p> Les annotations sont des métadonnées de code. Elles contiennent des informations sur le code lui-même. Auparavant, nous faisions souvent cela en XML </p><h3>Informations pour le compilateur:</h3><p> pour que le compilateur produise des avertissements ou même des erreurs sur la base de différentes règles. </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;margin-top:-10px;"><pre style="margin:0;line-height:125%;">        <span style="color:#555555;font-weight:bold;">@Override</span>
        <span style="color:#555555;font-weight:bold;">@SuppressWarnings</span><span style="color:#333333;">(</span> <span style="background-color:#fff0f0;">&quot;unused&quot;</span><span style="color:#333333;">)</span></pre></div><br><h3>Documentation:</h3><p>mesure la qualité du code ou génère des rapports automatiquement.</p><br><h3>Génération de code:</h3><p>générer automatiquement du code ou des fichiers XML.</p><br><h3>Runtime processing</h3><p> tests unitaires, injection de dépendances, validation, journalisation, accès aux données. </p></div>`,2),sg=[tg];function ng(e,t){return h(),_("div",eg,sg)}const og=m(Zm,[["render",ng]]),ig={},lg={class:"slide"},rg=$(`<div class="heading">Business Logic Layer - Validation</div><div class="content"><p>Il existe également des contraintes de méthode :</p><h3>Single Parameter Constraints</h3><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">        <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#333399;font-weight:bold;">void</span> <span style="color:#0066BB;font-weight:bold;">createReservation</span><span style="color:#333333;">(</span><span style="color:#555555;font-weight:bold;">@NotNull</span> <span style="color:#555555;font-weight:bold;">@Future</span> LocalDate begin<span style="color:#333333;">,</span>
          <span style="color:#555555;font-weight:bold;">@Min</span><span style="color:#333333;">(</span><span style="color:#0000DD;font-weight:bold;">1</span><span style="color:#333333;">)</span> <span style="color:#333399;font-weight:bold;">int</span> duration<span style="color:#333333;">,</span> <span style="color:#555555;font-weight:bold;">@NotNull</span> Customer customer<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>

        <span style="color:#888888;">// ...</span>
        <span style="color:#333333;">}</span></pre></div><br><h3>Return Value Constraints</h3><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">        <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">ReservationManagement</span> <span style="color:#333333;">{</span>

            <span style="color:#555555;font-weight:bold;">@NotNull</span>
            <span style="color:#555555;font-weight:bold;">@Size</span><span style="color:#333333;">(</span>min <span style="color:#333333;">=</span> <span style="color:#0000DD;font-weight:bold;">1</span><span style="color:#333333;">)</span>
            <span style="color:#008800;font-weight:bold;">public</span> List<span style="color:#333333;">&lt;</span><span style="color:#555555;font-weight:bold;">@NotNull</span> Customer<span style="color:#333333;">&gt;</span> getAllCustomers<span style="color:#333333;">()</span> <span style="color:#333333;">{</span>
                <span style="color:#008800;font-weight:bold;">return</span> <span style="color:#008800;font-weight:bold;">null</span><span style="color:#333333;">;</span>
            <span style="color:#333333;">}</span>
        <span style="color:#333333;">}</span></pre></div></div>`,2),ag=[rg];function cg(e,t){return h(),_("div",lg,ag)}const dg=m(ig,[["render",cg]]),pg={},ug={class:"slide"},fg=$(`<div class="heading">Business Logic Layer - Validation</div><div class="content"><p> Pas assez d&#39;annotations ? Pas grave, puisque nous pouvons faire nos propres validations. </p><h3>Exemple avec notre personne</h3><div class="flex-container"><div style="width:50%;"><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            <span style="color:#555555;font-weight:bold;">@Target</span><span style="color:#333333;">({</span> METHOD<span style="color:#333333;">,</span> FIELD<span style="color:#333333;">,</span> ANNOTATION_TYPE <span style="color:#333333;">})</span>
            <span style="color:#555555;font-weight:bold;">@Retention</span><span style="color:#333333;">(</span>RUNTIME<span style="color:#333333;">)</span>
            <span style="color:#555555;font-weight:bold;">@Constraint</span><span style="color:#333333;">(</span>validatedBy <span style="color:#333333;">=</span> AdultValidator<span style="color:#333333;">.</span><span style="color:#0000CC;">class</span><span style="color:#333333;">)</span>
            <span style="color:#555555;font-weight:bold;">@Documented</span>
            <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#555555;font-weight:bold;">@interface</span> Adult <span style="color:#333333;">{</span>

                String <span style="color:#0066BB;font-weight:bold;">message</span><span style="color:#333333;">()</span> <span style="color:#008800;font-weight:bold;">default</span> <span style="background-color:#fff0f0;">&quot;Vous devez être&quot;</span>
            <span style="color:#333333;">+</span><span style="background-color:#fff0f0;">&quot;âgé d&#39;au moins 18 ans&quot;</span><span style="color:#333333;">;</span>

                Class<span style="color:#333333;">&lt;?&gt;[]</span> groups<span style="color:#333333;">()</span> <span style="color:#008800;font-weight:bold;">default</span> <span style="color:#333333;">{};</span>

                Class<span style="color:#333333;">&lt;?</span> <span style="color:#008800;font-weight:bold;">extends</span> Payload<span style="color:#333333;">&gt;[]</span> payload<span style="color:#333333;">()</span> <span style="color:#008800;font-weight:bold;">default</span> <span style="color:#333333;">{};</span>

            <span style="color:#333333;">}</span></pre></div></div><div style="width:50%;"><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">AdultValidator</span> <span style="color:#008800;font-weight:bold;">implements</span>
                ConstraintValidator<span style="color:#333333;">&lt;</span>Adult<span style="color:#333333;">,</span> Integer<span style="color:#333333;">&gt;</span> <span style="color:#333333;">{</span>

                <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#333399;font-weight:bold;">void</span> <span style="color:#0066BB;font-weight:bold;">initialize</span><span style="color:#333333;">(</span>Adult constraint<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
                <span style="color:#333333;">}</span>

                <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#333399;font-weight:bold;">boolean</span> <span style="color:#0066BB;font-weight:bold;">isValid</span><span style="color:#333333;">(</span>Integer age<span style="color:#333333;">,</span>
                ConstraintValidatorContext context<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
                    <span style="color:#008800;font-weight:bold;">if</span> <span style="color:#333333;">(</span>age <span style="color:#333333;">==</span> <span style="color:#008800;font-weight:bold;">null</span><span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
                        <span style="color:#008800;font-weight:bold;">return</span> <span style="color:#008800;font-weight:bold;">false</span><span style="color:#333333;">;</span>
                    <span style="color:#333333;">}</span>
                    <span style="color:#008800;font-weight:bold;">return</span> age <span style="color:#333333;">&gt;=</span> <span style="color:#0000DD;font-weight:bold;">18</span><span style="color:#333333;">;</span>
                <span style="color:#333333;">}</span>
            <span style="color:#333333;">}</span></pre></div></div></div></div>`,2),hg=[fg];function _g(e,t){return h(),_("div",ug,hg)}const mg=m(pg,[["render",_g]]),gg={},vg={class:"slide"},yg=$(`<div class="heading">Architectural Component Layer/ Utilities</div><div class="content"><p> Nous pouvons maintenant utiliser notre validateur sur l&#39;âge des personnes. </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">        <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">Person</span> <span style="color:#333333;">{</span>
    
            <span style="color:#555555;font-weight:bold;">@Adult</span>
            <span style="color:#008800;font-weight:bold;">private</span> <span style="color:#333399;font-weight:bold;">int</span> age<span style="color:#333333;">;</span>
            <span style="color:#333333;">...</span>
        <span style="color:#333333;">}</span></pre></div><p> Pour vérifier manuellement la validation, nous devons procéder comme suit. (Beaucoup de frameworks font cette étape pour nous) </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">        Person person4 <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">new</span> Person<span style="color:#333333;">(</span><span style="color:#0000DD;font-weight:bold;">4L</span><span style="color:#333333;">,</span><span style="background-color:#fff0f0;">&quot;John&quot;</span><span style="color:#333333;">,</span> <span style="background-color:#fff0f0;">&quot;Doe&quot;</span><span style="color:#333333;">,</span> <span style="color:#0000DD;font-weight:bold;">17</span><span style="color:#333333;">);</span>
        ValidatorFactory factory <span style="color:#333333;">=</span> Validation<span style="color:#333333;">.</span><span style="color:#0000CC;">buildDefaultValidatorFactory</span><span style="color:#333333;">();</span>
        Validator validator <span style="color:#333333;">=</span> factory<span style="color:#333333;">.</span><span style="color:#0000CC;">getValidator</span><span style="color:#333333;">();</span>
        Set<span style="color:#333333;">&lt;</span>ConstraintViolation<span style="color:#333333;">&lt;</span>Person<span style="color:#333333;">&gt;&gt;</span> violations <span style="color:#333333;">=</span> validator<span style="color:#333333;">.</span><span style="color:#0000CC;">validate</span><span style="color:#333333;">(</span>person4<span style="color:#333333;">);</span>
        <span style="color:#008800;font-weight:bold;">for</span> <span style="color:#333333;">(</span>ConstraintViolation<span style="color:#333333;">&lt;</span>Person<span style="color:#333333;">&gt;</span> violation <span style="color:#333333;">:</span> violations<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
            System<span style="color:#333333;">.</span><span style="color:#0000CC;">out</span><span style="color:#333333;">.</span><span style="color:#0000CC;">println</span><span style="color:#333333;">(</span>violation<span style="color:#333333;">.</span><span style="color:#0000CC;">getMessage</span><span style="color:#333333;">());</span>
        <span style="color:#333333;">}</span></pre></div></div>`,2),bg=[yg];function wg(e,t){return h(),_("div",vg,bg)}const $g=m(gg,[["render",wg]]),xg="/conception/assets/multilayeredUtils-10a98146.svg",Pg={},Sg={class:"slide"},Cg=$('<div class="heading">Architectural Component Layer/ Utilities</div><div class="content"><div class="flex-container"><div style="width:35%;"><p> Parfois, le JDK n&#39;est pas fourni avec les utilitaires et les composants nécessaires pour le projet. Si vous identifiez des fonctionnalités qui peuvent être utilisées dans plusieurs projets (et qui ne sont pas dans le JDK) et qui ne s&#39;intègrent pas vraiment dans une autre couche, nous les plaçons dans la couche des utilitaires. </p><br></div><div style="width:65%;"><img src="'+xg+'" style="width:100%;"></div></div></div>',2),Dg=[Cg];function qg(e,t){return h(),_("div",Sg,Dg)}const Eg=m(Pg,[["render",qg]]),Tg={},Lg={class:"slide"},Ag=$(`<div class="heading">Architectural Component Layer/ Utilities</div><div class="content"><div class="flex-container"><div style="width:48%;"><p>Pourquoi ne pas extraire la validation?</p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">  <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">class</span> <span style="color:#BB0066;font-weight:bold;">Utils</span> <span style="color:#333333;">{</span>

    <span style="color:#008800;font-weight:bold;">public</span> <span style="color:#008800;font-weight:bold;">static</span> <span style="color:#333333;">&lt;</span>T<span style="color:#333333;">&gt;</span> String validate<span style="color:#333333;">(</span>T t<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
      String message <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&quot;&quot;</span><span style="color:#333333;">;</span>
      ValidatorFactory factory <span style="color:#333333;">=</span> Validation<span style="color:#333333;">.</span><span style="color:#0000CC;">buildDefaultValidatorFactory</span><span style="color:#333333;">();</span>
          Validator validator <span style="color:#333333;">=</span> factory<span style="color:#333333;">.</span><span style="color:#0000CC;">getValidator</span><span style="color:#333333;">();</span>
          Set<span style="color:#333333;">&lt;</span>ConstraintViolation<span style="color:#333333;">&lt;</span>T<span style="color:#333333;">&gt;&gt;</span> violations <span style="color:#333333;">=</span> validator<span style="color:#333333;">.</span><span style="color:#0000CC;">validate</span><span style="color:#333333;">(</span>t<span style="color:#333333;">);</span>
          <span style="color:#008800;font-weight:bold;">for</span> <span style="color:#333333;">(</span>ConstraintViolation<span style="color:#333333;">&lt;</span>T<span style="color:#333333;">&gt;</span> violation <span style="color:#333333;">:</span> violations<span style="color:#333333;">)</span> <span style="color:#333333;">{</span>
            message <span style="color:#333333;">+=</span> violation<span style="color:#333333;">.</span><span style="color:#0000CC;">getMessage</span><span style="color:#333333;">();</span>
          <span style="color:#333333;">}</span>
          <span style="color:#008800;font-weight:bold;">return</span> message<span style="color:#333333;">;</span>
    <span style="color:#333333;">}</span>
<span style="color:#333333;">}</span>
</pre></div></div><div style="width:48%;"><p>Voici comment nous pouvons l&#39;appeler</p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">
      Person person <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">new</span> Person<span style="color:#333333;">(</span><span style="background-color:#fff0f0;">&quot;Kilian&quot;</span><span style="color:#333333;">,</span> <span style="background-color:#fff0f0;">&quot;Schropp&quot;</span><span style="color:#333333;">,</span> <span style="color:#0000DD;font-weight:bold;">16</span><span style="color:#333333;">);</span>
      <span style="color:#008800;font-weight:bold;">final</span> String validationMessage <span style="color:#333333;">=</span> Utils<span style="color:#333333;">.</span><span style="color:#0000CC;">validate</span><span style="color:#333333;">(</span>person<span style="color:#333333;">);</span>
      </pre></div><br><p> Nous pouvons désormais utiliser la validation dans plusieurs couches et même dans différents projets, car elle est isolée du reste de l&#39;application. </p></div></div></div>`,2),Ig=[Ag];function Bg(e,t){return h(),_("div",Lg,Ig)}const Ng=m(Tg,[["render",Bg]]),Og="/conception/assets/multilayeredMVC-e73924bd.svg",Mg={},jg={class:"slide"},Fg=$('<div class="heading">Presentation Layer - MVC</div><div class="content"><div class="flex-container"><div style="width:32%;"><h2> Vient ensuite la couche de présentation. Nous verrons ici un autre concept de couche appelé MVC. </h2><br><p> Nous verrons également comment la couche de présentation est réalisée avec Servlet/JSP et avec les services Web. </p><br></div><div style="width:65%;"><img src="'+Og+'" style="width:100%;"></div></div></div>',2),kg=[Fg];function Jg(e,t){return h(),_("div",jg,kg)}const Hg=m(Mg,[["render",Jg]]),Rg="/conception/assets/mvc-7f8a057e.svg",Vg={},zg={class:"slide"},Ug=$('<div class="heading">Presentation Layer - MVC</div><div class="content"><div class="flex-container"><div style="width:60%;"><p> MVC divise l&#39;interaction entre l&#39;utilisateur et l&#39;interface en trois rôles distincts </p><h3>Trois variantes principales de MVC</h3><br><ul><li><h4>MVC (Model-View-Controller):</h4> la vue communique directement avec le modèle, ce qui peut conduire à un couplage étroit entre les deux </li><li><h4>MVP (Model-View-Presenter):</h4> le présentateur joue le rôle d&#39;intermédiaire entre la vue et le modèle. La vue est passive et ne communique pas directement avec le modèle. </li><li><h4>MVVM (Model-View-ViewModel):</h4> La principale différence avec le MVP est que la View est liée directement au ViewModel, de sorte que le ViewModel n&#39;a pas besoin d&#39;interagir avec la View par l&#39;intermédiaire d&#39;un Presenter. </li></ul></div><div style="width:40%;"><img src="'+Rg+'" style="width:99%;"></div></div></div>',2),Wg=[Ug];function Kg(e,t){return h(),_("div",zg,Wg)}const Qg=m(Vg,[["render",Kg]]),Xg={},Yg={class:"slide"},Gg=a("div",{class:"heading"},"Presentation Layer",-1),Zg=a("div",{class:"content"},[a("p",null," Examinons un petit exemple (naïf) qui met en œuvre les layers et MVC. (ensuite les défauts) "),a("div",{class:"iFrame-container","data-link":"https://replit.com/@DupondDupont/MVCPerson?embed=1"},[a("iframe",{src:"lightswitch.html",width:"100%",height:"97%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),ev=[Gg,Zg];function tv(e,t){return h(),_("div",Yg,ev)}const sv=m(Xg,[["render",tv]]),nv="/conception/assets/MVCPersons-1cbad554.svg",ov={},iv={class:"slide"},lv=$('<div class="heading">Presentation Layer</div><div class="content"><div class="flex-container"><div style="width:47%;"><p> Nous avons nos trois layers séparées et MVC ... mais respectons-nous la règle du DIP ? N&#39;est-ce pas la raison pour laquelle nous voulons des layers ? </p><br><h3>Oui, absolument!</h3><br><p>Pouvez-vous déjà me dire ce qu&#39;il faut faire ?</p></div><div style="width:52%;"><img src="'+nv+'" style="width:100%;"></div></div></div>',2),rv=[lv];function av(e,t){return h(),_("div",iv,rv)}const cv=m(ov,[["render",av]]),dv="/conception/assets/MVCPersonsDIP-8b46f4be.svg",pv={},uv={class:"slide"},fv=$('<div class="heading">Presentation Layer - Exercice</div><div class="content"><div class="flex-container"><div style="width:60%;"><p> Vous voyez que chaque couche est séparée par une interface, ce qui rend notre application extrêmement modulaire et flexible pour les changements futurs. </p><h2>Pouvez-vous implémenter les deux interfaces ?</h2><br><p> Bonus : Dans le PersonController j&#39;ai été un peu paresseux et il y a une ligne qui ne devrait pas être là. </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">            <span style="color:#333399;font-weight:bold;">long</span> id <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">this</span><span style="color:#333333;">.</span><span style="color:#0000CC;">service</span><span style="color:#333333;">.</span><span style="color:#0000CC;">size</span><span style="color:#333333;">()</span> <span style="color:#333333;">+</span> <span style="color:#0000DD;font-weight:bold;">1</span><span style="color:#333333;">;</span></pre></div><p> Le calcul de l&#39;identifiant d&#39;une personne est-il la tâche du contrôleur ? Pouvez-vous remanier le code et placer le calcul de l&#39;ID dans la bonne couche ? </p><a href="./exercices/mvc/MVC-exercice-1.zip" download="MVC-exercice-1.zip"><img src="'+Re+'" style="width:10%;">Download zip exercice</a></div><div style="width:37%;"><img src="'+dv+'" style="width:100%;"></div></div></div>',2),hv=[fv];function _v(e,t){return h(),_("div",uv,hv)}const mv=m(pv,[["render",_v]]),gv="/conception/assets/JSP-4fee759f.svg",vv={},yv={class:"slide"},bv=a("div",{class:"heading"},"Presentation Layer - JSP Java Server Pages",-1),wv=a("div",{class:"content"},[a("p",null," Java Server Pages mélange les balises HTML avec le code du langage de programmation Java. "),a("br"),a("img",{src:gv,style:{width:"93%"}})],-1),$v=[bv,wv];function xv(e,t){return h(),_("div",yv,$v)}const Pv=m(vv,[["render",xv]]),Sv={},Cv={class:"slide"},Dv=$(`<div class="heading">Presentation Layer - JSP Java Server Pages</div><div class="content"><h2>Syntax</h2><br><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">        <span style="color:#007700;">&lt;p&gt;</span>Compter jusqu&#39;à trois :<span style="color:#007700;">&lt;/p&gt;</span>
        <span style="color:#008800;font-weight:bold;">&lt;%</span> <span style="color:#008800;font-weight:bold;">for</span> <span style="color:#333333;">(</span><span style="color:#333399;font-weight:bold;">int</span> i<span style="color:#333333;">=</span><span style="color:#0000DD;font-weight:bold;">1</span><span style="color:#333333;">;</span> i<span style="color:#333333;">&lt;</span><span style="color:#0000DD;font-weight:bold;">4</span><span style="color:#333333;">;</span> i<span style="color:#333333;">++)</span> <span style="color:#333333;">{</span> <span style="color:#008800;font-weight:bold;">%&gt;</span>
            <span style="color:#007700;">&lt;p&gt;</span>Ce numéro est <span style="color:#008800;font-weight:bold;">&lt;%=</span> i <span style="color:#008800;font-weight:bold;">%&gt;</span>.<span style="color:#007700;">&lt;/p&gt;</span>
        <span style="color:#008800;font-weight:bold;">&lt;%</span> <span style="color:#333333;">}</span> <span style="color:#008800;font-weight:bold;">%&gt;</span>
        <span style="color:#007700;">&lt;p&gt;</span>D&#39;acc.<span style="color:#007700;">&lt;/p&gt;</span>
        </pre></div><br><p> Le résultat affiché dans le navigateur web de l&#39;utilisateur serait le suivant : </p><div style="background:#ffffff;overflow:auto;width:auto;border:solid gray;border-width:0.1em 0.1em 0.1em 0.8em;padding:0.2em 0.6em;"><pre style="margin:0;line-height:125%;">        Compter jusqu&#39;à trois :
        Ce nombre est 1.
        Ce nombre est 2.
        Ce chiffre est le 3.
        D&#39;acc.
        </pre></div></div>`,2),qv=[Dv];function Ev(e,t){return h(),_("div",Cv,qv)}const Tv=m(Sv,[["render",Ev]]),Lv="/conception/assets/jspproecss-3a1f77d9.svg",Av={},Iv={class:"slide"},Bv=a("div",{class:"heading"},"Presentation Layer - JSP Java Server Pages",-1),Nv=a("div",{class:"content"},[a("h2",null,"Processus de demande de l'utilisateur"),a("br"),a("img",{src:Lv,style:{width:"53%"}})],-1),Ov=[Bv,Nv];function Mv(e,t){return h(),_("div",Iv,Ov)}const jv=m(Av,[["render",Mv]]),Fv="/conception/assets/http-f212f5d2.svg",kv={},Jv={class:"slide"},Hv=a("div",{class:"heading"},"HTTP Protocol detour",-1),Rv=a("div",{class:"content"},[a("p",null," Les serveurs Web parlent le protocole HTTP, c'est pourquoi ils sont souvent appelés serveurs HTTP. Ces serveurs HTTP stockent les données de l'Internet et fournissent les données lorsqu'elles sont demandées par les clients HTTP. "),a("br"),a("img",{src:Fv,style:{width:"60%"}})],-1),Vv=[Hv,Rv];function zv(e,t){return h(),_("div",Jv,Vv)}const Uv=m(kv,[["render",zv]]),Wv="/conception/assets/httpMIME-04e74944.svg",Kv={},Qv={class:"slide"},Xv=$('<div class="heading">HTTP Protocol detour</div><div class="content"><p> Comme Internet héberge plusieurs milliers de types de données différents, HTTP marque soigneusement chaque objet transporté sur le Web avec une étiquette de format de données appelée type MIME. </p><div class="flex-container"><div style="width:45%;"><p> • Un document texte au format HTML serait étiqueté avec le type text/html </p><p> • Un document de texte ASCII simple serait étiqueté avec le type text/plain </p><p>• Une version JPEG d&#39;une image serait image/jpeg</p><p>• Une image au format GIF serait image/gif</p><p>• Un film Apple QuickTime serait video/quicktime.</p><p> • Une présentation Microsoft PowerPoint serait application/vnd.mspowerpoint </p></div><div style="width:50%;"><br><img src="'+Wv+'" style="width:100%;"></div></div></div>',2),Yv=[Xv];function Gv(e,t){return h(),_("div",Qv,Yv)}const Zv=m(Kv,[["render",Gv]]),ey="/conception/assets/URL-d330440e.svg",ty={},sy={class:"slide"},ny=a("div",{class:"heading"},"HTTP Protocol detour",-1),oy=a("div",{class:"content"},[a("p",null," Les URL décrivent l'emplacement spécifique d'une ressource sur un serveur particulier. Elles vous indiquent exactement comment aller chercher une ressource à partir d'un emplacement précis et fixe. "),a("br"),a("img",{src:ey,style:{width:"95%"}})],-1),iy=[ny,oy];function ly(e,t){return h(),_("div",sy,iy)}const ry=m(ty,[["render",ly]]),ay={},cy={class:"slide"},dy=$('<div class="heading">HTTP Protocol detour</div><div class="content"><p> Le protocole HTTP prend en charge plusieurs commandes de requête différentes, appelées méthodes HTTP. Chaque requête HTTP possède une méthode. La méthode indique au serveur l&#39;action à effectuer </p><br><table><tbody><tr><th>HTTP method</th><th>Description</th></tr><tr><td>GET</td><td>Envoyer une ressource nommée du serveur au client</td></tr><tr><td>POST</td><td> Envoyer les données du client dans une application passerelle serveur </td></tr><tr><td>PUT</td><td> Stocker les données du client dans une ressource serveur nommée </td></tr><tr><td>DELETE</td><td>Supprime la ressource nommée d&#39;un serveur.</td></tr><tr><td>HEAD</td><td> Envoyer uniquement les en-têtes HTTP de la réponse pour la ressource nommée. </td></tr></tbody></table></div>',2),py=[dy];function uy(e,t){return h(),_("div",cy,py)}const fy=m(ay,[["render",uy]]),hy={},_y={class:"slide"},my=$(`<div class="heading">HTTP Protocol detour</div><div class="content"><p> Ici, nous n&#39;envoyons pas de données de requête au serveur car nous récupérons une page HTML simple du serveur. </p><br><div class="codeblock"><pre style="margin:0;line-height:125%;">          GET <span style="color:#333333;">/</span>hello<span style="color:#333333;">.</span>htm HTTP<span style="color:#333333;">/</span><span style="color:#6600EE;font-weight:bold;">1.1</span>
          User<span style="color:#333333;">-</span>Agent: Mozilla<span style="color:#333333;">/</span><span style="color:#6600EE;font-weight:bold;">4.0</span> (compatible; MSIE5<span style="color:#333333;">.</span><span style="color:#4400EE;font-weight:bold;">01</span>; Windows NT)
          Host: www<span style="color:#333333;">.</span>tutorialspoint<span style="color:#333333;">.</span>com
          Accept<span style="color:#333333;">-</span>Language: en<span style="color:#333333;">-</span>us
          Accept<span style="color:#333333;">-</span>Encoding: gzip, deflate
          Connection: Keep<span style="color:#333333;">-</span>Alive</pre></div></div>`,2),gy=[my];function vy(e,t){return h(),_("div",_y,gy)}const yy=m(hy,[["render",vy]]),by={},wy={class:"slide"},$y=$('<div class="heading">HTTP Protocol detour</div><div class="content"><p> Chaque message de réponse HTTP est accompagné d&#39;un code d&#39;état. Ce code d&#39;état est un code numérique à trois chiffres qui indique au client si la demande a abouti ou si d&#39;autres actions sont nécessaires. </p><br><p>Liste abrégée des codes d&#39;état courants</p><table><tbody><tr><th>HTTP status code</th><th>Description</th></tr><tr><td>200</td><td>OK. Le document est retourné correctement.</td></tr><tr><td>404</td><td>Non trouvé. Impossible de trouver cette ressource.</td></tr><tr><td>302</td><td>Rediriger. Allez ailleurs pour obtenir la ressource.</td></tr><tr><td>500</td><td>Internal Server Error</td></tr></tbody></table></div>',2),xy=[$y];function Py(e,t){return h(),_("div",wy,xy)}const Sy=m(by,[["render",Py]]),Cy={},Dy={class:"slide"},qy=$(`<div class="heading">HTTP Protocol detour</div><div class="content"><p> Réponse HTTP à une demande de récupération de la page hello.html sur le serveur web. </p><br><div class="codeblock"><pre style="margin:0;line-height:125%;">          HTTP<span style="color:#333333;">/</span><span style="color:#6600EE;font-weight:bold;">1.1</span> <span style="color:#0000DD;font-weight:bold;">200</span> OK
          Date: Mon, <span style="color:#0000DD;font-weight:bold;">27</span> Jul <span style="color:#0000DD;font-weight:bold;">2009</span> <span style="color:#0000DD;font-weight:bold;">12</span>:<span style="color:#0000DD;font-weight:bold;">28</span>:<span style="color:#0000DD;font-weight:bold;">53</span> GMT
          Server: Apache<span style="color:#333333;">/</span><span style="color:#6600EE;font-weight:bold;">2.2</span><span style="color:#333333;">.</span><span style="color:#0000DD;font-weight:bold;">14</span> (Win32)
          Last<span style="color:#333333;">-</span>Modified: Wed, <span style="color:#0000DD;font-weight:bold;">22</span> Jul <span style="color:#0000DD;font-weight:bold;">2009</span> <span style="color:#0000DD;font-weight:bold;">19</span>:<span style="color:#0000DD;font-weight:bold;">15</span>:<span style="color:#0000DD;font-weight:bold;">56</span> GMT
          Content<span style="color:#333333;">-</span>Length: <span style="color:#0000DD;font-weight:bold;">88</span>
          Content<span style="color:#333333;">-</span>Type: text<span style="color:#333333;">/</span>html
          Connection: Closed

          <span style="color:#333333;">&lt;</span>html<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;</span>body<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;</span>h1<span style="color:#333333;">&gt;</span>Hello, World<span style="color:#FF0000;background-color:#FFAAAA;">!</span><span style="color:#333333;">&lt;/</span>h1<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;/</span>body<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;/</span>html<span style="color:#333333;">&gt;</span></pre></div></div>`,2),Ey=[qy];function Ty(e,t){return h(),_("div",Dy,Ey)}const Ly=m(Cy,[["render",Ty]]),Ay={},Iy={class:"slide"},By=$(`<div class="heading">HTTP Protocol detour</div><div class="content"><p> L&#39;exemple suivant montre un message de réponse HTTP affichant une condition d&#39;erreur lorsque le serveur web n&#39;a pas pu trouver la page demandée </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          HTTP<span style="color:#333333;">/</span><span style="color:#6600EE;font-weight:bold;">1.1</span> <span style="color:#0000DD;font-weight:bold;">404</span> Not Found
          Date: Sun, <span style="color:#0000DD;font-weight:bold;">18</span> Oct <span style="color:#0000DD;font-weight:bold;">2012</span> <span style="color:#0000DD;font-weight:bold;">10</span>:<span style="color:#0000DD;font-weight:bold;">36</span>:<span style="color:#0000DD;font-weight:bold;">20</span> GMT
          Server: Apache<span style="color:#333333;">/</span><span style="color:#6600EE;font-weight:bold;">2.2</span><span style="color:#333333;">.</span><span style="color:#0000DD;font-weight:bold;">14</span> (Win32)
          Content<span style="color:#333333;">-</span>Length: <span style="color:#0000DD;font-weight:bold;">230</span>
          Connection: Closed
          Content<span style="color:#333333;">-</span>Type: text<span style="color:#333333;">/</span>html; charset<span style="color:#333333;">=</span>iso<span style="color:#333333;">-</span><span style="color:#0000DD;font-weight:bold;">8859</span><span style="color:#333333;">-</span><span style="color:#0000DD;font-weight:bold;">1</span>
          <span style="color:#333333;">&lt;</span><span style="color:#FF0000;background-color:#FFAAAA;">!</span>DOCTYPE HTML PUBLIC <span style="background-color:#fff0f0;">&quot;-//IETF//DTD HTML 2.0//EN&quot;</span><span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;</span>html<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;</span>head<span style="color:#333333;">&gt;</span>
            <span style="color:#333333;">&lt;</span>title<span style="color:#333333;">&gt;</span><span style="color:#0000DD;font-weight:bold;">404</span> Not Found<span style="color:#333333;">&lt;/</span>title<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;/</span>head<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;</span>body<span style="color:#333333;">&gt;</span>
            <span style="color:#333333;">&lt;</span>p<span style="color:#333333;">&gt;</span>The requested URL <span style="color:#333333;">/</span>t<span style="color:#333333;">.</span>html was <span style="color:#000000;font-weight:bold;">not</span> found on this server<span style="color:#333333;">.&lt;/</span>p<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;/</span>body<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;/</span>html<span style="color:#333333;">&gt;</span></pre></div></div>`,2),Ny=[By];function Oy(e,t){return h(),_("div",Iy,Ny)}const My=m(Ay,[["render",Oy]]),jy="/conception/assets/stop-92820b2f.svg",Fy={},ky={class:"slide"},Jy=a("div",{class:"heading"},"HTTP Protocol detour",-1),Hy=a("div",{class:"content"},[a("p",null," Nous n'avons fait qu'effleurer la surface du protocole http. Nous pourrions passer une semaine entière à plonger dans les détails de la pile de protocoles. "),a("img",{src:jy,style:{width:"40%"}})],-1),Ry=[Jy,Hy];function Vy(e,t){return h(),_("div",ky,Ry)}const zy=m(Fy,[["render",Vy]]),Uy="/conception/assets/rabbithole-4a7d5b06.svg",Wy={},Ky={class:"slide"},Qy=$('<div class="heading">Web Server detour</div><div class="content"><p> Nous n&#39;avons pas repris le chemin de la programmation. Nous avons précisé que nous pouvons combiner HTML et Java dans un seul fichier (JSP). Je vous ai parlé de HTTP. Voyons maintenant ce qu&#39;est un serveur Web ou, dans une moindre forme, un serveur HTTP. </p><div class="flex-container"><div><img src="'+Uy+'" style="width:90%;"></div><div><br><p> Pour les explications suivantes, je vais utiliser Tomcat comme exemple. </p><img src="'+Do+'" style="width:50%;"></div></div></div>',2),Xy=[Qy];function Yy(e,t){return h(),_("div",Ky,Xy)}const Gy=m(Wy,[["render",Yy]]),Zy="/conception/assets/httptomcat-507d337f.svg",eb={},tb={class:"slide"},sb=a("div",{class:"heading"},"HTTP Protocol detour",-1),nb=a("div",{class:"content"},[a("p",null,[bt(" En regardant notre premier aperçu de http, voici ce qui se passe réellement. Un serveur ne peut pas résoudre une requête tout seul. "),a("b",null,"Le serveur ( machine/ordinateur )"),bt(" a besoin "),a("b",null,"d'une application ( Serveur Web/serveur HTTP )"),bt(" pour résoudre la demande. ")]),a("br"),a("img",{src:Zy,style:{width:"95%"}})],-1),ob=[sb,nb];function ib(e,t){return h(),_("div",tb,ob)}const lb=m(eb,[["render",ib]]),rb="/conception/assets/containerj2eeTechnologyTomcat-40479c1c.svg",ab={},cb={class:"slide"},db=a("div",{class:"heading"},"Web Server detour",-1),pb=a("div",{class:"content"},[a("p",null," Nous n'avons pas de serveur d'application complet. Cependant, Tomcat prend en charge un conteneur Web (JSP et servlet) et c'est suffisant pour l'instant. "),a("br"),a("img",{src:rb,style:{width:"95%"}})],-1),ub=[db,pb];function fb(e,t){return h(),_("div",cb,ub)}const hb=m(ab,[["render",fb]]),_b={},mb={class:"slide"},gb=$('<div class="heading">Presentation Layer - JSP Java Server Pages</div><div class="content"><h2> Voici notre application de gestion des personnes avec un contrôleur servlet et une vue JSP. </h2><br><h3> Il comprend toutes les couches et utilise un serveur tomcat intégré. </h3><br><p> Exercice: Pouvez-vous ajouter le modèle/DAO/service BankAccount au projet et créer les vues équivalentes ? </p><p> Bonus : Pouvez-vous ajouter la règle de gestion pour le compte bancaire ? (Lorsqu&#39;une personne est supprimée, le compte bancaire est supprimé.) </p><p> Bonus : Une personne ne peut pas être à la fois propriétaire et consultant d&#39;un compte bancaire. Pouvez-vous créer une règle de validation à l&#39;aide de javax.validation pour créer une contrainte ? </p><p> Bonus : WOW, Vous êtes vraiment allé loin, et si vous ajoutiez un JDO ou un JPA DAO ? </p><a href="./exercices/mvc/MVC-servlet-exercice-1.zip" download="MVC-servlet-exercice-1.zip"><img src="'+Re+'" style="width:7%;">Download zip exercice</a></div>',2),vb=[gb];function yb(e,t){return h(),_("div",mb,vb)}const bb=m(_b,[["render",yb]]),wb="/conception/assets/multilayeredREST-ac7b8d7a.svg",$b={},xb={class:"slide"},Pb=$('<div class="heading">Presentation Layer - Web Services</div><div class="content"><div class="flex-container"><div style="width:32%;"><h2> Pour l&#39;instant, nous ne commencerons pas par les services Web, qui feront l&#39;objet d&#39;un autre cours. </h2><br></div><div style="width:65%;"><img src="'+wb+'" style="width:100%;"></div></div></div>',2),Sb=[Pb];function Cb(e,t){return h(),_("div",xb,Sb)}const Db=m($b,[["render",Cb]]),qb={class:"container"},Eb=a("img",{src:dr,class:"logo"},null,-1),Tb={id:"presentation-area"},Lb={class:"presentation"},Ab=$('<section class="counter"><input type="number" id="index" name="index" min="1" max="119" value="1" style="width:40%;"> of 119 </section><section class="navigation"><button id="full-screen" class="btn-screen show"><span><b>⛶</b></span></button><button id="small-screen" class="btn-screen"><span><b>✖</b></span></button><button id="left-btn" class="btn"><span>❮</span></button><button id="right-btn" class="btn"><span>❯</span></button></section>',2),Ib=a("footer",null,[a("p",null,"Created by Kilian Schropp. ©C2LR 2023 ")],-1),Bb={__name:"App",setup(e){return(t,s)=>(h(),_("body",null,[a("div",qb,[Eb,a("div",Tb,[a("section",Lb,[u(mr),u(xr),u(Tr),u(Mr),u(Vr),u(Gr),u(ia),u(ua),u(ya),u(Ca),u(Ia),u(ka),u(Ua),u(Za),u(lc),u(uc),u(yc),u(Sc),u(Ac),u(kc),u(Kc),u(sd),u(dd),u(gd),u(xd),u(Td),u(Md),u(Vd),u(Gd),u(ip),u(fp),u(bp),u(Dp),u(Ip),u(kp),u(Wp),u(t3),u(a3),u(_3),u(x3),u(T3),u(j3),u(V3),u(Y3),u(ou),u(du),u(mu),u($u),u(Eu),u(Nu),u(Hu),u(Qu),u(sf),u(df),u(gf),u(Pf),u(Af),u(Ff),u(Uf),u(Zf),u(lh),u(uh),u(yh),u(Ch),u(Ih),u(kh),u(Uh),u(Gh),u(o0),u(p0),u(y0),u(C0),u(B0),u(H0),u(X0),u(s_),u(c_),u(m_),u(x_),u(T_),u(M_),u(V_),u(Y_),u(im),u(um),u(bm),u(qm),u(Bm),u(km),u(Um),u(Gm),u(og),u(dg),u(mg),u($g),u(Eg),u(Ng),u(Hg),u(Qg),u(sv),u(cv),u(mv),u(Pv),u(Tv),u(jv),u(Uv),u(Zv),u(ry),u(fy),u(yy),u(Sy),u(Ly),u(My),u(zy),u(Gy),u(lb),u(hb),u(bb),u(Db)]),Ab])]),Ib]))}};ar(Bb).mount("#app");let Xs=document.querySelectorAll(".slide"),de=document.querySelector(".slide.show");var Rt=document.querySelector("#index"),Cs=document.querySelector("#left-btn"),Ds=document.querySelector("#right-btn");let qo=document.querySelector("#presentation-area");var Ys=document.querySelector("#full-screen"),Gs=document.querySelector("#small-screen"),es=1,Zs=0;ts();function ts(){Fb(),Zs=Xs.length,Hb(),Nb(),Ob()}Cs.addEventListener("click",Mb);Ds.addEventListener("click",jb);Rt.addEventListener("change",Rb);Ys.addEventListener("click",kb);Gs.addEventListener("click",Jb);function Nb(){es==1?Cs.classList.remove("show"):Cs.classList.add("show")}function Ob(){es===Zs?Ds.classList.remove("show"):Ds.classList.add("show")}function Mb(){var e=de;de=de.previousElementSibling,e.classList.remove("show"),de.classList.add("show"),ts(),en(de)}function jb(){var e=de;de=de.nextElementSibling,e.classList.remove("show"),de.classList.add("show"),ts(),en(de)}function Fb(){let e=0;Xs.forEach(t=>{e++,t.classList.contains("show")&&(es=e)})}function kb(){qo.classList.add("full-screen"),Ys.classList.remove("show"),Gs.classList.add("show")}function Jb(){qo.classList.remove("full-screen"),Ys.classList.add("show"),Gs.classList.remove("show")}function Hb(){Rt.value=es,Rt.innerText=` of ${Zs}`}function Rb(){var e=de;de=Xs[Rt.value-1],e.classList.remove("show"),de.classList.add("show"),ts(),en(de)}function en(e){const t=e.getElementsByTagName("iframe")[0];if(t!=null){const s=t.parentElement;console.log(t.src),s!==void 0&&s.hasAttribute("data-link")&&t.src.includes("lightswitch")&&t.setAttribute("src",s.dataset.link)}}
